{"version":3,"file":"static/js/main~7c7e5959.17864a5b.js","mappings":"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","sources":["功能模块/基础设置/公用设置/方案选择/index.tsx","功能模块/基础设置/公用设置/目标选择/index.tsx","功能模块/基础设置/公用设置/延迟选择/index.tsx","功能模块/基础设置/公用设置/秘籍选择/index.tsx","功能模块/基础设置/公用设置/奇穴选择/index.tsx","功能模块/基础设置/公用设置/index.tsx","功能模块/基础设置/属性录入/index.tsx","功能模块/基础设置/index.tsx","功能模块/基础设置/增益面板/阵眼选择/index.tsx","功能模块/基础设置/属性录入/配装器/功能组件/五彩石选择/index.tsx","功能模块/基础设置/属性录入/配装器/功能组件/装备增益展示/index.tsx","功能模块/基础设置/属性录入/配装器/功能组件/面板展示/index.tsx","功能模块/基础设置/属性录入/配装器/头部组件/最佳附魔设置/index.tsx"],"sourcesContent":["import React from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 更新选中的方案数据 } from '@/store/data'\nimport { Select } from 'antd'\nimport { 触发秒伤计算 } from '@/计算模块/计算函数'\n\nfunction 方案选择() {\n  const dispatch = useAppDispatch()\n  const 当前方案名称 = useAppSelector((state) => state?.data?.当前方案名称)\n  const 全部方案数据 = useAppSelector((state) => state?.data?.全部方案数据)\n\n  const 切换方案 = (e) => {\n    dispatch(更新选中的方案数据(e))\n    dispatch(触发秒伤计算({ 是否更新显示计算结果: true }))\n  }\n\n  return (\n    <div className='common-item'>\n      <h1 className='common-label'>方案</h1>\n      <div className='common-content'>\n        <Select\n          className='current-project'\n          value={当前方案名称}\n          onChange={(v) => {\n            切换方案(v)\n          }}\n        >\n          {Object.keys(全部方案数据).map((item) => {\n            return (\n              <Select.Option value={item} key={item}>\n                {item}\n              </Select.Option>\n            )\n          })}\n        </Select>\n      </div>\n    </div>\n  )\n}\n\nexport default 方案选择\n","import React from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { Select } from 'antd'\nimport { 更新当前输出计算目标名称 } from '@/store/data'\nimport { 目标集合 } from '@/数据/常量'\nimport { 触发秒伤计算 } from '@/计算模块/计算函数'\n\nfunction 目标选择() {\n  const dispatch = useAppDispatch()\n  const 当前输出计算目标名称 = useAppSelector((state) => state?.data?.当前输出计算目标名称)\n\n  const 切换目标 = (v) => {\n    dispatch(更新当前输出计算目标名称(v))\n    dispatch(触发秒伤计算({ 是否更新显示计算结果: true }))\n  }\n\n  return (\n    <div className='common-item'>\n      <h1 className='common-label'>目标</h1>\n      <div className='common-content'>\n        <Select\n          className='current-boss'\n          value={当前输出计算目标名称}\n          onChange={(v) => {\n            切换目标(v)\n          }}\n        >\n          {目标集合.map((item) => {\n            return (\n              <Select.Option value={item?.名称} key={item.名称}>\n                {item.名称}\n              </Select.Option>\n            )\n          })}\n        </Select>\n      </div>\n    </div>\n  )\n}\n\nexport default 目标选择\n","import React from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { Select } from 'antd'\nimport { 更新网络延迟 } from '@/store/data'\nimport { 延迟设定 } from '@/数据/常量'\nimport useCycle from '@/hooks/use-cycle'\nimport { 触发秒伤计算 } from '@/计算模块/计算函数'\n\nfunction 延迟选择() {\n  const dispatch = useAppDispatch()\n  const 网络延迟 = useAppSelector((state) => state?.data?.网络延迟)\n\n  // 当循环中有延迟的时候才展示延迟选择组件\n  const { 全部循环 = [] } = useCycle()\n\n  const 当前是否有循环包含延迟 = 全部循环?.some((item) =>\n    item?.循环详情?.some((循环) => !!循环?.循环延迟要求)\n  )\n\n  const 切换延迟 = (v) => {\n    dispatch(更新网络延迟(v))\n    dispatch(触发秒伤计算({ 是否更新显示计算结果: true }))\n  }\n\n  return 当前是否有循环包含延迟 ? (\n    <div className='common-item'>\n      <h1 className='common-label'>延迟</h1>\n      <div className='common-content'>\n        <Select\n          className='current-boss'\n          value={网络延迟}\n          onChange={(v) => {\n            切换延迟(v)\n          }}\n        >\n          {延迟设定.map((item) => {\n            return (\n              <Select.Option value={item?.value} key={item.value}>\n                {item.label}\n              </Select.Option>\n            )\n          })}\n        </Select>\n      </div>\n    </div>\n  ) : null\n}\n\nexport default 延迟选择\n","import React, { useState } from 'react'\nimport { Button, Checkbox, Col, Drawer, Row, message } from 'antd'\nimport { 技能秘籍信息 } from '@/@types/秘籍'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 更新当前秘籍信息 } from '@/store/data'\nimport { 触发秒伤计算 } from '@/计算模块/计算函数'\nimport { 获取当前职业的所有秘籍信息 } from './utils'\nimport './index.css'\n\nconst 当前职业的所有秘籍信息 = 获取当前职业的所有秘籍信息()\n\nfunction 秘籍选择() {\n  const [visible, setVisible] = useState<boolean>(false)\n  const dispatch = useAppDispatch()\n  const 当前秘籍信息 = useAppSelector((state) => state?.data?.当前秘籍信息)\n\n  const 选择秘籍 = (新秘籍列表: string[], 技能信息: 技能秘籍信息) => {\n    if (新秘籍列表?.length > 4) {\n      message.error('一个技能最多选择四个秘籍')\n      return\n    }\n    const newData = {\n      ...当前秘籍信息,\n      [技能信息?.技能名称]: 新秘籍列表,\n    }\n    dispatch(更新当前秘籍信息(newData))\n    dispatch(触发秒伤计算({ 是否更新显示计算结果: true }))\n  }\n\n  return (\n    <>\n      <Button size='small' className='miji-set-button' onClick={() => setVisible(true)}>\n        秘籍设置\n      </Button>\n      <Drawer\n        title={'秘籍设置'}\n        width={348 + 36}\n        open={visible}\n        mask={false}\n        placement='left'\n        onClose={() => {\n          setVisible(false)\n        }}\n      >\n        {当前职业的所有秘籍信息.map((技能) => {\n          return (\n            <div className={'miji-selected-item'} key={技能.技能名称}>\n              <h1 className={'miji-skill-title'}>{技能.技能名称}</h1>\n              <Checkbox.Group\n                value={当前秘籍信息?.[技能?.技能名称] || []}\n                onChange={(新秘籍列表) => 选择秘籍(新秘籍列表 as string[], 技能)}\n              >\n                <Row>\n                  {技能.技能秘籍列表.map((秘籍) => {\n                    return (\n                      <Col key={`${技能?.技能名称}${秘籍}`} span={8}>\n                        <Checkbox value={秘籍}>{秘籍}</Checkbox>\n                      </Col>\n                    )\n                  })}\n                </Row>\n              </Checkbox.Group>\n            </div>\n          )\n        })}\n      </Drawer>\n    </>\n  )\n}\n\nexport default 秘籍选择\n","import React, { useEffect, useState } from 'react'\nimport { Button, Drawer, Form, Select } from 'antd'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 更新方案数据 } from '@/store/data'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 触发秒伤计算 } from '@/计算模块/计算函数'\nimport './index.css'\n\nconst { 奇穴数据 = [] } = 获取当前数据()\n\nconst 奇穴选择: React.FC = () => {\n  const [drawerOpen, setDrawerOpen] = useState<boolean>(false)\n  const [form] = Form.useForm()\n\n  const dispatch = useAppDispatch()\n  const 当前奇穴信息 = useAppSelector((state) => state?.data?.当前奇穴信息)\n\n  const handleChangeQixue = (_, values) => {\n    const newArray = Object.keys(values).map((key) => {\n      return values[key]\n    })\n\n    dispatch(更新方案数据({ 数据: newArray, 属性: '当前奇穴信息' }))\n    dispatch(触发秒伤计算({ 是否更新显示计算结果: true }))\n  }\n\n  // 监听表单变化\n  useEffect(() => {\n    const obj = {}\n    当前奇穴信息.map((item, index) => {\n      obj[index] = item\n    })\n    form?.setFieldsValue({\n      ...obj,\n    })\n  }, [当前奇穴信息])\n\n  return (\n    <>\n      <Button size='small' className='qixue-set-button' onClick={() => setDrawerOpen(true)}>\n        奇穴设置\n      </Button>\n      <Drawer\n        title={'奇穴设置'}\n        onClose={() => setDrawerOpen(false)}\n        open={drawerOpen}\n        placement='bottom'\n        height={200}\n        className={'qixue-set-drawer'}\n      >\n        <Form onValuesChange={handleChangeQixue} form={form} className={'qixue-set-drawer-wrap'}>\n          {奇穴数据.map((重, index) => {\n            return (\n              <Form.Item className={'qixue-set-item'} name={index} key={index + 1}>\n                <Select\n                  className={'qixue-set-item-select'}\n                  disabled={重?.是否不可编辑}\n                  // onChange={handleChangeQixue}\n                  dropdownMatchSelectWidth={false}\n                  optionLabelProp='label'\n                  showArrow={false}\n                  popupClassName={'qixue-set-item-select-popup'}\n                >\n                  {重?.奇穴列表.map((奇穴) => {\n                    return (\n                      <Select.Option\n                        value={奇穴?.奇穴名称}\n                        key={奇穴?.奇穴名称}\n                        disabled={奇穴?.是否不可编辑}\n                        className={'qixue-set-item-select-option'}\n                        label={\n                          <div className={'qixue-label'}>\n                            <img className={'qixue-label-img'} src={奇穴?.奇穴图片} />\n                            <span className={'qixue-label-text'}>{奇穴?.奇穴名称}</span>\n                          </div>\n                        }\n                      >\n                        <img className={'qixue-set-item-select-img'} src={奇穴?.奇穴图片} />\n                        <span className={'qixue-set-item-select-text'}>{奇穴?.奇穴名称}</span>\n                      </Select.Option>\n                    )\n                  })}\n                </Select>\n              </Form.Item>\n            )\n          })}\n        </Form>\n      </Drawer>\n    </>\n  )\n}\n\nexport default 奇穴选择\n","import React from 'react'\n\nimport 方案选择 from './方案选择'\nimport 目标选择 from './目标选择'\nimport 循环选择 from './循环选择'\nimport 延迟选择 from './延迟选择'\nimport 秘籍选择 from './秘籍选择'\nimport 奇穴选择 from './奇穴选择'\nimport 循环模拟 from './循环模拟'\n\nimport './index.css'\n\nfunction 公用设置() {\n  return (\n    <div className={'common-set'}>\n      <方案选择 />\n      <目标选择 />\n      <循环选择 />\n      <延迟选择 />\n      <div className='common-item' style={{ height: 'unset' }}>\n        <秘籍选择 />\n        <奇穴选择 />\n        <循环模拟 />\n      </div>\n    </div>\n  )\n}\n\nexport default 公用设置\n","import { Button } from 'antd'\nimport React, { useState } from 'react'\nimport 配装器 from './配装器'\n\nimport './index.css'\n\nfunction 属性录入() {\n  const [配装器弹窗显示状态, 切换配装器弹窗显示状态] = useState<boolean>(false)\n\n  return (\n    <div className={'character-set'}>\n      <Button\n        onClick={() => {\n          切换配装器弹窗显示状态(true)\n        }}\n      >\n        配装器\n      </Button>\n      <配装器\n        open={配装器弹窗显示状态}\n        onCancel={() => {\n          切换配装器弹窗显示状态(false)\n        }}\n      />\n    </div>\n  )\n}\n\nexport default 属性录入\n","import React from 'react'\nimport { useAppSelector } from '@/hooks'\n\nimport 基础设置标题 from './基础设置标题'\nimport 公用设置 from './公用设置'\nimport 增益面板 from './增益面板'\nimport 面板信息 from './面板信息'\nimport 属性录入 from './属性录入'\nimport 底部配置 from './底部配置'\n\nimport './index.css'\n\nfunction 基础设置() {\n  const 增益面板显示状态 = useAppSelector((state) => state?.system?.增益面板显示状态)\n\n  return (\n    <div className={'basic-set'}>\n      <div className={'basic-set-info'}>\n        <基础设置标题 />\n        <公用设置 />\n        <面板信息 />\n        <属性录入 />\n        <底部配置 />\n      </div>\n      <div className={`basic-set-zengyi ${增益面板显示状态 ? 'basic-set-zengyi-visible' : null}`}>\n        <增益面板 />\n      </div>\n    </div>\n  )\n}\n\nexport default 基础设置\n","import React from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { Select, SelectProps, Tooltip } from 'antd'\nimport { 秒伤计算 } from '@/计算模块/计算函数'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 阵眼数据类型 } from '@/数据/阵眼/interface'\nimport './index.css'\n\nconst { 阵眼 } = 获取当前数据()\ninterface 阵眼选择类型 extends SelectProps {\n  开启智能对比?: boolean\n}\n\nconst 阵眼选择: React.FC<阵眼选择类型> = (props) => {\n  const { 开启智能对比, ...rest } = props\n  const 增益数据 = useAppSelector((state) => state?.data?.增益数据)\n  const 增益启用 = useAppSelector((state) => state?.data?.增益启用)\n  const 当前计算结果 = useAppSelector((state) => state?.data?.当前计算结果)\n  const dispatch = useAppDispatch()\n\n  const 展示的阵眼数组 = () => {\n    let list: 阵眼数据类型[] = [...阵眼]\n\n    if (增益启用 && 开启智能对比 && 当前计算结果?.秒伤) {\n      list = list.map((item) => {\n        const dps = 计算更换后秒伤(item?.阵眼名称)\n\n        return {\n          ...item,\n          伤害提升百分比: Number((dps / 当前计算结果?.秒伤) * 100) || 100,\n          伤害是否提升: dps > 当前计算结果?.秒伤,\n        }\n      })\n\n      list.sort((a, b) => (b?.伤害提升百分比 || 0) - (a?.伤害提升百分比 || 0))\n      list = list.map((item, index) => {\n        // 只展示前三名\n        return index < 3\n          ? {\n              ...item,\n              伤害排名: index + 1,\n            }\n          : item\n      })\n    }\n\n    return list\n  }\n\n  // 计算阵眼收益\n  const 计算更换后秒伤 = (阵眼名称) => {\n    const { 秒伤 } = dispatch(\n      秒伤计算({\n        更新增益数据: { ...增益数据, 阵眼: 阵眼名称 },\n      })\n    )\n    return 秒伤 || 0\n  }\n\n  return (\n    <Select\n      className={'xuanze-zhenyan'}\n      allowClear\n      placeholder='请选择阵眼'\n      optionFilterProp='label'\n      {...rest}\n    >\n      {(展示的阵眼数组() || [])?.map((item) => {\n        return (\n          <Select.Option\n            className={'zhenyan-option'}\n            key={item.阵眼名称}\n            value={item.阵眼名称}\n            label={item.阵眼名称}\n          >\n            <Tooltip\n              title={\n                item.覆盖率 && item?.覆盖率 !== 1 ? (\n                  <span>覆盖率：{(item.覆盖率 * 100)?.toFixed(0)}%</span>\n                ) : (\n                  ''\n                )\n              }\n              placement='topLeft'\n            >\n              <div className={'zhenyan-option-text'}>\n                {item.伤害排名 ? (\n                  <img\n                    className={`zhenyan-paiming`}\n                    src={require(`@/assets/paiming/paiming-${item.伤害排名}.png`)}\n                  />\n                ) : null}\n                {item.阵眼名称}\n              </div>\n            </Tooltip>\n            <div>\n              {item.伤害提升百分比 ? (\n                <span\n                  className={`zhenyan-baifenbi ${\n                    item.阵眼名称 !== 增益数据?.阵眼\n                      ? item.伤害是否提升\n                        ? 'zhenyan-up'\n                        : 'zhenyan-down'\n                      : ''\n                  }`}\n                >\n                  {item.伤害提升百分比?.toFixed(2)}%\n                </span>\n              ) : null}\n            </div>\n          </Select.Option>\n        )\n      })}\n    </Select>\n  )\n}\n\nexport default 阵眼选择\n","import { Cascader, Select } from 'antd'\nimport React, { useMemo } from 'react'\nimport { 五彩石增益类型枚举 } from '@/@types/枚举'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport './index.css'\n\nconst { 五彩石 } = 获取当前数据()\n\ninterface WucaishiFilterList {\n  value: 五彩石增益类型枚举\n  label: 五彩石增益类型枚举\n  children?: WucaishiFilterList[]\n}\n\ninterface WuCaiShiXuanZeProps {\n  value?: string\n  onChange?: (e: string) => void\n}\n\nfunction WuCaiShiXuanZe(props: WuCaiShiXuanZeProps) {\n  const { value, onChange } = props\n\n  const jibie = useMemo(() => {\n    return value?.includes('伍') ? 5 : 6\n  }, [value])\n\n  const mingzi = useMemo(() => {\n    const jibie = value?.includes('伍') ? 5 : 6\n    const list = 五彩石[jibie]\n    const findObj = list.find((item) => {\n      return item.五彩石名称 === value\n    })\n    return findObj?.装备增益.map((item) => item.增益名称)\n  }, [value])\n\n  const wucaishiFilterList: WucaishiFilterList[] = useMemo(() => {\n    return getWuCaiShiFilterList()\n  }, [五彩石[6]])\n\n  const handleChange = (e) => {\n    const list = 五彩石[jibie]\n    const findObj = list.find((item) => {\n      return (\n        item.装备增益?.[0]?.增益名称 === e?.[0] &&\n        item.装备增益?.[1]?.增益名称 === e?.[1] &&\n        item.装备增益?.[2]?.增益名称 === e?.[2]\n      )\n    })\n    if (findObj && findObj?.五彩石名称) {\n      onChange && onChange(findObj?.五彩石名称)\n    }\n  }\n\n  const changeJiBie = (e) => {\n    let newName = value\n    if (e === 5) {\n      newName = newName?.replace('(陆)', '(伍)')\n    } else {\n      newName = newName?.replace('(伍)', '(陆)')\n    }\n    if (newName) {\n      onChange && onChange(newName)\n    }\n  }\n\n  return (\n    <div className='wucaishi-wrap'>\n      <div className={'wucaishi-xuanze-wrap'}>\n        <Select\n          className={'wucaishi-xuanze-dengji'}\n          disabled={!mingzi}\n          value={jibie}\n          options={[\n            { label: '六级', value: 6 },\n            { label: '五级', value: 5 },\n          ]}\n          onChange={(e) => changeJiBie(e)}\n        />\n        <Cascader\n          className={'wucaishi-xuanze'}\n          value={mingzi}\n          showSearch\n          placeholder='选择五彩石'\n          onChange={handleChange}\n          options={wucaishiFilterList}\n        />\n      </div>\n      {value ? (\n        <div className={`wucaishi-value ${jibie === 6 ? 'wucaishi-value-6' : 'wucaishi-value-5'}`}>\n          {value}\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default WuCaiShiXuanZe\n\nconst getWuCaiShiFilterList = () => {\n  let list: WucaishiFilterList[] = []\n  五彩石[6].forEach((item) => {\n    item.装备增益.forEach((a, index) => {\n      if (index === 0) {\n        if (!list?.some((c) => c.value === a.增益名称)) {\n          list.push({\n            label: a.增益名称,\n            value: a.增益名称,\n            children: [],\n          })\n        }\n      } else if (index === 1) {\n        list = list.map((c) => {\n          if (c.value === item.装备增益?.[0].增益名称) {\n            return {\n              ...c,\n              children: c.children?.some((d) => d.value === a.增益名称)\n                ? c.children\n                : (c.children || []).concat([\n                    {\n                      label: a.增益名称,\n                      value: a.增益名称,\n                      children: [],\n                    },\n                  ]),\n            }\n          } else {\n            return { ...c }\n          }\n        })\n      } else if (index === 2) {\n        list = list.map((c) => {\n          if (c.value === item.装备增益?.[0].增益名称) {\n            return {\n              ...c,\n              children: c.children?.map((d) => {\n                if (d.value === item.装备增益?.[1].增益名称) {\n                  return {\n                    ...d,\n                    children: d.children?.some((e) => e.value === a.增益名称)\n                      ? d.children\n                      : (d.children || []).concat([\n                          {\n                            label: a.增益名称,\n                            value: a.增益名称,\n                          },\n                        ]),\n                  }\n                } else {\n                  return { ...d }\n                }\n              }),\n            }\n          } else {\n            return { ...c }\n          }\n        })\n      }\n    })\n  })\n  return list\n}\n","import React from 'react'\nimport { 装备增益类型 } from '@/@types/装备'\nimport 装备增益展示信息 from './装备增益展示信息'\nimport './index.css'\n\nfunction 装备增益展示({ 装备增益 }: { 装备增益: 装备增益类型 }) {\n  return 装备增益 ? (\n    <div className={'zhuangbei-zengyi-wrapper'}>\n      <div className='zhuangbei-zengyi-content'>\n        {Object.keys(装备增益)\n          .filter((item) => {\n            return !item?.includes('大附魔') && !!装备增益[item]\n          })\n          .map((item) => {\n            return <装备增益展示信息 key={item} 增益类型={item} data={装备增益[item]} />\n          })}\n      </div>\n    </div>\n  ) : null\n}\n\nexport default 装备增益展示\n","// 当前装备下的属性面板\nimport React, { useMemo, useState } from 'react'\nimport { Tooltip } from 'antd'\nimport classnames from 'classnames'\nimport { 装备信息数据类型 } from '@/@types/装备'\nimport { useAppSelector } from '@/hooks'\nimport { 获取角色需要展示的面板数据 } from '@/功能模块/基础设置/面板信息/工具'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 获取面板显示数据数值, 获取面板显示数据 } from '@/功能模块/基础设置/面板信息'\nimport './index.css'\n\ninterface 面板展示入参 {\n  当前装备信息: 装备信息数据类型\n}\n\nconst { 主属性 } = 获取当前数据()\n\nfunction 面板展示(props: 面板展示入参) {\n  const { 当前装备信息 } = props\n  // 原始最终属性\n  const 装备信息 = useAppSelector((state) => state?.data?.装备信息)\n  const 当前奇穴信息 = useAppSelector((state) => state?.data?.当前奇穴信息)\n  const 增益数据 = useAppSelector((state) => state?.data?.增益数据)\n  const 增益启用 = useAppSelector((state) => state?.data?.增益启用)\n  const [显示增益后面板, 切换显示增益后面板] = useState<boolean>(false)\n\n  const 获取计算后原始属性 = (计算装备信息) => {\n    return 获取角色需要展示的面板数据({\n      装备信息: 计算装备信息,\n      当前奇穴信息,\n      增益数据,\n      增益启用,\n      显示增益后面板,\n    })\n  }\n\n  const 显示数据 = useMemo(() => {\n    const 计算后的原始最终属性 = 获取计算后原始属性(装备信息)\n    const 计算后的当前显示属性 = 获取计算后原始属性(当前装备信息)\n    const 对比枚举 = {}\n    Object.keys(计算后的当前显示属性).forEach((key) => {\n      const 原始属性数值 = 计算后的原始最终属性[key]\n      对比枚举[key] =\n        原始属性数值 > 计算后的当前显示属性[key]\n          ? '变低'\n          : 原始属性数值 < 计算后的当前显示属性[key]\n          ? '变高'\n          : '-1'\n    })\n    return { 数据: 计算后的当前显示属性, 对比枚举 }\n  }, [当前装备信息, 当前奇穴信息, 装备信息, 增益数据, 增益启用, 显示增益后面板])\n\n  const mapKeyList = [主属性, '攻击', '会心', '会效', '破防', '无双', '破招', '全能', '加速']\n\n  return (\n    <div\n      className={`${\n        显示增益后面板 ? 'zhuangbei-character-zengyi' : 'zhuangbei-character-wuzengyi'\n      } zhuangbei-character-show`}\n    >\n      <div className='zhuangbei-show-zengyi-tag'>\n        <div className='tag-active' />\n        <div\n          onClick={() => 切换显示增益后面板(false)}\n          className='show-zengyi-tag-item hide-zengyi-charactor'\n        >\n          无增益面板\n        </div>\n        <div\n          onClick={() => 切换显示增益后面板(true)}\n          className='show-zengyi-tag-item shouw-zengyi-charactor'\n        >\n          增益后面板\n        </div>\n      </div>\n      {mapKeyList.map((item, index) => {\n        const 对比枚举属性名 = 显示文案和实际属性枚举[item]\n        const 对比枚举结果 = 显示数据?.对比枚举?.[对比枚举属性名]\n        const 有变化 = 对比枚举结果 && 对比枚举结果 !== '-1'\n        const cls = classnames(\n          'zhuangbei-character-content-normal',\n          有变化\n            ? 对比枚举结果 === '变高'\n              ? 'zhuangbei-character-content-upper'\n              : 'zhuangbei-character-content-down'\n            : ''\n        )\n        return (\n          <div\n            id={`zhuangbei-character-item_${item}`}\n            className={`zhuangbei-character-item ${\n              index === mapKeyList.length - 1 ? 'zhuangbei-character-item-last' : ''\n            }`}\n            key={item}\n          >\n            <h1 className='zhuangbei-character-label'>{item}</h1>\n            <Tooltip\n              placement='left'\n              getPopupContainer={() =>\n                document.getElementById(`zhuangbei-character-item_${item}`) as any\n              }\n              title={\n                <div>\n                  <p>{获取面板显示数据数值(item, 显示数据?.数据)}</p>\n                  {有变化 ? <p>较原面板[{对比枚举结果}]</p> : null}\n                </div>\n              }\n            >\n              <div className='zhuangbei-character-content'>\n                <span className={cls}>{获取面板显示数据(item, 显示数据?.数据)}</span>\n              </div>\n            </Tooltip>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default 面板展示\n\nexport const 显示文案和实际属性枚举 = {\n  力道: '力道',\n  身法: '身法',\n  元气: '元气',\n  根骨: '根骨',\n  攻击: '面板攻击',\n  会心: '会心等级',\n  会效: '会心效果等级',\n  破防: '破防等级',\n  破招: '破招值',\n  无双: '无双等级',\n  全能: '全能等级',\n  加速: '加速等级',\n}\n","// 一键设置最佳附魔\nimport { Button, Checkbox, Col, Divider, Modal, Row, message } from 'antd'\nimport React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useAppDispatch } from '@/hooks'\nimport { RiseOutlined } from '@ant-design/icons'\n// import { 装备部位枚举 } from '@/@types/枚举'\nimport { 角色基础属性类型 } from '@/@types/角色'\nimport { 秒伤计算 } from '@/计算模块/计算函数'\nimport { 装备位置部位枚举 } from '@/@types/装备'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\n\nimport 根据装备信息获取基础属性 from '../../工具函数/根据装备信息获取基础属性'\nimport { 修改装备属性, 初始化所有组合 } from './util'\nimport './index.css'\n\nconst { 默认数据 = {} } = 获取当前数据()\nconst { 一键附魔默认部位 = [] } = 默认数据\n\nconst 没有附魔的部位 = ['_7', '_8']\nconst 全部部位: 装备位置部位枚举[] = Object.keys(装备位置部位枚举).filter(\n  (key) => !没有附魔的部位?.includes(key)\n) as 装备位置部位枚举[]\n\nfunction 最佳附魔设置({ 一键替换附魔, 对比秒伤, 对比装备信息 }) {\n  const [open, setOpen] = useState<boolean>(false)\n  const [部位选择弹窗, 更新部位选择弹窗] = useState<boolean>(false)\n  const [最大组合, 更新最大组合] = useState<any>({})\n  const [最大Dps, 更新最大秒伤] = useState<number>(0)\n  const [计算用时, 更新计算用时] = useState<number>(0)\n  const [无附魔装备属性, 设置无附魔装备属性] = useState<角色基础属性类型>()\n\n  const [当前选择计算部位, 更新当前选择计算部位] = useState<装备位置部位枚举[]>(\n    一键附魔默认部位?.length ? 一键附魔默认部位 : 全部部位\n  )\n\n  const 是否选择部分 = useMemo(() => {\n    return !!(当前选择计算部位?.length && 当前选择计算部位?.length < 全部部位?.length)\n  }, [当前选择计算部位, 全部部位])\n\n  const 是否全选 = useMemo(() => {\n    return !全部部位?.some((key) => !当前选择计算部位?.includes(key))\n  }, [当前选择计算部位, 全部部位])\n\n  // 所有组合的缓存数据\n  const dispatch = useAppDispatch()\n  const dataRef = useRef<any>()\n\n  useEffect(() => {\n    初始化(当前选择计算部位)\n  }, [对比装备信息, 当前选择计算部位])\n\n  const 当前附魔信息 = useMemo(() => {\n    const res: any[] = []\n    const 不同部位: string[] = []\n    if (Object.keys(最大组合)?.length !== 0) {\n      const 列表 = 对比装备信息?.装备列表\n      Object.keys(最大组合).forEach((key) => {\n        const 装备位置 = 装备位置部位枚举[key]\n        const 当前附魔 = 列表?.find((item) => item?.装备部位 === 装备位置)?.附魔 || ''\n        res.push({\n          部位: 装备位置,\n          附魔: 当前附魔,\n        })\n\n        const 附魔属性 = Object.keys(最大组合[key])?.[0]\n        const 附魔值 = Object.values(最大组合[key])?.[0]\n        if (当前附魔 !== `${附魔属性}+${附魔值}`) {\n          不同部位.push(key)\n        }\n      })\n    }\n    return {\n      当前附魔: res,\n      不同部位,\n    }\n  }, [对比装备信息, 最大组合])\n\n  // 先根据当前的附魔列表，计算出最后计算dps时所需要的排列组合\n  const 初始化 = (计算部位) => {\n    const res = 初始化所有组合(计算部位)\n    获取当前装备信息去除附魔加成的面板(计算部位)\n    dataRef.current = res\n  }\n\n  const 获取当前装备信息去除附魔加成的面板 = (计算部位) => {\n    const { 装备基础属性 } = 根据装备信息获取基础属性(对比装备信息, { 过滤附魔部位: 计算部位 })\n    设置无附魔装备属性(装备基础属性)\n  }\n\n  const 计算前提示 = () => {\n    if (无附魔装备属性) {\n      Modal.confirm({\n        title: `确定开始计算吗`,\n        content: (\n          <div>\n            <p>共 {dataRef?.current?.length} 种组合，计算将造成一定卡顿</p>\n            {dataRef?.current?.length > 500 ? (\n              <p>「凌海诀」玩家电脑性能不佳情况下请慎重使用</p>\n            ) : null}\n          </div>\n        ),\n        okText: '我要计算',\n        onOk: async () => {\n          开始计算()\n        },\n        cancelText: '重新选择',\n        onCancel: () => {\n          更新部位选择弹窗(true)\n        },\n        closable: true,\n      })\n    }\n  }\n\n  const 开始计算 = () => {\n    const 开始计算时间 = new Date().valueOf()\n    let 最大秒伤 = 0\n    let 最大组合: any = {}\n    if (dataRef?.current?.length) {\n      for (let i = 0; i < dataRef?.current?.length; i++) {\n        const 当前附魔数据 = dataRef?.current[i]\n        const 修改后装备属性 = 修改装备属性(无附魔装备属性 as 角色基础属性类型, 当前附魔数据)\n        const { 秒伤 } = dispatch(\n          秒伤计算({\n            更新装备信息: {\n              ...对比装备信息,\n              装备基础属性: 修改后装备属性,\n            } as any,\n          })\n        )\n        if (秒伤 > 最大秒伤) {\n          最大秒伤 = 秒伤\n          最大组合 = 当前附魔数据\n        }\n      }\n    }\n    更新最大组合(最大组合)\n    更新最大秒伤(最大秒伤)\n    const 结束计算时间 = new Date().valueOf()\n    const 计算用时 = 结束计算时间 - 开始计算时间\n    if (最大秒伤 > 对比秒伤) {\n      setOpen(true)\n      更新计算用时(计算用时)\n    } else {\n      message.success(`当前附魔已为最佳方案，无需替换。计算用时${计算用时}ms`)\n    }\n  }\n\n  const closeModal = () => {\n    setOpen(false)\n    更新最大组合({})\n    更新最大秒伤(0)\n  }\n\n  return (\n    <>\n      <Button type='primary' size='small' onClick={() => 更新部位选择弹窗(true)}>\n        一键设置附魔\n      </Button>\n      <Modal\n        title={'需计算的附魔部位'}\n        // centered\n        open={部位选择弹窗}\n        width={460}\n        okText={'计算选中部位'}\n        onOk={() => {\n          更新部位选择弹窗(false)\n          计算前提示()\n        }}\n        onCancel={() => 更新部位选择弹窗(false)}\n      >\n        <div className={'max-fumo-all-check'}>\n          <Checkbox\n            indeterminate={是否选择部分}\n            onChange={() => {\n              if (是否全选) {\n                更新当前选择计算部位([])\n              } else {\n                更新当前选择计算部位(全部部位)\n              }\n            }}\n            checked={是否全选}\n          >\n            全选\n          </Checkbox>\n        </div>\n        <Divider style={{ margin: '12px 0' }} />\n\n        <Checkbox.Group value={当前选择计算部位} onChange={(e) => 更新当前选择计算部位(e as any)}>\n          <Row>\n            {全部部位.map((key) => {\n              return (\n                <Col className={'max-fumo-check-col'} span={6} key={key}>\n                  <Checkbox value={key}>{装备位置部位枚举[key]}</Checkbox>\n                </Col>\n              )\n            })}\n          </Row>\n        </Checkbox.Group>\n      </Modal>\n      {/* 设置提醒和结果弹窗 */}\n      <Modal\n        title={\n          <div className={'max-fumo-modal-title'}>\n            <span>最佳附魔结果对比</span>\n            <span>计算用时：{计算用时}ms</span>\n          </div>\n        }\n        centered\n        open={open}\n        width={500}\n        onCancel={() => setOpen(false)}\n        footer={\n          <Button\n            type='primary'\n            onClick={async () => {\n              await 一键替换附魔(最大组合)\n              closeModal()\n            }}\n          >\n            一键替换\n          </Button>\n        }\n      >\n        <div className={'max-fumo-wrap'}>\n          <div className='max-fumo-content'>\n            <h1 className={'max-fumo-title'}>替换前</h1>\n            <h1 className='max-fumo-dps'>{对比秒伤}</h1>\n            <div>\n              {(当前附魔信息?.当前附魔 || []).map((item, index) => {\n                return (\n                  <div className={`max-fumo-item`} key={`${item?.部位}_${index}`}>\n                    <span className='max-fumo-label'>{item?.部位}</span>\n                    <span className='max-fumo-value'>{item?.附魔}</span>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n          <div className='max-fumo-content'>\n            <h1 className={'max-fumo-title'}>替换后</h1>\n            <h1 className='max-fumo-dps max-fumo-dps-up'>\n              {最大Dps}\n              <RiseOutlined className='max-fumo-dps-icon' />\n            </h1>\n            <div>\n              {Object.keys(最大组合).map((key) => {\n                const 附魔属性 = Object.keys(最大组合[key])?.[0]\n                const 附魔值 = Object.values(最大组合[key])?.[0]\n                return (\n                  <div\n                    className={`max-fumo-item ${\n                      当前附魔信息?.不同部位?.includes(key) ? 'max-fumo-diff' : ''\n                    }`}\n                    key={key}\n                  >\n                    <span className='max-fumo-label'>{装备位置部位枚举[key]}</span>\n                    <span className='max-fumo-value'>{`${附魔属性}+${附魔值}`}</span>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nexport default 最佳附魔设置\n"],"names":["dispatch","useAppDispatch","当前方案名称","useAppSelector","state","data","全部方案数据","className","value","onChange","v","e","更新选中的方案数据","触发秒伤计算","是否更新显示计算结果","Object","keys","map","item","当前输出计算目标名称","更新当前输出计算目标名称","切换目标","目标集合","名称","网络延迟","useCycle","全部循环","some","循环详情","循环","循环延迟要求","更新网络延迟","切换延迟","延迟设定","label","当前职业的所有秘籍信息","获取当前职业的所有秘籍信息","useState","visible","setVisible","当前秘籍信息","size","onClick","title","width","open","mask","placement","onClose","技能","技能名称","新秘籍列表","技能信息","length","message","newData","更新当前秘籍信息","选择秘籍","技能秘籍列表","秘籍","span","获取当前数据","奇穴数据","drawerOpen","setDrawerOpen","Form","form","当前奇穴信息","useEffect","obj","index","setFieldsValue","height","onValuesChange","_","values","newArray","key","更新方案数据","数据","属性","重","name","disabled","是否不可编辑","dropdownMatchSelectWidth","optionLabelProp","showArrow","popupClassName","奇穴列表","奇穴","奇穴名称","src","奇穴图片","style","配装器弹窗显示状态","切换配装器弹窗显示状态","onCancel","增益面板显示状态","system","阵眼","props","开启智能对比","rest","增益数据","增益启用","当前计算结果","计算更换后秒伤","阵眼名称","秒伤计算","更新增益数据","秒伤","allowClear","placeholder","optionFilterProp","list","dps","伤害提升百分比","Number","伤害是否提升","sort","a","b","伤害排名","展示的阵眼数组","覆盖率","toFixed","require","五彩石","jibie","useMemo","includes","mingzi","findObj","find","五彩石名称","装备增益","增益名称","wucaishiFilterList","getWuCaiShiFilterList","changeJiBie","newName","replace","options","showSearch","forEach","c","push","children","d","concat","filter","主属性","当前装备信息","装备信息","显示增益后面板","切换显示增益后面板","获取计算后原始属性","计算装备信息","获取角色需要展示的面板数据","显示数据","计算后的原始最终属性","计算后的当前显示属性","对比枚举","原始属性数值","mapKeyList","对比枚举属性名","显示文案和实际属性枚举","对比枚举结果","有变化","cls","classnames","id","getPopupContainer","document","getElementById","获取面板显示数据数值","获取面板显示数据","力道","身法","元气","根骨","攻击","会心","会效","破防","破招","无双","全能","加速","默认数据","一键附魔默认部位","没有附魔的部位","全部部位","装备位置部位枚举","一键替换附魔","对比秒伤","对比装备信息","setOpen","部位选择弹窗","更新部位选择弹窗","最大组合","更新最大组合","最大Dps","更新最大秒伤","计算用时","更新计算用时","无附魔装备属性","设置无附魔装备属性","当前选择计算部位","更新当前选择计算部位","是否选择部分","是否全选","dataRef","useRef","初始化","当前附魔信息","res","不同部位","列表","装备列表","装备位置","当前附魔","装备部位","附魔","部位","附魔属性","附魔值","计算部位","初始化所有组合","获取当前装备信息去除附魔加成的面板","current","装备基础属性","根据装备信息获取基础属性","过滤附魔部位","开始计算","开始计算时间","Date","valueOf","最大秒伤","i","当前附魔数据","修改后装备属性","修改装备属性","更新装备信息","type","okText","onOk","Modal","content","cancelText","closable","计算前提示","indeterminate","checked","margin","centered","footer"],"sourceRoot":""}