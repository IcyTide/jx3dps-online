{"version":3,"file":"static/js/main~467f258a.69823922.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/SaveCustomCycleModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/buff/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/dpsRes/components/BattleLogModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/dpsRes/components/BuffCountModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/SaveCustomCycleModal/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/StatusBar/buff/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/StatusBar/chongwu/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/StatusBar/dpsRes/components/BattleLogModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/StatusBar/dpsRes/components/BuffCountModal/index.tsx","功能模块/基础设置/基础设置标题/保存方案/SaveCustomProjectModal/index.tsx","功能模块/基础设置/属性录入/配装器/功能组件/魔盒配装方案导入/Jx3BoxImport/util.tsx","功能模块/基础设置/属性录入/配装器/功能组件/魔盒配装方案导入/Jx3BoxImport/index.tsx","功能模块/系统工具/页面隐藏工具/开发者工具/JCL战斗记录解析/tool.ts","组件/Layout/index.tsx","组件/Layout/default.ts","组件/ValueCheckBox/index.tsx"],"sourcesContent":["import { Alert, Checkbox, Form, Input, Modal, Select, Tabs } from 'antd'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport { 延迟设定 } from '@/数据/常量'\nimport './index.css'\n\nconst { 计算循环 } = 获取当前数据()\n\ninterface SaveCustomCycleModalProps {\n  自定义循环保存弹窗: boolean\n  设置自定义循环保存弹窗: (e: boolean) => void\n  保存自定义循环: (名称, 加速选项, 延迟选项) => void\n}\n\nfunction SaveCustomCycleModal(props: SaveCustomCycleModalProps) {\n  const { 自定义循环保存弹窗, 设置自定义循环保存弹窗, 保存自定义循环 } = props\n  // 保存类型，覆盖｜新增\n  const [自定义循环类型, 设置自定义循环类型] = useState<string>()\n  // 自定义循环名称保存输入\n  const [自定义循环名称输入, 设置自定义循环名称输入] = useState<string>()\n  // 保存类型，覆盖｜新增\n  const [覆盖循环名, 设置覆盖循环名] = useState<string>()\n  // 保存加速序列\n  const [加速选项, 设置加速选项] = useState<number[]>([0, 1, 2])\n  const [延迟选项, 设置延迟选项] = useState<number[]>([0, 1, 2])\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const dispatch = useAppDispatch()\n\n  const 全部循环 = useMemo(() => {\n    return (计算循环 || []).concat(自定义循环)\n  }, [自定义循环, 计算循环])\n\n  useEffect(() => {\n    if (自定义循环保存弹窗) {\n      if (自定义循环?.length) {\n        设置自定义循环类型('覆盖')\n      } else {\n        设置自定义循环类型('新增')\n      }\n    } else {\n      设置自定义循环类型(undefined)\n      设置自定义循环名称输入(undefined)\n      设置覆盖循环名(undefined)\n    }\n  }, [自定义循环保存弹窗, 自定义循环])\n\n  const 保存自定义循环前 = () => {\n    const 名称 = 自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入\n    保存自定义循环(名称, 加速选项, 延迟选项)\n  }\n\n  // 删除自定义循环\n  const 删除循环前提示 = (e, 名称) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    Modal.confirm({\n      title: `确定要删除循环【${名称}】吗?`,\n      content: '删除后将无法恢复',\n      okText: '我要删除',\n      onOk: async () => {\n        删除循环(名称)\n      },\n    })\n  }\n\n  const 删除循环 = (名称) => {\n    dispatch(更新当前自定义循环列表(自定义循环.filter((item) => item.名称 !== 名称)))\n  }\n\n  return (\n    <Modal\n      centered\n      title='保存自定义循环'\n      okButtonProps={{\n        disabled: !(自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入),\n      }}\n      open={自定义循环保存弹窗}\n      onCancel={() => 设置自定义循环保存弹窗(false)}\n      onOk={保存自定义循环前}\n      width={630}\n      destroyOnClose\n      className={'cycle-custom-save-modal'}\n    >\n      <Tabs\n        className={'cycle-custom-save-modal-content'}\n        type='card'\n        activeKey={自定义循环类型}\n        onChange={设置自定义循环类型}\n      >\n        <Tabs.TabPane tab={'覆盖'} key='覆盖'>\n          <Select\n            value={覆盖循环名}\n            onChange={设置覆盖循环名}\n            optionLabelProp='label'\n            placeholder={'请选择你要覆盖的循环'}\n          >\n            {自定义循环.map((item) => {\n              return (\n                <Select.Option value={item.名称} key={item.名称} label={item.名称}>\n                  <div className={'cycle-custom-save-label'}>\n                    <span>{item.名称}</span>\n                    <span\n                      onClick={(e) => 删除循环前提示(e, item.名称)}\n                      className={'cycle-custom-save-delete'}\n                    >\n                      删除\n                    </span>\n                  </div>\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={'新增'} key='新增'>\n          <Form>\n            <Form.Item\n              rules={[\n                {\n                  validator: (_, value, callback) => {\n                    if (value) {\n                      if (全部循环?.some((item) => item?.名称 === value)) {\n                        callback('已存在相同的循环名，请更换')\n                      }\n                    }\n                    callback()\n                  },\n                },\n              ]}\n            >\n              <Input\n                value={自定义循环名称输入}\n                placeholder='请输入自定义循环名称'\n                onChange={(e) => 设置自定义循环名称输入(e?.target?.value)}\n              />\n            </Form.Item>\n          </Form>\n        </Tabs.TabPane>\n      </Tabs>\n      <div className='cycle-custom-save-checkbox'>\n        <p>加速</p>\n        <Checkbox.Group value={加速选项} onChange={(e) => 设置加速选项(e as number[])}>\n          {Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return (\n              <Checkbox value={a} key={a}>\n                {a}段\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n        <p>延迟</p>\n        <Checkbox.Group value={延迟选项} onChange={(e) => 设置延迟选项(e as number[])}>\n          {延迟设定.map((item) => {\n            return (\n              <Checkbox value={item.value} key={item.value}>\n                {item.label}\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n      </div>\n      <Alert message={'选项越少保存越快。没选择的选项在外部计算dps时不会进行计算。'} />\n    </Modal>\n  )\n}\n\nexport default SaveCustomCycleModal\n","import React from 'react'\n\nimport { Space, Tooltip } from 'antd'\nimport { Buff枚举 } from '../../../simulator/type'\nimport { 每秒郭氏帧 } from '../../../constant'\nimport './index.css'\n\ninterface BuffProps {\n  title: string\n  buff列表: Buff枚举\n  当前时间点: number\n}\n\nfunction Buff(props: BuffProps) {\n  const { title, buff列表, 当前时间点 } = props\n\n  const 当前buff列表 = Object.keys(buff列表).map((item) => buff列表[item])\n\n  return (\n    <div className={'cycle-status-bar-content cycle-status-bar-buff-content'}>\n      <div className={'cycle-status-bar-title'}>{title}</div>\n      <Space className={'cycle-status-bar-buff-list'} size={[8, 8]} wrap>\n        {当前buff列表?.length ? (\n          当前buff列表.map((item) => {\n            const 应该消失时间 = (item.刷新时间 || 0) + (item.最大持续时间 || 0)\n            const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n            const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n            const 层数 = item.当前层数 || 0\n            return (\n              <div className={'cycle-status-bar-buff'} key={item.名称}>\n                <div className={'cycle-status-bar-buff-item'}>\n                  <Tooltip\n                    title={\n                      item.名称 === '流岚' ? (\n                        <>\n                          {item.名称}\n                          {((层数 - 1) * 20 + 剩余时间 / 每秒郭氏帧).toFixed(1)}秒\n                        </>\n                      ) : (\n                        <>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</>\n                      )\n                    }\n                  >\n                    <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                  </Tooltip>\n                  {层数 > 1 ? (\n                    <span className={'cycle-status-bar-buff-count'}>{item.当前层数}</span>\n                  ) : null}\n                </div>\n                <p\n                  className={`cycle-status-bar-buff-second ${\n                    剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                  }`}\n                >\n                  {剩余时间秒}\n                </p>\n              </div>\n            )\n          })\n        ) : (\n          <p className={'cycle-buff-empty'}>无</p>\n        )}\n      </Space>\n    </div>\n  )\n}\n\nexport default Buff\n","import React from 'react'\nimport { Modal, ModalProps, Table } from 'antd'\nimport 循环模拟技能基础数据, { 日志类型数组 } from '../../../../constant/skill'\nimport { 每秒郭氏帧 } from '../../../../constant'\nimport { 循环日志数据类型 } from '../../../../simulator/type'\nimport '../../../../index.css'\n\ninterface BattleLogModalProps extends ModalProps {\n  logData: 循环日志数据类型[]\n}\n\nconst BattleLogModal: React.FC<BattleLogModalProps> = (props) => {\n  const { open, onCancel, logData } = props\n\n  const columns = [\n    {\n      title: '日志',\n      dataIndex: '日志',\n      filters: [...循环模拟技能基础数据, { 技能名称: '流血' }, { 技能名称: '斩浪破锋' }]?.map(\n        (item) => {\n          return {\n            text: item?.技能名称,\n            value: item?.技能名称,\n          }\n        }\n      ),\n      onFilter: (value: any, record) => {\n        return record.日志?.includes(value) || record?.日志类型?.includes(value)\n      },\n    },\n    {\n      title: '日志类型',\n      dataIndex: '日志类型',\n      filters: 日志类型数组?.map((item) => {\n        return {\n          text: item,\n          value: item,\n        }\n      }),\n      onFilter: (value: any, record) => record.日志类型.indexOf(value) === 0,\n    },\n    {\n      title: '伤害次数',\n      dataIndex: '伤害次数',\n      render: (_, row) => {\n        return row?.其他数据?.伤害次数 || ''\n      },\n    },\n    {\n      title: 'buff列表',\n      dataIndex: 'buff列表',\n      render: (_, record) => {\n        return record.日志类型 === '造成伤害' ? (_ || [])?.join(',') || '-' : '-'\n      },\n    },\n    {\n      title: '日志帧',\n      dataIndex: '日志时间',\n      render: (_) => {\n        return _\n      },\n    },\n    {\n      title: '日志秒',\n      dataIndex: '日志秒',\n      render: (_, row) => {\n        return row?.日志时间 / 每秒郭氏帧\n      },\n    },\n    // {\n    //   title: '造成伤害',\n    //   dataIndex: '造成伤害',\n    // },\n    // {\n    //   title: '造成总伤害',\n    //   dataIndex: '造成总伤害',\n    // },\n    // {\n    //   title: '秒伤',\n    //   dataIndex: '秒伤',\n    // },\n  ]\n\n  return (\n    <Modal\n      className='cycle-simulator-modal'\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>战斗日志</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Table\n        dataSource={logData}\n        columns={columns}\n        size='small'\n        pagination={{ pageSize: 100, showTotal: (total) => total }}\n      />\n    </Modal>\n  )\n}\n\nexport default BattleLogModal\n","import { Modal, ModalProps, Space } from 'antd'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Chart } from '@antv/g2'\nimport { 循环日志数据类型 } from '../../../../../simulator/type'\nimport './index.css'\nimport { 格式化buff覆盖数组, 获取Buff覆盖率 } from './util'\n\ninterface BuffCountModalProps extends ModalProps {\n  open: boolean\n  onCancel: () => void\n  日志: 循环日志数据类型[]\n  总战斗用时: number // 总战斗用时\n}\n\nfunction BuffCountModal(props: BuffCountModalProps) {\n  const { open, onCancel, 日志, 总战斗用时 } = props\n  const [chartData, setChartData] = useState<any>()\n  const limitRef: any = useRef<any>()\n  const [覆盖率, 设置覆盖率] = useState<any>({})\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(() => {\n        initChart()\n      }, 20)\n    }\n    if (open) {\n      limitRef.current = false\n    } else {\n      limitRef.current = false\n      设置覆盖率({})\n      setChartData(undefined)\n    }\n  }, [open, 日志, 总战斗用时])\n\n  const initChart = () => {\n    if (limitRef.current) {\n      return\n    }\n    limitRef.current = true\n\n    const chart = chartData\n      ? chartData\n      : new Chart({\n          container: 'cycle-buff-count-chart',\n          autoFit: true,\n          renderer: 'canvas',\n          padding: [24, 120, 100, 120],\n        })\n\n    chart.tooltip({\n      crosshairs: false,\n    })\n\n    if (!chartData) {\n      setChartData(chart)\n    }\n\n    const dataSource = getDataSource()\n\n    chart.source(dataSource, {\n      time: {\n        tickCount: 10,\n      },\n    })\n    chart.axis('time', {\n      label: {\n        style: {\n          textAlign: 'center', // 文本对齐方向，可取值为： start middle end\n          fontSize: 16, // 文本大小\n        },\n      },\n    })\n\n    const data = getDataSource()\n\n    chart.data(data)\n    chart.coordinate().transpose()\n    chart.interval().position('type*range').color('type').label('range', { offset: 10 })\n    // .color(DOMAIN_COLOR)\n    chart.render()\n    // setLoading(false)\n\n    setTimeout(() => {\n      limitRef.current = false\n    }, 10)\n  }\n\n  const getDataSource = () => {\n    const { Buff枚举, 覆盖率 } = 获取Buff覆盖率(日志, 总战斗用时)\n    设置覆盖率(覆盖率)\n    return 格式化buff覆盖数组(Buff枚举)\n  }\n\n  return (\n    <Modal\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>Buff覆盖情况（时间单位：帧）</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Space className='cycle-buff-count-text' size={[16, 16]} wrap>\n        {Object.keys(覆盖率).map((item) => {\n          return (\n            <div key={item} className={'cycle-buff-count-text-wrap'}>\n              <span className='cycle-buff-count-text-label'>{item}：</span>\n              <span className='cycle-buff-count-text-value'>{覆盖率[item]}%</span>\n            </div>\n          )\n        })}\n      </Space>\n      {open ? <div id='cycle-buff-count-chart' className={'cycle-buff-count-chart'} /> : null}\n    </Modal>\n  )\n}\n\nexport default BuffCountModal\n","import { Alert, Checkbox, Form, Input, Modal, Select, Tabs } from 'antd'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 更新当前自定义循环列表 } from '@/store/data'\nimport { 延迟设定 } from '@/数据/常量'\nimport './index.css'\n\nconst { 计算循环 } = 获取当前数据()\n\ninterface SaveCustomCycleModalProps {\n  自定义循环保存弹窗: boolean\n  设置自定义循环保存弹窗: (e: boolean) => void\n  保存自定义循环: (名称, 加速选项, 延迟选项) => void\n}\n\nfunction SaveCustomCycleModal(props: SaveCustomCycleModalProps) {\n  const { 自定义循环保存弹窗, 设置自定义循环保存弹窗, 保存自定义循环 } = props\n  // 保存类型，覆盖｜新增\n  const [自定义循环类型, 设置自定义循环类型] = useState<string>()\n  // 自定义循环名称保存输入\n  const [自定义循环名称输入, 设置自定义循环名称输入] = useState<string>()\n  // 保存类型，覆盖｜新增\n  const [覆盖循环名, 设置覆盖循环名] = useState<string>()\n  // 保存加速序列\n  const [加速选项, 设置加速选项] = useState<number[]>([0, 1, 2])\n  const [延迟选项, 设置延迟选项] = useState<number[]>([0, 1, 2])\n\n  const 自定义循环 = useAppSelector((state) => state?.data?.自定义循环列表)\n\n  const dispatch = useAppDispatch()\n\n  const 全部循环 = useMemo(() => {\n    return (计算循环 || []).concat(自定义循环)\n  }, [自定义循环, 计算循环])\n\n  useEffect(() => {\n    if (自定义循环保存弹窗) {\n      if (自定义循环?.length) {\n        设置自定义循环类型('覆盖')\n      } else {\n        设置自定义循环类型('新增')\n      }\n    } else {\n      设置自定义循环类型(undefined)\n      设置自定义循环名称输入(undefined)\n      设置覆盖循环名(undefined)\n    }\n  }, [自定义循环保存弹窗, 自定义循环])\n\n  const 保存自定义循环前 = () => {\n    const 名称 = 自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入\n    保存自定义循环(名称, 加速选项, 延迟选项)\n  }\n\n  // 删除自定义循环\n  const 删除循环前提示 = (e, 名称) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    Modal.confirm({\n      title: `确定要删除循环【${名称}】吗?`,\n      content: '删除后将无法恢复',\n      okText: '我要删除',\n      onOk: async () => {\n        删除循环(名称)\n      },\n    })\n  }\n\n  const 删除循环 = (名称) => {\n    dispatch(更新当前自定义循环列表(自定义循环.filter((item) => item.名称 !== 名称)))\n  }\n\n  return (\n    <Modal\n      centered\n      title='保存自定义循环'\n      okButtonProps={{\n        disabled:\n          !(自定义循环类型 === '覆盖' ? 覆盖循环名 : 自定义循环名称输入) ||\n          !延迟选项?.length ||\n          !加速选项?.length,\n      }}\n      open={自定义循环保存弹窗}\n      onCancel={() => 设置自定义循环保存弹窗(false)}\n      onOk={保存自定义循环前}\n      width={630}\n      destroyOnClose\n      className={'cycle-custom-save-modal'}\n    >\n      <Tabs\n        className={'cycle-custom-save-modal-content'}\n        type='card'\n        activeKey={自定义循环类型}\n        onChange={设置自定义循环类型}\n      >\n        <Tabs.TabPane tab={'覆盖'} key='覆盖'>\n          <Select\n            value={覆盖循环名}\n            onChange={设置覆盖循环名}\n            optionLabelProp='label'\n            placeholder={'请选择你要覆盖的循环'}\n          >\n            {自定义循环.map((item) => {\n              return (\n                <Select.Option value={item.名称} key={item.名称} label={item.名称}>\n                  <div className={'cycle-custom-save-label'}>\n                    <span>{item.名称}</span>\n                    <span\n                      onClick={(e) => 删除循环前提示(e, item.名称)}\n                      className={'cycle-custom-save-delete'}\n                    >\n                      删除\n                    </span>\n                  </div>\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Tabs.TabPane>\n        <Tabs.TabPane tab={'新增'} key='新增'>\n          <Form>\n            <Form.Item\n              rules={[\n                {\n                  validator: (_, value, callback) => {\n                    if (value) {\n                      if (全部循环?.some((item) => item?.名称 === value)) {\n                        callback('已存在相同的循环名，请更换')\n                      }\n                    }\n                    callback()\n                  },\n                },\n              ]}\n            >\n              <Input\n                value={自定义循环名称输入}\n                placeholder='请输入自定义循环名称'\n                onChange={(e) => 设置自定义循环名称输入(e?.target?.value)}\n              />\n            </Form.Item>\n          </Form>\n        </Tabs.TabPane>\n      </Tabs>\n      <div className='cycle-custom-save-checkbox'>\n        <p>加速</p>\n        <Checkbox.Group value={加速选项} onChange={(e) => 设置加速选项(e as number[])}>\n          {Array.from({ length: 6 }, (v, i) => i).map((a) => {\n            return (\n              <Checkbox value={a} key={a}>\n                {a}段\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n        <p>延迟</p>\n        <Checkbox.Group value={延迟选项} onChange={(e) => 设置延迟选项(e as number[])}>\n          {延迟设定.map((item) => {\n            return (\n              <Checkbox value={item.value} key={item.value}>\n                {item.label}\n              </Checkbox>\n            )\n          })}\n        </Checkbox.Group>\n      </div>\n      <Alert message={'选项越少保存越快。没选择的选项在外部计算dps时不会进行计算。'} />\n    </Modal>\n  )\n}\n\nexport default SaveCustomCycleModal\n","import React, { useMemo } from 'react'\n\nimport { Space, Tooltip } from 'antd'\nimport { Buff枚举, DOT列表 } from '../../../simulator/type'\nimport { 每秒郭氏帧 } from '../../../constant'\nimport { 原始Buff数据 } from '../../../constant/skill'\nimport './index.css'\n\ninterface BuffProps {\n  title: string\n  buff列表: Buff枚举\n  DOT列表?: DOT列表\n  当前时间点: number\n  奇穴信息?: string[]\n}\n\nfunction Buff(props: BuffProps) {\n  const { title, buff列表, DOT列表 = {}, 奇穴信息, 当前时间点 } = props\n\n  const 当前buff列表 = Object.keys(buff列表).map((item) => buff列表[item])\n  const 最终显示buff列表 = useMemo(() => {\n    const res = [...(当前buff列表 || [])]\n    // 判断诸怀\n    if (奇穴信息?.includes('诸怀') && buff列表?.['承契']?.当前层数) {\n      res.push(原始Buff数据?.['诸怀'])\n    }\n    return res\n  }, [当前buff列表, buff列表, 奇穴信息])\n  const 当前Dot列表 = Object.keys(DOT列表)\n    .map((item) => {\n      const 原始数据 = 原始Buff数据?.[item]\n      return {\n        ...DOT列表[item],\n        ...原始数据,\n      }\n    })\n    ?.filter((item) => item?.待生效数据?.length)\n\n  return (\n    <div className={'cycle-status-bar-content cycle-status-bar-buff-content'}>\n      <div className={'cycle-status-bar-title'}>{title}</div>\n      <Space className={'cycle-status-bar-buff-list'} size={[8, 8]} wrap>\n        {最终显示buff列表?.length\n          ? 最终显示buff列表.map((item) => {\n              const 应该消失时间 = (item.刷新时间 || 0) + (item.最大持续时间 || 0)\n              const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n              const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n              const 层数 = item.当前层数 || 0\n              return (\n                <div className={'cycle-status-bar-buff'} key={item.名称}>\n                  <div className={'cycle-status-bar-buff-item'}>\n                    <Tooltip\n                      title={\n                        <div>\n                          <>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</>\n                          <p>{item.备注}</p>\n                        </div>\n                      }\n                    >\n                      <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                    </Tooltip>\n                    {层数 > 1 ? (\n                      <span className={'cycle-status-bar-buff-count'}>{item.当前层数}</span>\n                    ) : null}\n                  </div>\n                  <p\n                    className={`cycle-status-bar-buff-second ${\n                      剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                    }`}\n                  >\n                    {+剩余时间秒 >= 0 ? 剩余时间秒 : null}\n                  </p>\n                </div>\n              )\n            })\n          : null}\n        {当前Dot列表?.length\n          ? 当前Dot列表.map((item) => {\n              const 最后一跳 = item.待生效数据?.[item.待生效数据.length - 1] || {}\n              const 应该消失时间 = 最后一跳?.生效时间 || 0\n              const 剩余时间 = 应该消失时间 - 当前时间点 || 0\n              const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n              const 层数 = 最后一跳.当前层数 || 0\n              return (\n                <div className={'cycle-status-bar-buff'} key={item.名称}>\n                  <div className={'cycle-status-bar-buff-item'}>\n                    <Tooltip\n                      title={\n                        <div>\n                          <p>{`${item.名称}${层数 > 1 ? `${层数}层` : ''}`}</p>\n                          <p>{item.备注}</p>\n                        </div>\n                      }\n                    >\n                      <img className={'cycle-status-bar-buff-img'} src={item.图标} />\n                    </Tooltip>\n                    {层数 > 1 ? (\n                      <span className={'cycle-status-bar-buff-count'}>{层数}</span>\n                    ) : null}\n                  </div>\n                  <p\n                    className={`cycle-status-bar-buff-second ${\n                      剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                    }`}\n                  >\n                    {剩余时间秒}\n                  </p>\n                </div>\n              )\n            })\n          : null}\n        {!当前buff列表?.length && !当前Dot列表?.length ? (\n          <p className={'cycle-buff-empty'}>无</p>\n        ) : null}\n      </Space>\n    </div>\n  )\n}\n\nexport default Buff\n","import React, { useMemo } from 'react'\nimport { 宠物数据, 当前宠物数据 } from '../../../simulator/type'\n\nimport { Space, Tooltip } from 'antd'\nimport { 每秒郭氏帧 } from '../../../constant'\nimport { 宠物基础数据 } from '../../../constant/skill'\nimport './index.css'\n\ninterface TitaiProps {\n  当前宠物数据: 当前宠物数据\n  当前时间点: number\n}\n\nfunction Chongwu(props: TitaiProps) {\n  const { 当前宠物数据, 当前时间点 } = props\n\n  const 当前宠物列表: 宠物数据[] = useMemo(() => {\n    return Object.keys(当前宠物数据)\n      .map((key) => {\n        const 数据 = 当前宠物数据[key]\n        if (数据) {\n          return 数据?.入场时间 <= 当前时间点 && 数据?.离场时间 > 当前时间点 ? 数据 : false\n        } else {\n          return false as any\n        }\n      })\n      .filter((item) => item)\n  }, [当前宠物数据, 当前时间点])\n\n  return (\n    <div className={'cycle-status-bar-content'}>\n      <div className={'cycle-status-bar-title'}>宠物</div>\n      <Space className={'cycle-status-bar-buff-list-chongwu'} size={[8, 8]} wrap>\n        {当前宠物列表?.length ? (\n          当前宠物列表.map((item) => {\n            const 剩余时间 = item.离场时间 - 当前时间点 || 0\n            const 剩余时间秒 = (剩余时间 / 每秒郭氏帧).toFixed(1)\n            const 宠物原始数据 = 宠物基础数据?.[item.宠物]\n            return (\n              <div className={'cycle-status-bar-buff'} key={item.宠物}>\n                <div className={'cycle-status-bar-buff-item'}>\n                  <Tooltip title={item.宠物}>\n                    <img className={'cycle-status-bar-buff-img'} src={宠物原始数据.图标} />\n                  </Tooltip>\n                </div>\n                <p\n                  className={`cycle-status-bar-buff-second ${\n                    剩余时间 < 每秒郭氏帧 * 2 ? 'cycle-status-bar-buff-second-limit' : ''\n                  }`}\n                >\n                  {剩余时间秒}\n                </p>\n              </div>\n            )\n          })\n        ) : (\n          <p className={'cycle-buff-empty'}>无</p>\n        )}\n      </Space>\n    </div>\n  )\n}\n\nexport default Chongwu\n","import React from 'react'\nimport { Modal, ModalProps, Table } from 'antd'\nimport 循环模拟技能基础数据, { 日志类型数组 } from '../../../../constant/skill'\nimport { 每秒郭氏帧 } from '../../../../constant'\nimport { 循环日志数据类型 } from '../../../../simulator/type'\nimport '../../../../index.css'\n\ninterface BattleLogModalProps extends ModalProps {\n  logData: 循环日志数据类型[]\n}\n\nconst BattleLogModal: React.FC<BattleLogModalProps> = (props) => {\n  const { open, onCancel, logData } = props\n\n  const columns = [\n    {\n      title: '日志',\n      dataIndex: '日志',\n      filters: [\n        ...循环模拟技能基础数据,\n        { 技能名称: '贯穿' },\n        { 技能名称: '标鹄' },\n        { 技能名称: '引爆' },\n        { 技能名称: '没石饮羽' },\n      ]?.map((item) => {\n        return {\n          text: item?.技能名称,\n          value: item?.技能名称,\n        }\n      }),\n      onFilter: (value: any, record) => {\n        return record.日志?.includes(value) || record?.日志类型?.includes(value)\n      },\n    },\n    {\n      title: '日志类型',\n      dataIndex: '日志类型',\n      filters: 日志类型数组?.map((item) => {\n        return {\n          text: item,\n          value: item,\n        }\n      }),\n      onFilter: (value: any, record) => record.日志类型.indexOf(value) === 0,\n    },\n    {\n      title: 'buff列表',\n      dataIndex: 'buff列表',\n      render: (_, record) => {\n        return record.日志类型 === '造成伤害' ? (_ || [])?.join(',') || '-' : '-'\n      },\n    },\n    {\n      title: '日志帧',\n      dataIndex: '日志时间',\n      render: (_) => {\n        return _\n      },\n    },\n    {\n      title: '日志秒',\n      dataIndex: '日志秒',\n      render: (_, row) => {\n        return row?.日志时间 / 每秒郭氏帧\n      },\n    },\n    // {\n    //   title: '造成伤害',\n    //   dataIndex: '造成伤害',\n    // },\n    // {\n    //   title: '造成总伤害',\n    //   dataIndex: '造成总伤害',\n    // },\n    // {\n    //   title: '秒伤',\n    //   dataIndex: '秒伤',\n    // },\n  ]\n\n  return (\n    <Modal\n      className='cycle-simulator-modal'\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>战斗日志</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Table\n        dataSource={logData}\n        columns={columns}\n        size='small'\n        pagination={{ pageSize: 100, showTotal: (total) => total }}\n      />\n    </Modal>\n  )\n}\n\nexport default BattleLogModal\n","import { Modal, ModalProps, Space } from 'antd'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Chart } from '@antv/g2'\nimport { 循环日志数据类型 } from '../../../../../simulator/type'\nimport './index.css'\nimport { 格式化buff覆盖数组, 获取Buff覆盖率 } from './util'\n\ninterface BuffCountModalProps extends ModalProps {\n  open: boolean\n  onCancel: () => void\n  日志: 循环日志数据类型[]\n  总战斗用时: number // 总战斗用时\n}\n\nfunction BuffCountModal(props: BuffCountModalProps) {\n  const { open, onCancel, 日志, 总战斗用时 } = props\n  const [chartData, setChartData] = useState<any>()\n  const limitRef: any = useRef<any>()\n  const [覆盖率, 设置覆盖率] = useState<any>({})\n\n  useEffect(() => {\n    if (open) {\n      setTimeout(() => {\n        initChart()\n      }, 20)\n    }\n    if (open) {\n      limitRef.current = false\n    } else {\n      limitRef.current = false\n      设置覆盖率({})\n      setChartData(undefined)\n    }\n  }, [open, 日志, 总战斗用时])\n\n  const initChart = () => {\n    if (limitRef.current) {\n      return\n    }\n    limitRef.current = true\n\n    const chart = chartData\n      ? chartData\n      : new Chart({\n          container: 'cycle-buff-count-chart',\n          autoFit: true,\n          renderer: 'canvas',\n          padding: [24, 120, 100, 120],\n        })\n\n    chart.tooltip({\n      crosshairs: false,\n    })\n\n    if (!chartData) {\n      setChartData(chart)\n    }\n\n    const dataSource = getDataSource()\n\n    chart.source(dataSource, {\n      time: {\n        tickCount: 10,\n      },\n    })\n    chart.axis('time', {\n      label: {\n        style: {\n          textAlign: 'center', // 文本对齐方向，可取值为： start middle end\n          fontSize: 16, // 文本大小\n        },\n      },\n    })\n\n    const data = getDataSource()\n\n    chart.data(data)\n    chart.coordinate().transpose()\n    chart.interval().position('type*range').color('type').label('range', { offset: 10 })\n    // .color(DOMAIN_COLOR)\n    chart.render()\n    // setLoading(false)\n\n    setTimeout(() => {\n      limitRef.current = false\n    }, 10)\n  }\n\n  const getDataSource = () => {\n    const { Buff枚举, 覆盖率 } = 获取Buff覆盖率(日志, 总战斗用时)\n    设置覆盖率(覆盖率)\n    return 格式化buff覆盖数组(Buff枚举)\n  }\n\n  return (\n    <Modal\n      open={open}\n      onCancel={onCancel}\n      title={\n        <div className={'cycle-simulator-modal-header'}>\n          <h1 className={'cycle-simulator-modal-title'}>Buff覆盖情况（时间单位：帧）</h1>\n        </div>\n      }\n      width={'80%'}\n      centered\n      footer={false}\n    >\n      <Space className='cycle-buff-count-text' size={[16, 16]} wrap>\n        {Object.keys(覆盖率).map((item) => {\n          return (\n            <div key={item} className={'cycle-buff-count-text-wrap'}>\n              <span className='cycle-buff-count-text-label'>{item}：</span>\n              <span className='cycle-buff-count-text-value'>{覆盖率[item]}%</span>\n            </div>\n          )\n        })}\n      </Space>\n      {open ? <div id='cycle-buff-count-chart' className={'cycle-buff-count-chart'} /> : null}\n    </Modal>\n  )\n}\n\nexport default BuffCountModal\n","import { Alert, Form, Input, Modal, Select, Tabs, Tooltip, message } from 'antd'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from '@/hooks'\nimport { 更新全部方案数据, 更新选中的方案数据 } from '@/store/data'\nimport { DEFAULT_PROJECT_NAME } from '@/数据/常量'\nimport './index.css'\n\ninterface SaveCustomProjectModalProps {\n  自定义方案保存弹窗: boolean\n  设置自定义方案保存弹窗: (e: boolean) => void\n  保存自定义方案: (名称) => void\n}\n\n// 最多保存数量\nconst LIMIT_NUM = 10\n\nfunction SaveCustomProjectModal(props: SaveCustomProjectModalProps) {\n  const { 自定义方案保存弹窗, 设置自定义方案保存弹窗, 保存自定义方案 } = props\n  // 保存类型，覆盖｜新增\n  const [自定义方案类型, 设置自定义方案类型] = useState<string>()\n  // 自定义方案名称保存输入\n  const [自定义方案名称输入, 设置自定义方案名称输入] = useState<string>()\n  // 保存类型，覆盖｜新增\n  const [覆盖方案名, 设置覆盖方案名] = useState<string>()\n\n  const 全部方案数据 = useAppSelector((state) => state?.data?.全部方案数据)\n  const 当前方案名称 = useAppSelector((state) => state?.data?.当前方案名称)\n\n  const dispatch = useAppDispatch()\n\n  const 全部方案列表 = useMemo(() => {\n    return Object.keys(全部方案数据).map((item) => {\n      return 全部方案数据[item]\n    })\n  }, [全部方案数据])\n\n  useEffect(() => {\n    if (自定义方案保存弹窗) {\n      if (全部方案列表?.length) {\n        设置自定义方案类型('覆盖')\n      } else {\n        设置自定义方案类型('新增')\n      }\n    } else {\n      设置自定义方案类型(undefined)\n      设置自定义方案名称输入(undefined)\n      设置覆盖方案名(undefined)\n    }\n  }, [自定义方案保存弹窗, 全部方案列表])\n\n  const 保存自定义方案前 = () => {\n    const 名称 = 自定义方案类型 === '覆盖' ? 覆盖方案名 : 自定义方案名称输入\n    if (\n      自定义方案类型 === '新增' &&\n      全部方案列表?.some((item) => item?.方案名称 === 自定义方案名称输入)\n    ) {\n      message.error('已存在相同的方案名称，请更换')\n      return\n    }\n    保存自定义方案(名称)\n  }\n\n  // 删除自定义方案\n  const 删除方案前提示 = (e, 名称) => {\n    e.stopPropagation()\n    e.preventDefault()\n\n    Modal.confirm({\n      title: `确定要删除方案【${名称}】吗?`,\n      content: '删除后将无法恢复',\n      okText: '我要删除',\n      onOk: async () => {\n        删除方案(名称)\n      },\n    })\n  }\n\n  const 删除方案 = (名称) => {\n    const 新全部方案数据 = { ...全部方案数据 }\n    delete 新全部方案数据[名称]\n\n    dispatch(更新全部方案数据(新全部方案数据))\n\n    if (当前方案名称 === 名称) {\n      更新方案(DEFAULT_PROJECT_NAME)\n    }\n  }\n\n  const 更新方案 = (e) => {\n    dispatch(更新选中的方案数据(e))\n  }\n\n  return (\n    <Modal\n      centered\n      title='保存自定义方案'\n      okButtonProps={{\n        disabled: !(自定义方案类型 === '覆盖' ? 覆盖方案名 : 自定义方案名称输入),\n      }}\n      open={自定义方案保存弹窗}\n      onCancel={() => 设置自定义方案保存弹窗(false)}\n      onOk={保存自定义方案前}\n      destroyOnClose\n      width={600}\n      className={'project-custom-save-modal'}\n    >\n      <Alert\n        type='success'\n        style={{ marginBottom: 12 }}\n        message='目前方案会保存当前的【装备信息】【奇穴信息】【增益信息】【选中的循环】'\n      />\n      <Tabs\n        className={'project-custom-save-modal-content'}\n        type='card'\n        activeKey={自定义方案类型}\n        onChange={设置自定义方案类型}\n      >\n        <Tabs.TabPane tab={'覆盖'} key='覆盖'>\n          <Select\n            value={覆盖方案名}\n            onChange={设置覆盖方案名}\n            optionLabelProp='label'\n            placeholder={'请选择你要覆盖的方案'}\n          >\n            {全部方案列表.map((item) => {\n              return (\n                <Select.Option value={item.方案名称} key={item.方案名称} label={item.方案名称}>\n                  <div className={'project-custom-save-label'}>\n                    <span>{item.方案名称}</span>\n                    {item.方案名称 !== DEFAULT_PROJECT_NAME ? (\n                      <span\n                        onClick={(e) => 删除方案前提示(e, item.方案名称)}\n                        className={'project-custom-save-delete'}\n                      >\n                        删除\n                      </span>\n                    ) : null}\n                  </div>\n                </Select.Option>\n              )\n            })}\n          </Select>\n        </Tabs.TabPane>\n        <Tabs.TabPane\n          tab={\n            <Tooltip\n              title={全部方案列表?.length >= LIMIT_NUM ? `最多保存${LIMIT_NUM}个自定义方案` : ''}\n            >\n              新增\n            </Tooltip>\n          }\n          key='新增'\n          disabled={全部方案列表?.length >= LIMIT_NUM}\n        >\n          <Form>\n            <Form.Item\n              rules={[\n                {\n                  validator: (_, value, callback) => {\n                    if (value) {\n                      if (全部方案数据?.[value]) {\n                        callback('已存在相同的方案名，请更换')\n                      }\n                    }\n                    callback()\n                  },\n                },\n              ]}\n            >\n              <Input\n                value={自定义方案名称输入}\n                placeholder='请输入自定义方案名称'\n                onChange={(e) => 设置自定义方案名称输入(e?.target?.value)}\n              />\n            </Form.Item>\n          </Form>\n        </Tabs.TabPane>\n      </Tabs>\n    </Modal>\n  )\n}\n\nexport default SaveCustomProjectModal\n","import { 属性简写枚举 } from '@/@types/枚举'\nimport { 装备位置部位枚举 } from '@/@types/装备'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\n\nconst { 附魔 } = 获取当前数据()\n\n// 获取配装数据\nexport const getEquipData = (data) => {\n  const equip: any = {}\n  let msg = ''\n  try {\n    Object.keys(data).map((item) => {\n      if (EquipPositionMap[item]) {\n        const basicData = data[item]\n        const 附魔属性 = basicData?.enhance?.Attribute1ID\n        const 附魔值 = basicData?.enhance?.Attribute1Value1\n\n        const 附魔数据判断 = 附魔?.find((item) => item?.附魔名称 === `${附魔属性}+${附魔值}`)\n        if (!属性简写枚举[附魔属性]) {\n          console.warn(`存在计算器未内置附魔${附魔属性}${附魔值}`)\n        }\n        if (\n          !附魔数据判断 &&\n          属性简写枚举[附魔属性] &&\n          !['atVitalityBase', 'atDecriticalDamageBase', 'atToughnessBase'].includes(附魔属性)\n        ) {\n          console.warn(`存在计算器未内置附魔${附魔属性}${附魔值}，已跳过。不影响导入。`)\n        }\n        equip[EquipPositionMap[item]] = {\n          当前精炼等级: basicData?.strength,\n          id: basicData?.equip.ID,\n          装备部位: 装备位置部位枚举[EquipPositionMap[item]],\n          镶嵌孔数组: basicData?.embedding?.map((a) => {\n            if (!属性简写枚举[a?.raw?.[0]]) {\n              console.warn(`存在计算器未内置镶嵌孔${a?.raw?.[0]}`)\n            }\n            return {\n              镶嵌类型: a?.raw?.[0],\n              镶嵌宝石等级: a?.level,\n            }\n          }),\n          附魔: 属性简写枚举[附魔属性] && 附魔值 ? `${属性简写枚举[附魔属性]}+${附魔值}` : '',\n        }\n\n        // 判断大附魔\n        if (DaFuMoMap[item] && !!basicData?.enchant) {\n          equip[DaFuMoMap[item]] = 1\n        }\n\n        if (item === 'PRIMARY_WEAPON' && basicData?.stone) {\n          equip.五彩石 = basicData?.stone.Name\n        }\n      }\n    })\n  } catch (e) {\n    msg = '获取方案异常'\n  }\n  return {\n    equip,\n    errorMsg: msg ? (\n      <span>\n        <p>{msg}</p>\n        {/* <p>请联系计算器作者（QQ：372103645）并提供异常的配装ID</p> */}\n      </span>\n    ) : null,\n  }\n}\n\nconst DaFuMoMap = {\n  HAT: '大附魔_伤帽',\n  JACKET: '大附魔_伤衣',\n  BELT: '大附魔_伤腰',\n  WRIST: '大附魔_伤腕',\n  SHOES: '大附魔_伤鞋',\n}\n\nconst EquipPositionMap = {\n  HAT: '_1',\n  JACKET: '_2',\n  BELT: '_3',\n  WRIST: '_4',\n  BOTTOMS: '_5',\n  SHOES: '_6',\n  NECKLACE: '_7',\n  PENDANT: '_8',\n  RING_1: '_9',\n  RING_2: '_10',\n  SECONDARY_WEAPON: '_11',\n  PRIMARY_WEAPON: '_12',\n}\n","import { getPzDataById } from '@/api'\nimport { Alert, Button, Input, Image, Modal, Spin } from 'antd'\nimport React, { useState } from 'react'\nimport { getEquipData } from './util'\nimport Img_Help_1 from '@/assets/daoru/daoru_help_1.png'\nimport Img_Help_2 from '@/assets/daoru/daoru_help_2.png'\n\nfunction Jx3BoxImport({ onOk }) {\n  const [loading, setLoading] = useState(false)\n  const [helpVisible, setHelpVisible] = useState(false)\n  const [id, setId] = useState()\n  const [data, setData] = useState<any>(undefined)\n  const [errorMsg, setErrorMsg] = useState<string>('')\n\n  const changeId = (e) => {\n    setId(e.target.value.trim())\n  }\n\n  const handleGetPzData = async () => {\n    setLoading(true)\n    setData(undefined)\n    setErrorMsg('')\n    const res: any = await getPzDataById({ id })\n    setLoading(false)\n    if (!res.code) {\n      const getData = getPzData(res.data)\n      if (getData?.msg) {\n        setErrorMsg(getData?.msg)\n      } else {\n        setData(getData)\n      }\n    } else {\n      setErrorMsg(res.msg)\n    }\n    return\n  }\n\n  const handleClickImport = () => {\n    if (data?.equipData) {\n      onOk(data?.equipData)\n    }\n  }\n\n  return (\n    <div>\n      <Alert\n        message={\n          <span>\n            在使用导入功能之前，请确保你的配装方案权限公开。\n            <a onClick={() => setHelpVisible(true)}>如何获取配装ID</a>\n          </span>\n        }\n        type='info'\n      />\n      <div className='pz-daoru-input-wrap'>\n        <Input value={id} onChange={changeId} placeholder='请输入魔盒配装方案ID' />\n        <Button disabled={loading || !id} onClick={() => handleGetPzData()}>\n          获取配装方案\n        </Button>\n      </div>\n      {loading ? (\n        <div className='pz-daoru-text-wrap'>\n          正在获取配装方案\n          <Spin style={{ marginLeft: 12 }} spinning={true} />\n        </div>\n      ) : (\n        <>\n          {data ? (\n            <div className={'pz-daoru-success'}>\n              <p className='pz-daoru-success-tip'>成功获取配装方案</p>\n              <div className='pz-daoru-success-content'>\n                <div className='pz-daoru-success-info'>\n                  <div className='pz-daoru-success-user'>\n                    <img\n                      className='pz-daoru-success-avatar'\n                      src={data?.showData?.user_avatar}\n                      alt=''\n                    />\n                    <div>{data?.showData?.display_name}</div>\n                  </div>\n                  <div className='pz-daoru-success-title' title={data?.showData?.title}>\n                    {data?.showData?.title}\n                  </div>\n                </div>\n                <Button type='primary' onClick={handleClickImport}>\n                  导入\n                </Button>\n              </div>\n            </div>\n          ) : null}\n          {errorMsg ? (\n            <div className='pz-daoru-text-wrap pz-daoru-text-error'>{errorMsg}</div>\n          ) : null}\n        </>\n      )}\n      <Modal\n        footer={null}\n        title='如何获取配装ID'\n        open={helpVisible}\n        onCancel={() => setHelpVisible(false)}\n      >\n        <p>\n          1、打开你的配装方案，点击导出。\n          <Image className='pz-daoru-help-img' src={Img_Help_1} />\n        </p>\n        <p>\n          2、选择数据版,复制配装ID.\n          <Image className='pz-daoru-help-img' src={Img_Help_2} />\n        </p>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Jx3BoxImport\n\n// 获取配装数据\nconst getPzData = (data) => {\n  // 获取展示信息\n  const showData = {\n    display_name: data?.pz_author_info?.display_name,\n    user_avatar: data?.pz_author_info?.user_avatar,\n    title: data?.title,\n  }\n  let equipData = null\n  let msg: any = ''\n  if (data?.snapshot) {\n    const { equip, errorMsg } = getEquipData(data?.snapshot)\n    if (equip) {\n      equipData = equip\n    }\n    if (errorMsg) {\n      msg = errorMsg\n    }\n  }\n  return { showData, equipData, msg }\n}\n","import { 循环技能详情, 循环详情, 技能增益列表数据 } from '@/@types/循环'\nimport commonMap from './common'\nimport 凌海诀枚举 from './凌海诀/map.json'\nimport { message } from 'antd'\n\nconst 心法枚举 = {\n  凌海诀: 凌海诀枚举,\n}\n\nexport const 获取数据 = ({ 心法, 数据, 最大时间 }): 循环详情 => {\n  const 心法数据枚举 = 心法枚举[心法]\n  const JSONData = JSON.parse(数据 || '{}')\n  const res: 循环技能详情[] = []\n\n  // 判断有没有战斗角色\n  const PlayersId = JSONData?.players && Object.keys(JSONData?.players)?.[0]\n  const TargetId = JSONData?.targets?.[PlayersId]?.[0]\n\n  const 解析战斗数据 = JSONData?.records?.[PlayersId]?.[TargetId] || JSONData\n\n  let 战斗时间 = 0\n  if (心法数据枚举) {\n    Object.keys(解析战斗数据).forEach((key) => {\n      const splitKey = key?.split('-')\n      if (splitKey?.length) {\n        const 技能名称ID = splitKey[0]\n        const 技能层数 = Number(splitKey[2])\n        let 技能名称 = 心法数据枚举?.skills?.[技能名称ID]\n        if (技能名称?.includes('DOT')) {\n          技能名称 = `${技能名称}·${commonMap?.StackMap?.[技能层数]}`\n        }\n        if (!技能名称) {\n          message.error(`技能名称ID未获取：${技能名称ID}`)\n        }\n        let 技能数量 = 0\n        let 技能增益列表: 技能增益列表数据[] = []\n        const 技能增益结果对象 = 解析战斗数据[key]\n\n        ;(Object.keys(技能增益结果对象) || []).forEach((zengyiKey) => {\n          if (zengyiKey === ';;') {\n            let 增益数量获取 = 1\n            const 战斗时间数组 = 技能增益结果对象[zengyiKey]?.[0]\n            const 最终战斗时间 = 战斗时间数组[战斗时间数组.length]?.[0]\n            if (最终战斗时间 <= 最大时间 * 16) {\n              增益数量获取 = 战斗时间数组?.length || 1\n              if (typeof 最终战斗时间 === 'number') {\n                if (战斗时间 < 最终战斗时间) {\n                  战斗时间 = 最终战斗时间\n                }\n              }\n              技能数量 += 增益数量获取\n            }\n          } else {\n            // 分号分割成三部分 当前Buff，快照Buff，目标Buff\n            const 用分号分割 = zengyiKey?.split(';')\n            const 是否吃快照 = 心法数据枚举?.吃快照技能?.includes(技能名称ID)\n            const 最终分割数组: string[] = 快照判断(用分号分割, 是否吃快照, 心法数据枚举)\n\n            if (最终分割数组?.length) {\n              const 增益buff名称列表: string[] = []\n              最终分割数组.forEach((zengyi) => {\n                const splitZengyi = zengyi?.split('-')\n                if (splitZengyi?.length) {\n                  const 增益名称ID = splitZengyi[0]\n                  const 增益层数 = Number(splitZengyi[1])\n                  let 增益名称 =\n                    心法数据枚举?.buff?.[增益名称ID] || 心法数据枚举?.buff?.[`;${增益名称ID}`]\n                  // 判断伤腰大附魔\n                  if (增益层数 > 1 && 增益名称 && 增益名称ID === '15455') {\n                    增益名称 = `${增益名称}·${增益层数}`\n                  }\n                  if (增益名称) {\n                    if (!增益buff名称列表?.includes(增益名称)) {\n                      增益buff名称列表.push(增益名称)\n                    }\n                  } else {\n                    // message.error(`增益名称ID未匹配${增益名称ID}`)\n                  }\n                }\n              })\n              let 增益数量获取 = 1\n              const 战斗时间数组 = 技能增益结果对象[zengyiKey]\n              // 获取该战斗时间数组内在最大时间范围内的数量\n              const 生效战斗时间数组 = 战斗时间数组.filter((item) =>\n                Number(item?.[0] <= 最大时间 * 16)\n              )\n              增益数量获取 = 生效战斗时间数组?.length || 1\n              增益buff名称列表.sort((a, b) => a.localeCompare(b))\n              const 最终战斗时间 = 生效战斗时间数组[生效战斗时间数组.length - 1]?.[0]\n\n              if (typeof 最终战斗时间 === 'number') {\n                if (战斗时间 < 最终战斗时间) {\n                  战斗时间 = 最终战斗时间\n                }\n              }\n              const 增益buff列表名字 = 增益buff名称列表.join(',')\n\n              if (技能增益列表?.some((item) => item?.增益名称 === 增益buff列表名字)) {\n                技能增益列表 = 技能增益列表.map((item) => {\n                  return item?.增益名称 === 增益buff列表名字\n                    ? {\n                        ...item,\n                        增益技能数: item.增益技能数 + 增益数量获取,\n                      }\n                    : item\n                })\n              } else {\n                技能增益列表.push({\n                  增益名称: 增益buff列表名字,\n                  增益技能数: 增益数量获取,\n                })\n              }\n              技能数量 += 增益数量获取\n            } else {\n              console.log('zengyiKey', zengyiKey)\n            }\n          }\n        })\n\n        技能增益列表.sort((a, b) => a.增益名称.localeCompare(b.增益名称))\n\n        res.push({\n          技能名称,\n          技能数量,\n          技能增益列表,\n        })\n      }\n    })\n  }\n  res.sort((a, b) => a.技能名称.localeCompare(b.技能名称))\n\n  return {\n    战斗时间: 战斗时间 / 16,\n    技能详情: res,\n  }\n}\n\n/**\n * 快照那个逻辑我再复述一遍你看看我理解的对不对\n * 先声明一个吃快照的属性集合\n * 然后在判断 一个 吃快照的技能时\n * 吃快照的属性只检查第二个数组的情况\n * 不吃快照的属性只检查第一个数组和第三个分组的情况\n * @params 数组 当前Buff，快照Buff，目标Buff\n */\n\nconst 快照判断 = (数组: string[] = [], 是否吃快照 = false, 心法数据枚举): string[] => {\n  const 最终Buff: string[] = []\n  const 当前Buff = 数组?.[0]?.split(',')\n  const 快照Buff = 数组?.[1]?.split(',')\n  const 目标Buff = 数组?.[2]?.split(',')\n  const 非快照buff = [...(当前Buff || []), ...(目标Buff || [])]\n\n  if (是否吃快照) {\n    if (快照Buff?.length) {\n      快照Buff.forEach((增益) => {\n        const splitZengyi = 增益?.split('-')\n        const 增益名称ID = splitZengyi[0]\n        if (增益 && 增益名称ID && 心法数据枚举?.快照Buff列表?.includes(增益名称ID)) {\n          if (!最终Buff?.includes(增益)) {\n            最终Buff.push(增益)\n          }\n        }\n      })\n    }\n    非快照buff.forEach((增益) => {\n      const splitZengyi = 增益?.split('-')\n      const 增益名称ID = splitZengyi[0]\n      if (增益 && 增益名称ID && !心法数据枚举?.快照Buff列表?.includes(增益名称ID)) {\n        if (!最终Buff?.includes(增益)) {\n          最终Buff.push(增益)\n        }\n      }\n    })\n  } else {\n    非快照buff.forEach((增益) => {\n      const splitZengyi = 增益?.split('-')\n      const 增益名称ID = splitZengyi[0]\n      if (增益 && 增益名称ID) {\n        if (!最终Buff?.includes(增益)) {\n          最终Buff.push(增益)\n        }\n      }\n    })\n  }\n  return 最终Buff\n}\n","import React from 'react'\nimport { useAppSelector } from '@/hooks'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { hexToRgbaToDark } from '@/工具函数/help'\n\nimport { 默认系统渐变色 } from './default'\nimport './index.css'\n\nconst 系统配置 = 获取当前数据()?.系统配置 || {}\n\nconst 背景图 = 系统配置.背景图 || []\nconst 背景色渐变 = 系统配置.背景色渐变 || 默认系统渐变色(系统配置.主题色)\n\ninterface LayoutProps {\n  children: any\n}\n\nconst Layout: React.FC<LayoutProps> = (props) => {\n  const { children } = props\n  const 背景图片显示状态 = useAppSelector((state) => state?.system?.背景图片显示状态)\n\n  // 丛长度为N的数组中随机取一个值\n  function getRandomFromArray(arr, n) {\n    const randomIndex = Math.floor(Math.random() * n)\n    return arr[randomIndex]\n  }\n\n  return (\n    <div className='layout'>\n      <div\n        className='layout-wrapper'\n        style={{\n          backgroundImage: 背景色渐变,\n        }}\n      >\n        {children}\n      </div>\n      {背景图片显示状态 ? (\n        <img className='layout-bg' src={getRandomFromArray(背景图, 背景图?.length)} alt='' />\n      ) : (\n        <div\n          className={'layout-bg-color'}\n          style={{ backgroundColor: `${hexToRgbaToDark(系统配置.主题色, '1', 225)}` }}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default Layout\n","import { hexToRgbaToDark } from '@/工具函数/help'\n\nexport const 默认系统渐变色 = (主题色) => {\n  const color1 = hexToRgbaToDark(主题色, '0.3', 35)\n  const color2 = hexToRgbaToDark(主题色, '0.05', 25)\n  return `linear-gradient(to right, ${color1} 20%, ${color2} 100%)`\n}\n","import { Checkbox } from 'antd'\nimport React from 'react'\n\nfunction ValueCheckBox(props) {\n  const { value, onChange, ...options } = props\n  const beforeOnChange = (e) => {\n    onChange && onChange(e?.target?.checked ? 1 : 0)\n  }\n  return <Checkbox checked={!!value} onChange={beforeOnChange} {...options} />\n}\n\nexport default ValueCheckBox\n"],"names":["计算循环","获取当前数据","props","自定义循环保存弹窗","设置自定义循环保存弹窗","保存自定义循环","useState","自定义循环类型","设置自定义循环类型","自定义循环名称输入","设置自定义循环名称输入","覆盖循环名","设置覆盖循环名","加速选项","设置加速选项","延迟选项","设置延迟选项","自定义循环","useAppSelector","state","data","自定义循环列表","dispatch","useAppDispatch","全部循环","useMemo","concat","useEffect","length","undefined","删除循环","名称","更新当前自定义循环列表","filter","item","centered","title","okButtonProps","disabled","open","onCancel","onOk","width","destroyOnClose","className","type","activeKey","onChange","tab","value","optionLabelProp","placeholder","map","label","onClick","e","stopPropagation","preventDefault","Modal","content","okText","删除循环前提示","rules","validator","_","callback","some","target","Array","from","v","i","a","延迟设定","message","buff列表","当前时间点","当前buff列表","Object","keys","size","wrap","剩余时间","刷新时间","最大持续时间","剩余时间秒","每秒郭氏帧","toFixed","层数","当前层数","src","图标","logData","columns","dataIndex","filters","循环模拟技能基础数据","技能名称","text","onFilter","record","日志","includes","日志类型","日志类型数组","indexOf","render","row","其他数据","伤害次数","join","日志时间","footer","dataSource","pagination","pageSize","showTotal","total","总战斗用时","chartData","setChartData","limitRef","useRef","覆盖率","设置覆盖率","setTimeout","initChart","current","chart","Chart","container","autoFit","renderer","padding","tooltip","crosshairs","getDataSource","source","time","tickCount","axis","style","textAlign","fontSize","coordinate","transpose","interval","position","color","offset","获取Buff覆盖率","Buff枚举","格式化buff覆盖数组","id","DOT列表","奇穴信息","最终显示buff列表","res","push","原始Buff数据","当前Dot列表","原始数据","待生效数据","备注","最后一跳","生效时间","当前宠物数据","当前宠物列表","key","数据","入场时间","离场时间","宠物原始数据","宠物基础数据","宠物","自定义方案保存弹窗","设置自定义方案保存弹窗","保存自定义方案","自定义方案类型","设置自定义方案类型","自定义方案名称输入","设置自定义方案名称输入","覆盖方案名","设置覆盖方案名","全部方案数据","当前方案名称","全部方案列表","删除方案","新全部方案数据","更新全部方案数据","更新方案","DEFAULT_PROJECT_NAME","更新选中的方案数据","方案名称","marginBottom","删除方案前提示","附魔","DaFuMoMap","HAT","JACKET","BELT","WRIST","SHOES","EquipPositionMap","BOTTOMS","NECKLACE","PENDANT","RING_1","RING_2","SECONDARY_WEAPON","PRIMARY_WEAPON","loading","setLoading","helpVisible","setHelpVisible","setId","setData","errorMsg","setErrorMsg","handleGetPzData","getPzDataById","code","msg","getData","getPzData","trim","marginLeft","spinning","showData","user_avatar","alt","display_name","equipData","Img_Help_1","Img_Help_2","pz_author_info","snapshot","equip","basicData","附魔属性","enhance","Attribute1ID","附魔值","Attribute1Value1","附魔数据判断","find","附魔名称","属性简写枚举","console","warn","当前精炼等级","strength","ID","装备部位","装备位置部位枚举","镶嵌孔数组","embedding","raw","镶嵌类型","镶嵌宝石等级","level","enchant","stone","五彩石","Name","getEquipData","心法枚举","凌海诀","凌海诀枚举","获取数据","心法","最大时间","心法数据枚举","JSONData","JSON","parse","PlayersId","players","TargetId","targets","解析战斗数据","records","战斗时间","forEach","splitKey","split","技能名称ID","技能层数","Number","skills","commonMap","技能数量","技能增益列表","技能增益结果对象","zengyiKey","增益数量获取","战斗时间数组","最终战斗时间","用分号分割","是否吃快照","吃快照技能","最终分割数组","快照判断","增益buff名称列表","zengyi","splitZengyi","增益名称ID","增益层数","增益名称","buff","生效战斗时间数组","sort","b","localeCompare","增益buff列表名字","增益技能数","log","技能详情","数组","最终Buff","当前Buff","快照Buff","目标Buff","非快照buff","增益","快照Buff列表","系统配置","背景图","背景色渐变","主题色","color1","hexToRgbaToDark","color2","默认系统渐变色","arr","n","children","背景图片显示状态","system","backgroundImage","Math","floor","random","backgroundColor","options","checked"],"sourceRoot":""}