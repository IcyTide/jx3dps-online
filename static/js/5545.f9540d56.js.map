{"version":3,"file":"static/js/5545.f9540d56.js","mappings":"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","sources":["../node_modules/@antv/g-svg/src/shape/image.ts","../node_modules/@antv/g-svg/src/shape/line.ts","../node_modules/@antv/g-svg/src/shape/marker/symbols.ts","../node_modules/@antv/g-svg/src/shape/marker/index.ts","../node_modules/@antv/g-svg/src/shape/path.ts","../node_modules/@antv/g-svg/src/shape/polygon.ts","../node_modules/@antv/g-svg/src/shape/polyline.ts","../node_modules/@antv/g-svg/src/shape/rect.ts","../node_modules/@antv/g-svg/src/util/format.ts","../node_modules/@antv/g-svg/src/shape/text.ts","../node_modules/@antv/g-svg/src/util/dom.ts","../node_modules/@antv/g-svg/src/util/draw.ts","../node_modules/@antv/g-svg/src/util/svg.ts"],"sourcesContent":["/**\n * @fileoverview image\n * @author dengfuping_develop@163.com\n */\n\nimport { each, isString } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\n\nclass Image extends ShapeBase {\n  type: string = 'image';\n  canFill: boolean = false;\n  canStroke: boolean = false;\n\n  getDefaultAttrs() {\n    const attrs = super.getDefaultAttrs();\n    return {\n      ...attrs,\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n    };\n  }\n\n  createPath(context, targetAttrs) {\n    const attrs = this.attr();\n    const el = this.get('el');\n    each(targetAttrs || attrs, (value, attr) => {\n      if (attr === 'img') {\n        this._setImage(attrs.img);\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  }\n\n  setAttr(name: string, value: any) {\n    this.attrs[name] = value;\n    if (name === 'img') {\n      this._setImage(value);\n    }\n  }\n\n  _setImage(img) {\n    const attrs = this.attr();\n    const el = this.get('el');\n    if (isString(img)) {\n      el.setAttribute('href', img);\n    } else if (img instanceof (window as any).Image) {\n      if (!attrs.width) {\n        el.setAttribute('width', img.width);\n        this.attr('width', img.width);\n      }\n      if (!attrs.height) {\n        el.setAttribute('height', img.height);\n        this.attr('height', img.height);\n      }\n      el.setAttribute('href', img.src);\n    } else if (img instanceof HTMLElement && isString(img.nodeName) && img.nodeName.toUpperCase() === 'CANVAS') {\n      // @ts-ignore\n      el.setAttribute('href', img.toDataURL());\n    } else if (img instanceof ImageData) {\n      const canvas = document.createElement('canvas');\n      canvas.setAttribute('width', `${img.width}`);\n      canvas.setAttribute('height', `${img.height}`);\n      canvas.getContext('2d').putImageData(img, 0, 0);\n      if (!attrs.width) {\n        el.setAttribute('width', `${img.width}`);\n        this.attr('width', img.width);\n      }\n      if (!attrs.height) {\n        el.setAttribute('height', `${img.height}`);\n        this.attr('height', img.height);\n      }\n      el.setAttribute('href', canvas.toDataURL());\n    }\n  }\n}\n\nexport default Image;\n","/**\n * @fileoverview line\n * @author dengfuping_develop@163.com\n */\nimport { Line as LineUtil } from '@antv/g-math';\nimport { each, isObject } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\n\nclass Line extends ShapeBase {\n  type: string = 'line';\n  canFill: boolean = false;\n  canStroke: boolean = true;\n\n  getDefaultAttrs() {\n    const attrs = super.getDefaultAttrs();\n    return {\n      ...attrs,\n      x1: 0,\n      y1: 0,\n      x2: 0,\n      y2: 0,\n      startArrow: false,\n      endArrow: false,\n    };\n  }\n\n  createPath(context, targetAttrs) {\n    const attrs = this.attr();\n    const el = this.get('el');\n    each(targetAttrs || attrs, (value, attr) => {\n      if (attr === 'startArrow' || attr === 'endArrow') {\n        if (value) {\n          const id = isObject(value)\n            ? context.addArrow(attrs, SVG_ATTR_MAP[attr])\n            : context.getDefaultArrow(attrs, SVG_ATTR_MAP[attr]);\n          el.setAttribute(SVG_ATTR_MAP[attr], `url(#${id})`);\n        } else {\n          el.removeAttribute(SVG_ATTR_MAP[attr]);\n        }\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  }\n\n  /**\n   * Use math calculation to get length of line\n   * @return {number} length\n   */\n  getTotalLength() {\n    const { x1, y1, x2, y2 } = this.attr();\n    return LineUtil.length(x1, y1, x2, y2);\n  }\n\n  /**\n   * Use math calculation to get point according to ratio as same sa Canvas version\n   * @param {number} ratio\n   * @return {Point} point\n   */\n  getPoint(ratio: number) {\n    const { x1, y1, x2, y2 } = this.attr();\n    return LineUtil.pointAt(x1, y1, x2, y2, ratio);\n  }\n}\n\nexport default Line;\n","const Symbols = {\n  // 圆\n  circle(x: number, y: number, r: number): any[] {\n    return [\n      ['M', x, y],\n      ['m', -r, 0],\n      ['a', r, r, 0, 1, 0, r * 2, 0],\n      ['a', r, r, 0, 1, 0, -r * 2, 0],\n    ];\n  },\n  // 正方形\n  square(x: number, y: number, r: number): any[] {\n    return [['M', x - r, y - r], ['L', x + r, y - r], ['L', x + r, y + r], ['L', x - r, y + r], ['Z']];\n  },\n  // 菱形\n  diamond(x: number, y: number, r: number): any[] {\n    return [['M', x - r, y], ['L', x, y - r], ['L', x + r, y], ['L', x, y + r], ['Z']];\n  },\n  // 三角形\n  triangle(x: number, y: number, r: number): any[] {\n    const diffY = r * Math.sin((1 / 3) * Math.PI);\n    return [['M', x - r, y + diffY], ['L', x, y - diffY], ['L', x + r, y + diffY], ['z']];\n  },\n  // 倒三角形\n  triangleDown(x: number, y: number, r: number): any[] {\n    const diffY = r * Math.sin((1 / 3) * Math.PI);\n    return [['M', x - r, y - diffY], ['L', x + r, y - diffY], ['L', x, y + diffY], ['Z']];\n  },\n};\n\nexport type SymbolFunc = (x: number, y: number, r: number) => any[];\n\nexport default {\n  get(type: string): SymbolFunc {\n    return Symbols[type];\n  },\n\n  register(type: string, func: SymbolFunc) {\n    Symbols[type] = func;\n  },\n\n  remove(type: string) {\n    delete Symbols[type];\n  },\n\n  getAll() {\n    return Symbols;\n  },\n};\n","/**\n * @fileoverview marker\n * @author dengfuping_develop@163.com\n */\n\nimport { isArray, isFunction } from '@antv/util';\nimport ShapeBase from '../base';\nimport symbolsFactory from './symbols';\n\nclass Marker extends ShapeBase {\n  type: string = 'marker';\n  canFill: boolean = true;\n  canStroke: boolean = true;\n\n  // 作为其静态属性\n  public static symbolsFactory = symbolsFactory;\n\n  createPath(context) {\n    const el = this.get('el');\n    el.setAttribute('d', this._assembleMarker());\n  }\n\n  _assembleMarker() {\n    const d = this._getPath();\n    if (isArray(d)) {\n      return d\n        .map((path) => {\n          return path.join(' ');\n        })\n        .join('');\n    }\n    return d;\n  }\n\n  _getPath(): any[] {\n    const attrs = this.attr();\n    const { x, y } = attrs;\n    // 兼容 r 和 radius 两种写法，推荐使用 r\n    const r = attrs.r || attrs.radius;\n    const symbol = attrs.symbol || 'circle';\n    let method;\n    if (isFunction(symbol)) {\n      method = symbol;\n    } else {\n      method = symbolsFactory.get(symbol);\n    }\n\n    if (!method) {\n      console.warn(`${method} symbol is not exist.`);\n      return null;\n    }\n    return method(x, y, r);\n  }\n}\n\nexport default Marker;\n","/**\n * @fileoverview path\n * @author dengfuping_develop@163.com\n */\nimport { Point } from '@antv/g-base';\nimport { each, isArray, isObject } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\n\nclass Path extends ShapeBase {\n  type: string = 'path';\n  canFill: boolean = true;\n  canStroke: boolean = true;\n\n  getDefaultAttrs() {\n    const attrs = super.getDefaultAttrs();\n    return {\n      ...attrs,\n      startArrow: false,\n      endArrow: false,\n    };\n  }\n\n  createPath(context, targetAttrs) {\n    const attrs = this.attr();\n    const el = this.get('el');\n    each(targetAttrs || attrs, (value, attr) => {\n      if (attr === 'path' && isArray(value)) {\n        el.setAttribute('d', this._formatPath(value));\n      } else if (attr === 'startArrow' || attr === 'endArrow') {\n        if (value) {\n          const id = isObject(value)\n            ? context.addArrow(attrs, SVG_ATTR_MAP[attr])\n            : context.getDefaultArrow(attrs, SVG_ATTR_MAP[attr]);\n          el.setAttribute(SVG_ATTR_MAP[attr], `url(#${id})`);\n        } else {\n          el.removeAttribute(SVG_ATTR_MAP[attr]);\n        }\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  }\n\n  _formatPath(value) {\n    const newValue = value\n      .map((path) => {\n        return path.join(' ');\n      })\n      .join('');\n    if (~newValue.indexOf('NaN')) {\n      return '';\n    }\n    return newValue;\n  }\n\n  /**\n   * Get total length of path\n   * 尽管通过浏览器的 SVGPathElement.getTotalLength() 接口获取的 path 长度，\n   * 与 Canvas 版本通过数学计算的方式得到的长度有一些细微差异，但最大误差在个位数像素，精度上可以能接受\n   * @return {number} length\n   */\n  getTotalLength() {\n    const el = this.get('el');\n    return el ? el.getTotalLength() : null;\n  }\n\n  /**\n   * Get point according to ratio\n   * @param {number} ratio\n   * @return {Point} point\n   */\n  getPoint(ratio: number): Point {\n    const el = this.get('el');\n    const totalLength = this.getTotalLength();\n    // @see https://github.com/antvis/g/issues/634\n    if (totalLength === 0) {\n      return null;\n    }\n    const point = el ? el.getPointAtLength(ratio * totalLength) : null;\n    return point\n      ? {\n          x: point.x,\n          y: point.y,\n        }\n      : null;\n  }\n}\n\nexport default Path;\n","/**\n * @fileoverview polygon\n * @author dengfuping_develop@163.com\n */\nimport { each, isArray } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\n\nclass Polygon extends ShapeBase {\n  type: string = 'polygon';\n  canFill: boolean = true;\n  canStroke: boolean = true;\n\n  createPath(context, targetAttrs) {\n    const attrs = this.attr();\n    const el = this.get('el');\n    each(targetAttrs || attrs, (value, attr) => {\n      if (attr === 'points' && isArray(value) && value.length >= 2) {\n        el.setAttribute('points', value.map((point) => `${point[0]},${point[1]}`).join(' '));\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  }\n}\n\nexport default Polygon;\n","/**\n * @fileoverview polyline\n * @author dengfuping_develop@163.com\n */\nimport { Point } from '@antv/g-base';\nimport { Polyline as PolylineUtil } from '@antv/g-math';\nimport { Line as LineUtil } from '@antv/g-math';\nimport { each, isArray, isNil } from '@antv/util';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\n\nclass Polyline extends ShapeBase {\n  type: string = 'polyline';\n  canFill: boolean = true;\n  canStroke: boolean = true;\n\n  getDefaultAttrs() {\n    const attrs = super.getDefaultAttrs();\n    return {\n      ...attrs,\n      startArrow: false,\n      endArrow: false,\n    };\n  }\n\n  // 更新属性时，检测是否更改了 points\n  onAttrChange(name: string, value: any, originValue: any) {\n    super.onAttrChange(name, value, originValue);\n    if (['points'].indexOf(name) !== -1) {\n      this._resetCache();\n    }\n  }\n\n  _resetCache() {\n    this.set('totalLength', null);\n    this.set('tCache', null);\n  }\n\n  createPath(context, targetAttrs) {\n    const attrs = this.attr();\n    const el = this.get('el');\n    each(targetAttrs || attrs, (value, attr) => {\n      if (attr === 'points' && isArray(value) && value.length >= 2) {\n        el.setAttribute('points', value.map((point) => `${point[0]},${point[1]}`).join(' '));\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  }\n\n  /**\n   * Get length of polyline\n   * @return {number} length\n   */\n  getTotalLength() {\n    const { points } = this.attr();\n    // get totalLength from cache\n    const totalLength = this.get('totalLength');\n    if (!isNil(totalLength)) {\n      return totalLength;\n    }\n    this.set('totalLength', PolylineUtil.length(points));\n    return this.get('totalLength');\n  }\n\n  /**\n   * Get point according to ratio\n   * @param {number} ratio\n   * @return {Point} point\n   */\n  getPoint(ratio: number): Point {\n    const { points } = this.attr();\n    // get tCache from cache\n    let tCache = this.get('tCache');\n    if (!tCache) {\n      this._setTcache();\n      tCache = this.get('tCache');\n    }\n\n    let subt;\n    let index;\n    each(tCache, (v, i) => {\n      if (ratio >= v[0] && ratio <= v[1]) {\n        subt = (ratio - v[0]) / (v[1] - v[0]);\n        index = i;\n      }\n    });\n    return LineUtil.pointAt(points[index][0], points[index][1], points[index + 1][0], points[index + 1][1], subt);\n  }\n\n  _setTcache() {\n    const { points } = this.attr();\n    if (!points || points.length === 0) {\n      return;\n    }\n\n    const totalLength = this.getTotalLength();\n    if (totalLength <= 0) {\n      return;\n    }\n\n    let tempLength = 0;\n    const tCache = [];\n    let segmentT;\n    let segmentL;\n\n    each(points, (p, i) => {\n      if (points[i + 1]) {\n        segmentT = [];\n        segmentT[0] = tempLength / totalLength;\n        segmentL = LineUtil.length(p[0], p[1], points[i + 1][0], points[i + 1][1]);\n        tempLength += segmentL;\n        segmentT[1] = tempLength / totalLength;\n        tCache.push(segmentT);\n      }\n    });\n    this.set('tCache', tCache);\n  }\n\n  /**\n   * Get start tangent vector\n   * @return {Array}\n   */\n  getStartTangent(): number[][] {\n    const { points } = this.attr();\n    const result = [];\n    result.push([points[1][0], points[1][1]]);\n    result.push([points[0][0], points[0][1]]);\n    return result;\n  }\n\n  /**\n   * Get end tangent vector\n   * @return {Array}\n   */\n  getEndTangent(): number[][] {\n    const { points } = this.attr();\n    const l = points.length - 1;\n    const result = [];\n    result.push([points[l - 1][0], points[l - 1][1]]);\n    result.push([points[l][0], points[l][1]]);\n    return result;\n  }\n}\n\nexport default Polyline;\n","/**\n * @fileoverview rect\n * @author dengfuping_develop@163.com\n */\n\nimport { each, isArray } from '@antv/util';\nimport ShapeBase from './base';\nimport { SVG_ATTR_MAP } from '../constant';\nimport { parseRadius } from '../util/format';\n\nclass Rect extends ShapeBase {\n  type: string = 'rect';\n  canFill: boolean = true;\n  canStroke: boolean = true;\n\n  getDefaultAttrs() {\n    const attrs = super.getDefaultAttrs();\n    return {\n      ...attrs,\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      radius: 0,\n    };\n  }\n\n  createPath(context, targetAttrs) {\n    const attrs = this.attr();\n    const el = this.get('el');\n    // 加上状态量，用来标记 path 是否已组装\n    let completed = false;\n    // 和组装 path 相关的绘图属性\n    const pathRelatedAttrs = ['x', 'y', 'width', 'height', 'radius'];\n    each(targetAttrs || attrs, (value, attr) => {\n      if (pathRelatedAttrs.indexOf(attr) !== -1 && !completed) {\n        el.setAttribute('d', this._assembleRect(attrs));\n        completed = true;\n      } else if (pathRelatedAttrs.indexOf(attr) === -1 && SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n  }\n\n  _assembleRect(attrs) {\n    const x = attrs.x;\n    const y = attrs.y;\n    const w = attrs.width;\n    const h = attrs.height;\n    const radius = attrs.radius;\n\n    if (!radius) {\n      return `M ${x},${y} l ${w},0 l 0,${h} l${-w} 0 z`;\n    }\n    const r = parseRadius(radius);\n    if (isArray(radius)) {\n      if (radius.length === 1) {\n        r.r1 = r.r2 = r.r3 = r.r4 = radius[0];\n      } else if (radius.length === 2) {\n        r.r1 = r.r3 = radius[0];\n        r.r2 = r.r4 = radius[1];\n      } else if (radius.length === 3) {\n        r.r1 = radius[0];\n        r.r2 = r.r4 = radius[1];\n        r.r3 = radius[2];\n      } else {\n        r.r1 = radius[0];\n        r.r2 = radius[1];\n        r.r3 = radius[2];\n        r.r4 = radius[3];\n      }\n    } else {\n      r.r1 = r.r2 = r.r3 = r.r4 = radius;\n    }\n    const d = [\n      [`M ${x + r.r1},${y}`],\n      [`l ${w - r.r1 - r.r2},0`],\n      [`a ${r.r2},${r.r2},0,0,1,${r.r2},${r.r2}`],\n      [`l 0,${h - r.r2 - r.r3}`],\n      [`a ${r.r3},${r.r3},0,0,1,${-r.r3},${r.r3}`],\n      [`l ${r.r3 + r.r4 - w},0`],\n      [`a ${r.r4},${r.r4},0,0,1,${-r.r4},${-r.r4}`],\n      [`l 0,${r.r4 + r.r1 - h}`],\n      [`a ${r.r1},${r.r1},0,0,1,${r.r1},${-r.r1}`],\n      ['z'],\n    ];\n    return d.join(' ');\n  }\n}\n\nexport default Rect;\n","import { each, isArray, isString } from '@antv/util';\n\nconst regexTags = /[MLHVQTCSAZ]([^MLHVQTCSAZ]*)/gi;\nconst regexDot = /[^\\s,]+/gi;\n\nexport function parseRadius(radius) {\n  let r1 = 0;\n  let r2 = 0;\n  let r3 = 0;\n  let r4 = 0;\n  if (isArray(radius)) {\n    if (radius.length === 1) {\n      r1 = r2 = r3 = r4 = radius[0];\n    } else if (radius.length === 2) {\n      r1 = r3 = radius[0];\n      r2 = r4 = radius[1];\n    } else if (radius.length === 3) {\n      r1 = radius[0];\n      r2 = r4 = radius[1];\n      r3 = radius[2];\n    } else {\n      r1 = radius[0];\n      r2 = radius[1];\n      r3 = radius[2];\n      r4 = radius[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = radius;\n  }\n  return {\n    r1,\n    r2,\n    r3,\n    r4,\n  };\n}\n\nexport function parsePath(path) {\n  path = path || [];\n  if (isArray(path)) {\n    return path;\n  }\n\n  if (isString(path)) {\n    path = path.match(regexTags);\n    each(path, (item, index) => {\n      item = item.match(regexDot);\n      if (item[0].length > 1) {\n        const tag = item[0].charAt(0);\n        item.splice(1, 0, item[0].substr(1));\n        item[0] = tag;\n      }\n      each(item, (sub, i) => {\n        if (!isNaN(sub)) {\n          item[i] = +sub;\n        }\n      });\n      path[index] = item;\n    });\n    return path;\n  }\n}\n","/**\n * @fileoverview text\n * @author dengfuping_develop@163.com\n */\n\nimport { each } from '@antv/util';\nimport { detect } from 'detect-browser';\nimport { setTransform } from '../util/svg';\nimport { SVG_ATTR_MAP } from '../constant';\nimport ShapeBase from './base';\n\nconst LETTER_SPACING = 0.3;\n\nconst BASELINE_MAP = {\n  top: 'before-edge',\n  middle: 'central',\n  bottom: 'after-edge',\n  alphabetic: 'baseline',\n  hanging: 'hanging',\n};\n\n// for FireFox\nconst BASELINE_MAP_FOR_FIREFOX = {\n  top: 'text-before-edge',\n  middle: 'central',\n  bottom: 'text-after-edge',\n  alphabetic: 'alphabetic',\n  hanging: 'hanging',\n};\n\nconst ANCHOR_MAP = {\n  left: 'left',\n  start: 'left',\n  center: 'middle',\n  right: 'end',\n  end: 'end',\n};\n\nclass Text extends ShapeBase {\n  type: string = 'text';\n  canFill: boolean = true;\n  canStroke: boolean = true;\n\n  getDefaultAttrs() {\n    const attrs = super.getDefaultAttrs();\n    return {\n      ...attrs,\n      x: 0,\n      y: 0,\n      text: null,\n      fontSize: 12,\n      fontFamily: 'sans-serif',\n      fontStyle: 'normal',\n      fontWeight: 'normal',\n      fontVariant: 'normal',\n      textAlign: 'start',\n      textBaseline: 'bottom',\n    };\n  }\n\n  createPath(context, targetAttrs) {\n    const attrs = this.attr();\n    const el = this.get('el');\n    this._setFont();\n    each(targetAttrs || attrs, (value, attr) => {\n      if (attr === 'text') {\n        this._setText(`${value}`);\n      } else if (attr === 'matrix' && value) {\n        setTransform(this);\n      } else if (SVG_ATTR_MAP[attr]) {\n        el.setAttribute(SVG_ATTR_MAP[attr], value);\n      }\n    });\n    el.setAttribute('paint-order', 'stroke');\n    el.setAttribute('style', 'stroke-linecap:butt; stroke-linejoin:miter;');\n  }\n\n  _setFont() {\n    const el = this.get('el');\n    const { textBaseline, textAlign } = this.attr();\n\n    const browser = detect();\n    if (browser && browser.name === 'firefox') {\n      // compatible with FireFox browser, ref: https://github.com/antvis/g/issues/119\n      el.setAttribute('dominant-baseline', BASELINE_MAP_FOR_FIREFOX[textBaseline] || 'alphabetic');\n    } else {\n      el.setAttribute('alignment-baseline', BASELINE_MAP[textBaseline] || 'baseline');\n    }\n\n    el.setAttribute('text-anchor', ANCHOR_MAP[textAlign] || 'left');\n  }\n\n  _setText(text) {\n    const el = this.get('el');\n    const { x, textBaseline: baseline = 'bottom' } = this.attr();\n    if (!text) {\n      el.innerHTML = '';\n    } else if (~text.indexOf('\\n')) {\n      const textArr = text.split('\\n');\n      const textLen = textArr.length - 1;\n      let arr = '';\n      each(textArr, (segment, i: number) => {\n        if (i === 0) {\n          if (baseline === 'alphabetic') {\n            arr += `<tspan x=\"${x}\" dy=\"${-textLen}em\">${segment}</tspan>`;\n          } else if (baseline === 'top') {\n            arr += `<tspan x=\"${x}\" dy=\"0.9em\">${segment}</tspan>`;\n          } else if (baseline === 'middle') {\n            arr += `<tspan x=\"${x}\" dy=\"${-(textLen - 1) / 2}em\">${segment}</tspan>`;\n          } else if (baseline === 'bottom') {\n            arr += `<tspan x=\"${x}\" dy=\"-${textLen + LETTER_SPACING}em\">${segment}</tspan>`;\n          } else if (baseline === 'hanging') {\n            arr += `<tspan x=\"${x}\" dy=\"${-(textLen - 1) - LETTER_SPACING}em\">${segment}</tspan>`;\n          }\n        } else {\n          arr += `<tspan x=\"${x}\" dy=\"1em\">${segment}</tspan>`;\n        }\n      });\n      el.innerHTML = arr;\n    } else {\n      el.innerHTML = text;\n    }\n  }\n}\n\nexport default Text;\n","import { toArray } from '@antv/util';\nimport { IShape, IGroup, IElement } from '../interfaces';\nimport { SHAPE_TO_TAGS } from '../constant';\n\n/**\n * 创建并返回图形的 svg 元素\n * @param type svg类型\n */\nexport function createSVGElement(type: string): SVGElement {\n  return document.createElementNS('http://www.w3.org/2000/svg', type);\n}\n\n/**\n * 创建并返回图形的 dom 元素\n * @param  {IShape} shape 图形\n * @return {SVGElement}\n */\nexport function createDom(shape: IShape) {\n  const type = SHAPE_TO_TAGS[shape.type];\n  const parent = shape.getParent();\n  if (!type) {\n    throw new Error(`the type ${shape.type} is not supported by svg`);\n  }\n  const element = createSVGElement(type);\n  if (shape.get('id')) {\n    element.id = shape.get('id');\n  }\n  shape.set('el', element);\n  shape.set('attrs', {});\n  // 对于 defs 下的 dom 节点，parent 为空，通过 context 统一挂载到 defs 节点下\n  if (parent) {\n    let parentNode = parent.get('el');\n    if (parentNode) {\n      parentNode.appendChild(element);\n    } else {\n      // parentNode maybe null for group\n      parentNode = (parent as IGroup).createDom();\n      parent.set('el', parentNode);\n      parentNode.appendChild(element);\n    }\n  }\n  return element;\n}\n\n/**\n * 对 dom 元素进行排序\n * @param {IElement} element  元素\n * @param {sorter}   function 排序函数\n */\nexport function sortDom(element: IElement, sorter: (a: IElement, b: IElement) => number) {\n  const el = element.get('el');\n  const childList = toArray(el.children).sort(sorter);\n  // create empty fragment\n  const fragment = document.createDocumentFragment();\n  childList.forEach((child) => {\n    fragment.appendChild(child);\n  });\n  el.appendChild(fragment);\n}\n\n/**\n * 将 dom 元素移动到父元素下的指定位置\n * @param {SVGElement} element     dom 元素\n * @param {number}     targetIndex 目标位置(从 0 开始)\n */\nexport function moveTo(element: SVGElement, targetIndex: number) {\n  const parentNode = element.parentNode;\n  const siblings = Array.from(parentNode.childNodes).filter(\n    // 要求为元素节点，且不能为 defs 节点\n    (node: Node) => node.nodeType === 1 && node.nodeName.toLowerCase() !== 'defs'\n  );\n  // 获取目标节点\n  const target = siblings[targetIndex];\n  const currentIndex = siblings.indexOf(element);\n  // 如果目标节点存在\n  if (target) {\n    // 当前索引 > 目标索引，直接插入到目标节点之前即可\n    if (currentIndex > targetIndex) {\n      parentNode.insertBefore(element, target);\n    } else if (currentIndex < targetIndex) {\n      // 当前索引 < 目标索引\n      // 获取目标节点的下一个节点\n      const targetNext = siblings[targetIndex + 1];\n      // 如果目标节点的下一个节点存在，插入到该节点之前\n      if (targetNext) {\n        parentNode.insertBefore(element, targetNext);\n      } else {\n        // 如果该节点不存在，则追加到末尾\n        parentNode.appendChild(element);\n      }\n    }\n  } else {\n    parentNode.appendChild(element);\n  }\n}\n","import { ChangeType } from '@antv/g-base';\nimport { IElement } from '../interfaces';\nimport { setTransform, setClip } from './svg';\nimport { sortDom, moveTo } from './dom';\nimport Defs from '../defs';\n\nexport function drawChildren(context: Defs, children: IElement[]) {\n  children.forEach((child) => {\n    child.draw(context);\n  });\n}\n\n/**\n * 更新元素，包括 group 和 shape\n * @param {IElement} element       SVG 元素\n * @param {ChangeType} changeType  更新类型\n */\nexport function refreshElement(element: IElement, changeType: ChangeType) {\n  // 对于还没有挂载到画布下的元素，canvas 可能为空\n  const canvas = element.get('canvas');\n  // 只有挂载到画布下，才对元素进行实际渲染\n  if (canvas && canvas.get('autoDraw')) {\n    const context = canvas.get('context');\n    const parent = element.getParent();\n    const parentChildren = parent ? parent.getChildren() : [canvas];\n    const el = element.get('el');\n    if (changeType === 'remove') {\n      const isClipShape = element.get('isClipShape');\n      // 对于 clip，不仅需要将 clipShape 对于的 SVG 元素删除，还需要将上层的 clipPath 元素也删除\n      if (isClipShape) {\n        const clipPathEl = el && el.parentNode;\n        const defsEl = clipPathEl && clipPathEl.parentNode;\n        if (clipPathEl && defsEl) {\n          defsEl.removeChild(clipPathEl);\n        }\n      } else if (el && el.parentNode) {\n        el.parentNode.removeChild(el);\n      }\n    } else if (changeType === 'show') {\n      el.setAttribute('visibility', 'visible');\n    } else if (changeType === 'hide') {\n      el.setAttribute('visibility', 'hidden');\n    } else if (changeType === 'zIndex') {\n      moveTo(el, parentChildren.indexOf(element));\n    } else if (changeType === 'sort') {\n      const children = element.get('children');\n      if (children && children.length) {\n        sortDom(element, (a: IElement, b: IElement) => {\n          return children.indexOf(a) - children.indexOf(b) ? 1 : 0;\n        });\n      }\n    } else if (changeType === 'clear') {\n      // el maybe null for group\n      if (el) {\n        el.innerHTML = '';\n      }\n    } else if (changeType === 'matrix') {\n      setTransform(element);\n    } else if (changeType === 'clip') {\n      setClip(element, context);\n    } else if (changeType === 'attr') {\n      // 已在 afterAttrsChange 进行了处理，此处 do nothing\n    } else if (changeType === 'add') {\n      element.draw(context);\n    }\n  }\n}\n","import { createDom } from './dom';\n\nexport function setShadow(model, context) {\n  const el = model.cfg.el;\n  const attrs = model.attr();\n  const cfg = {\n    dx: attrs.shadowOffsetX,\n    dy: attrs.shadowOffsetY,\n    blur: attrs.shadowBlur,\n    color: attrs.shadowColor,\n  };\n  if (!cfg.dx && !cfg.dy && !cfg.blur && !cfg.color) {\n    el.removeAttribute('filter');\n  } else {\n    let id = context.find('filter', cfg);\n    if (!id) {\n      id = context.addShadow(cfg);\n    }\n    el.setAttribute('filter', `url(#${id})`);\n  }\n}\n\nexport function setTransform(model) {\n  const { matrix } = model.attr();\n  if (matrix) {\n    const el = model.cfg.el;\n    let transform: any = [];\n    for (let i = 0; i < 9; i += 3) {\n      transform.push(`${matrix[i]},${matrix[i + 1]}`);\n    }\n    transform = transform.join(',');\n    if (transform.indexOf('NaN') === -1) {\n      el.setAttribute('transform', `matrix(${transform})`);\n    } else {\n      console.warn('invalid matrix:', matrix);\n    }\n  }\n}\n\nexport function setClip(model, context) {\n  const clip = model.getClip();\n  const el = model.get('el');\n  if (!clip) {\n    el.removeAttribute('clip-path');\n  } else if (clip && !el.hasAttribute('clip-path')) {\n    createDom(clip);\n    clip.createPath(context);\n    const id = context.addClip(clip);\n    el.setAttribute('clip-path', `url(#${id})`);\n  }\n}\n"],"names":["_this","__extends","Image","attrs","_super","getDefaultAttrs","call","x","y","width","height","context","targetAttrs","this","attr","el","get","each","value","_setImage","img","SVG_ATTR_MAP","setAttribute","name","isString","window","src","HTMLElement","nodeName","toUpperCase","toDataURL","ImageData","canvas","document","createElement","getContext","putImageData","ShapeBase","Line","x1","y1","x2","y2","startArrow","endArrow","id","isObject","addArrow","getDefaultArrow","removeAttribute","LineUtil","ratio","Symbols","circle","r","square","diamond","triangle","diffY","Math","sin","PI","triangleDown","type","register","func","remove","getAll","Marker","_assembleMarker","d","_getPath","isArray","map","path","join","method","radius","symbol","isFunction","symbolsFactory","console","warn","Path","_formatPath","newValue","indexOf","getTotalLength","totalLength","point","getPointAtLength","Polygon","length","Polyline","originValue","onAttrChange","_resetCache","set","points","isNil","PolylineUtil","subt","index","tCache","_setTcache","v","i","segmentT","segmentL","tempLength","p","push","result","l","Rect","completed","pathRelatedAttrs","_assembleRect","w","h","r1","r2","r3","r4","parseRadius","BASELINE_MAP","top","middle","bottom","alphabetic","hanging","BASELINE_MAP_FOR_FIREFOX","ANCHOR_MAP","left","start","center","right","end","Text","text","fontSize","fontFamily","fontStyle","fontWeight","fontVariant","textAlign","textBaseline","_setFont","_setText","setTransform","browser","detect","_b","baseline","textArr","split","textLen_1","arr_1","segment","innerHTML","createSVGElement","createElementNS","createDom","shape","SHAPE_TO_TAGS","parent","getParent","Error","element","parentNode","appendChild","sortDom","sorter","childList","toArray","children","sort","fragment","createDocumentFragment","forEach","child","moveTo","targetIndex","siblings","Array","from","childNodes","filter","node","nodeType","toLowerCase","target","currentIndex","insertBefore","targetNext","drawChildren","draw","refreshElement","changeType","parent_1","parentChildren","getChildren","clipPathEl","defsEl","removeChild","children_1","a","b","setClip","setShadow","model","cfg","dx","shadowOffsetX","dy","shadowOffsetY","blur","shadowBlur","color","shadowColor","find","addShadow","matrix","transform","clip","getClip","hasAttribute","createPath","addClip"],"sourceRoot":""}