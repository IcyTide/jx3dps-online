{"version":3,"file":"static/js/main~9239f446.ca35205c.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/main.ts"],"sourcesContent":["/**\n * 定义模拟循环类\n */\n\nimport { ERROR_ACTION, 根据奇穴修改buff数据, 根据奇穴修改技能数据, 起手识破BUFF } from './utils'\nimport {\n  技能GCD组,\n  技能类实例集合,\n  检查运行数据实例类型,\n  Buff枚举,\n  循环日志数据类型,\n  循环基础技能数据类型,\n  角色状态信息类型,\n  技能释放记录数据,\n} from './type'\n\nimport 决云势 from './技能类/决云势'\nimport 行云势 from './技能类/行云势'\nimport 停云势 from './技能类/停云势'\nimport 留客雨 from './技能类/留客雨'\nimport 断云势 from './技能类/断云势'\nimport 横云断浪 from './技能类/横云断浪'\nimport 沧浪三叠 from './技能类/沧浪三叠'\nimport 孤锋破浪 from './技能类/孤锋破浪'\nimport 灭影追风 from './技能类/灭影追风'\nimport 游风飘踪 from './技能类/游风飘踪'\nimport 吃影子 from './技能类/吃影子'\nimport 触发橙武 from './技能类/触发橙武'\nimport 点掉橙武 from './技能类/点掉橙武'\nimport 流血 from './DOT类/流血'\nimport 斩浪破锋 from './DOT类/斩浪破锋'\nimport 截辕 from './DOT类/截辕'\nimport 获取当前数据 from '@/数据/数据工具/获取当前数据'\nimport { 获取加速等级 } from '@/工具函数/data'\n\nconst { 技能系数 } = 获取当前数据()\n\ninterface SimulatorCycleProps {\n  测试循环: string[]\n  加速值: number\n  网络延迟: number\n  奇穴: string[]\n  起手驰风: boolean\n  大橙武模拟: boolean\n}\n\nclass 循环主类 {\n  循环执行结果: '成功' | '异常' = '成功'\n  循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  测试循环: string[] = []\n  奇穴: string[] = []\n  加速等级 = 0\n  网络延迟 = 0\n  角色状态信息: 角色状态信息类型 = {\n    锐意: 0,\n    体态: '双刀',\n  }\n  当前自身buff列表: Buff枚举 = {}\n  当前目标buff列表: Buff枚举 = {}\n  当前时间 = 0\n  开始释放上一个技能的时间 = 0\n  战斗日志: 循环日志数据类型[] = []\n  技能释放记录: 技能释放记录数据[] = []\n  Buff和Dot数据: Buff枚举 = {}\n  技能基础数据: 循环基础技能数据类型[] = []\n  GCD组: 技能GCD组 = {\n    单刀: 0,\n    双刀: 0,\n  }\n  技能类实例集合: 技能类实例集合 = {}\n  云刀上次造成伤害时间: number | undefined = undefined\n  大橙武模拟 = false\n\n  // 初始化创建\n  constructor(props: SimulatorCycleProps) {\n    // 模拟开始后不会变动的数据\n    this.测试循环 = props.测试循环\n    this.大橙武模拟 = props.大橙武模拟\n    this.奇穴 = props.奇穴\n    this.加速等级 = 获取加速等级(props.加速值)\n    this.网络延迟 = props.网络延迟\n    this.Buff和Dot数据 = 根据奇穴修改buff数据(this.奇穴)\n    this.技能基础数据 = 根据奇穴修改技能数据(this.奇穴)\n\n    // 模拟初始化\n    this.初始化技能实例类()\n    this.当前自身buff列表 = props.起手驰风 ? { ...起手识破BUFF(this.Buff和Dot数据) } : {}\n    this.当前目标buff列表 = {}\n    this.角色状态信息 = {\n      锐意: 0,\n      体态: '双刀',\n    }\n    this.重置循环执行结果()\n  }\n\n  重置循环执行结果() {\n    this.循环执行结果 = '成功'\n    this.循环异常信息 = { 异常索引: 0, 异常信息: '' }\n  }\n\n  初始化技能实例类() {\n    this.技能类实例集合 = {\n      决: new 决云势(this),\n      行: new 行云势(this),\n      停: new 停云势(this),\n      留: new 留客雨(this),\n      断: new 断云势(this),\n      横: new 横云断浪(this),\n      沧: new 沧浪三叠(this),\n      孤: new 孤锋破浪(this),\n      灭: new 灭影追风(this),\n      游: new 游风飘踪(this),\n      吃影子: new 吃影子(this),\n      流血: new 流血(this),\n      斩浪破锋: new 斩浪破锋(this),\n      截辕: new 截辕(this),\n      触发橙武: new 触发橙武(this),\n      点掉橙武: new 点掉橙武(this),\n    }\n  }\n\n  添加buff({ 名称, 对象 = '目标', 事件时间 = this.当前时间, 新增层数 = 1 }) {\n    const 当前层数 =\n      对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数\n\n    const 新buff对象 = {\n      ...this.Buff和Dot数据[名称],\n      当前层数: Math.min((当前层数 || 0) + 新增层数, this.Buff和Dot数据[名称].最大层数 || 1),\n      刷新时间: 事件时间,\n    }\n    if (新buff对象.当前层数 !== 当前层数 && 新buff对象.当前层数 !== 1) {\n      this.添加战斗日志({\n        日志: `${名称}层数变为【${新buff对象.当前层数}】`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    } else {\n      this.添加战斗日志({\n        日志: `${对象}获得${名称}`,\n        日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n        日志时间: 事件时间,\n      })\n    }\n\n    if (对象 === '自身') {\n      this.当前自身buff列表[名称] = { ...新buff对象 }\n    } else {\n      this.当前目标buff列表[名称] = { ...新buff对象 }\n    }\n  }\n\n  卸除buff({ 名称, buff刷新时间 = 0, 对象 = '目标', 事件时间 = this.当前时间, 卸除层数 = 1 }) {\n    const 当前层数 =\n      对象 === '自身'\n        ? this.当前自身buff列表[名称]?.当前层数\n        : this.当前目标buff列表[名称]?.当前层数\n\n    if (当前层数 && 当前层数 >= 0) {\n      if (当前层数 - 卸除层数 > 0) {\n        this.添加战斗日志({\n          日志: `${名称}层数变为【${当前层数 - 卸除层数}】`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        const 新buff对象 = {\n          ...this.Buff和Dot数据[名称],\n          当前层数: 当前层数 - 卸除层数,\n          刷新时间: buff刷新时间 || 事件时间,\n        }\n        if (对象 === '自身') {\n          this.当前自身buff列表[名称] = { ...新buff对象 }\n        } else {\n          this.当前目标buff列表[名称] = { ...新buff对象 }\n        }\n      } else {\n        this.添加战斗日志({\n          日志: `${对象}失去${名称}`,\n          日志类型: 对象 === '自身' ? '自身buff变动' : '目标buff变动',\n          日志时间: 事件时间,\n        })\n        if (对象 === '自身') {\n          delete this.当前自身buff列表[名称]\n        } else {\n          delete this.当前目标buff列表[名称]\n        }\n      }\n    }\n  }\n\n  // 校验奇穴是否存在\n  校验奇穴是否存在(待判断奇穴) {\n    return this?.奇穴?.includes(待判断奇穴)\n  }\n\n  // 单双刀体态校验\n  单双刀体态校验(当前技能: 循环基础技能数据类型) {\n    if (当前技能?.技能类型 && ['单刀', '双刀']?.includes(当前技能?.技能类型)) {\n      if (this.角色状态信息?.体态 !== 当前技能?.技能类型) {\n        return {\n          可以释放: false,\n          异常信息: ERROR_ACTION.体态错误,\n        }\n      } else {\n        return { 可以释放: true }\n      }\n    } else {\n      return { 可以释放: true }\n    }\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 start----------------- //\n  /**\n   *\n   * @param 增加时间方法\n   * @description 每次增加时间方法都要同步推进GCD\n   */\n  增加时间(time) {\n    this.跳过全部GCD时间(time)\n    // 增加时间\n    this.当前时间 = this.当前时间 + (time > 0 ? time : 0 || 0)\n  }\n\n  跳过全部GCD时间(time) {\n    // 减少GCD剩余时间\n    const 新GCD组: 技能GCD组 = { 单刀: 0, 双刀: 0 }\n    Object.keys(this.GCD组).map((key) => {\n      新GCD组[key] = Math.max((this.GCD组[key] || 0) - time, 0)\n    })\n    this.GCD组 = { ...新GCD组 }\n  }\n\n  技能释放前检查GCD统一方法(当前技能: 循环基础技能数据类型) {\n    let 校验GCD组: string = 当前技能.技能GCD组 as string\n    if (当前技能.技能GCD组 === '自身') {\n      校验GCD组 = 当前技能?.技能名称\n    }\n    if (校验GCD组) {\n      // 大部分技能只检查自己的GCD\n      const GCD = this.GCD组[校验GCD组]\n      // 增加GCD\n      return GCD || 0\n    }\n    return 0\n  }\n\n  // 对所有有CD技能检查和充能\n  对所有有CD技能检查和充能() {\n    Object.keys(this.技能类实例集合).forEach((key) => {\n      const 实例 = this.技能类实例集合[key]\n      const 当前技能 = this.技能基础数据?.find((item) => item.技能名称 === key)\n      if (实例?.技能运行数据) {\n        const 最大充能层数 = 当前技能?.最大充能层数 || 1\n        const 当前层数 = 实例?.技能运行数据?.当前层数\n        const 计划下次充能时间点 = 实例?.技能运行数据?.计划下次充能时间点 || 0\n        if (当前层数 < 最大充能层数) {\n          // 当前有层数，检查充能度过情况，更新层数和充能时间\n          let 新层数 = 当前层数\n          let 新充能时间点 = 计划下次充能时间点\n          const 充能 = () => {\n            if (新充能时间点 <= this.当前时间 && 新层数 < 最大充能层数) {\n              新层数 = 新层数 + 1\n              // 没充满，继续跑充能CD\n              if (新层数 < 最大充能层数) {\n                新充能时间点 = 新充能时间点 + (当前技能?.技能CD || 0)\n              }\n              if (新充能时间点 <= this.当前时间 && 新层数 < 最大充能层数) {\n                充能()\n              }\n            }\n          }\n          if (新充能时间点 && 新充能时间点 <= this.当前时间) {\n            充能()\n            实例?.更新技能运行数据({ 当前层数: 新层数, 计划下次充能时间点: 新充能时间点 })\n          }\n        }\n      }\n    })\n  }\n\n  技能释放前检查运行数据(当前技能: 循环基础技能数据类型, 技能实例: 检查运行数据实例类型, GCD) {\n    let 等待CD时间 = 0\n    const 可以释放时间 = this.当前时间 + GCD || 0\n    if (技能实例?.技能运行数据) {\n      const 当前层数 = 技能实例?.技能运行数据?.当前层数\n      const 计划下次充能时间点 = 技能实例?.技能运行数据?.计划下次充能时间点 || 0\n      // 当前层数为-1，说明未初始化实例，设置为最大层数\n      if (当前层数 <= 0) {\n        // 当前没有层数可用，需要等待充能\n        if (计划下次充能时间点 > 可以释放时间) {\n          等待CD时间 = 计划下次充能时间点 - 可以释放时间\n        }\n        if (计划下次充能时间点 <= 可以释放时间) {\n          const 新层数 = Math.min(当前层数 + 1, 当前技能?.最大充能层数 || 1)\n          技能实例?.更新技能运行数据({ 当前层数: 新层数 })\n        }\n      }\n    }\n    return 等待CD时间\n  }\n\n  技能释放后更新运行数据(当前技能: 循环基础技能数据类型, 技能实例: 检查运行数据实例类型) {\n    if (技能实例?.技能运行数据) {\n      const 最大充能层数 = 当前技能?.最大充能层数 || 1\n      const 是否为充满后第一次释放 = 技能实例?.技能运行数据?.当前层数 === 最大充能层数\n      const 释放后层数 = 技能实例?.技能运行数据?.当前层数 - 1\n      const 当前时间 = this.当前时间 || 0\n      if (是否为充满后第一次释放) {\n        技能实例?.更新技能运行数据({\n          当前层数: 释放后层数,\n          计划下次充能时间点: 当前时间 + (当前技能?.技能CD || 0),\n        })\n      } else {\n        if (释放后层数 <= 0) {\n          const 原充能时间 = 技能实例?.技能运行数据?.计划下次充能时间点 || 0\n          const 计算充能时间 =\n            原充能时间 <= 当前时间 ? 当前时间 + (当前技能?.技能CD || 0) : 原充能时间\n          技能实例?.更新技能运行数据({\n            当前层数: 释放后层数,\n            计划下次充能时间点: 计算充能时间,\n          })\n        } else {\n          技能实例?.更新技能运行数据({\n            当前层数: 释放后层数,\n          })\n        }\n      }\n    }\n  }\n\n  // ----------------- 时间、GCD、CD相关算法 end----------------- //\n\n  // 添加战斗日志\n  添加战斗日志(log: 循环日志数据类型) {\n    const { 日志时间 = this.当前时间, ...rest } = log\n    this.战斗日志 = [\n      ...(this.战斗日志 || []),\n      {\n        日志时间: 日志时间,\n        ...rest,\n      },\n    ]\n  }\n\n  // 造成伤害\n  技能造成伤害(来源, 伤害次数 = 1, 额外增益列表: string[] = [], 造成时间 = this.当前时间) {\n    const 技能增益列表 = 技能系数?.find((item) => item.技能名称 === 来源)?.技能增益列表 || []\n\n    const 有关的buff列表 =\n      技能增益列表\n        ?.filter((item) => {\n          if (造成时间) {\n            const 当前增益数据 = this?.当前自身buff列表?.[item.增益名称]\n            const 增益消失时间 = (当前增益数据?.刷新时间 || 0) + (当前增益数据?.最大持续时间 || 0)\n            return 造成时间 <= 增益消失时间 && !!当前增益数据\n          } else {\n            return !!this?.当前自身buff列表?.[item.增益名称]\n          }\n        })\n        ?.map((item) => item.增益名称) || []\n\n    const 总增益列表 = 有关的buff列表.concat(额外增益列表)\n\n    this.添加战斗日志({\n      日志: 来源,\n      日志类型: '造成伤害',\n      日志时间: 造成时间,\n      buff列表: 总增益列表 || [],\n      其他数据: {\n        伤害次数: 伤害次数,\n      },\n    })\n  }\n\n  增加锐意(锐意值, 来源) {\n    this.添加战斗日志({\n      日志: `${来源}回复锐意【${锐意值}】点`,\n      日志类型: '回复锐意',\n    })\n    const 更新后锐意 = (this.角色状态信息.锐意 || 0) + 锐意值\n    this.角色状态信息.锐意 = Math.min(更新后锐意, 100)\n    this.添加战斗日志({\n      日志: `锐意变为【${this.角色状态信息.锐意}】`,\n      日志类型: '自身buff变动',\n    })\n  }\n\n  减少锐意(锐意值, 来源) {\n    this.添加战斗日志({\n      日志: `${来源}消耗锐意【${锐意值}】点`,\n      日志类型: '消耗锐意',\n    })\n    const 更新后锐意 = (this.角色状态信息.锐意 || 0) - 锐意值\n    this.角色状态信息.锐意 = Math.max(更新后锐意, 0)\n    this.添加战斗日志({\n      日志: `锐意变为【${this.角色状态信息.锐意}】`,\n      日志类型: '自身buff变动',\n    })\n  }\n\n  切换角色体态(切换目标: '单刀' | '双刀', 来源) {\n    if (this.角色状态信息.体态 !== 切换目标) {\n      this.角色状态信息.体态 = 切换目标\n      this.添加战斗日志({\n        日志: `${来源}切换体态为【${切换目标}】`,\n        日志类型: '自身buff变动',\n      })\n    }\n  }\n\n  触发避实击虚(触发时间 = this.当前时间) {\n    const 破绽层数 = this.当前目标buff列表?.破绽?.当前层数 || 0\n    const 破绽避实击虚枚举 = { 0: 0, 1: 0.25, 2: 0.5, 3: 0.75, 4: 1, 5: 1, 6: 1 }\n\n    if (破绽避实击虚枚举[破绽层数]) {\n      this.技能造成伤害(`避实击虚`, 破绽避实击虚枚举[破绽层数], [], 触发时间)\n    }\n  }\n\n  触发潋风携刃() {\n    if (this?.当前自身buff列表?.['潋风']?.当前层数) {\n      this.增加锐意(10, '潋风·携刃')\n      this.技能造成伤害('潋风·携刃')\n      this.技能类实例集合?.留?.潋风触发重置留客雨调息时间?.()\n    }\n  }\n\n  触发潋风拓锋() {\n    if (this?.当前自身buff列表?.['潋风']?.当前层数) {\n      this.技能造成伤害('潋风·拓锋')\n    }\n  }\n\n  检查GCD(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    if (技能实例?.检查GCD) {\n      GCD = 技能实例?.检查GCD?.(i)\n    } else {\n      GCD = this.技能释放前检查GCD统一方法(当前技能)\n    }\n    return GCD\n  }\n\n  // 判断GCD，技能CD等\n  技能释放前(当前技能: 循环基础技能数据类型, 技能实例, i) {\n    let GCD = 0\n    let 等待CD = 0\n\n    // 判断是否为当前箭袋第一个技能\n    if (i >= 0) {\n      // 判断上一个技能对于本技能是否有GCD限制\n      if (当前技能?.技能GCD组) {\n        GCD = this.检查GCD(当前技能, 技能实例, i)\n      }\n      // 判断技能CD，如果存在CD。增加等待时间\n      if (当前技能?.技能CD) {\n        等待CD = this.技能释放前检查运行数据(当前技能, 技能实例, GCD)\n      }\n    }\n    // const 延迟等待 = this.当前时间 && (GCD || 等待CD) ? this.网络延迟 : 0\n    const 延迟等待 = this.当前时间 && 当前技能?.技能GCD组 !== '自身' && GCD ? this.网络延迟 : 0\n\n    // const 延迟等待 = this.当前时间 ? this.网络延迟 : 0\n    const 技能计划释放时间 = this.当前时间 + GCD + 延迟等待\n    return {\n      技能计划释放时间: 技能计划释放时间,\n      技能预估释放时间: 技能计划释放时间 + 等待CD,\n      等待CD,\n    }\n  }\n\n  技能GCD和CD处理(\n    等待CD,\n    技能预估释放时间,\n    当前技能: 循环基础技能数据类型,\n    技能实例: 检查运行数据实例类型\n  ) {\n    // 判断在处理完特殊事件以后，剩余的待定时间还有多少\n    const 时间差 = 技能预估释放时间 - this.当前时间\n    if (时间差 && 时间差 > 0) {\n      this.增加时间(时间差)\n    }\n    if (等待CD) {\n      this.添加战斗日志({\n        日志: `【${当前技能?.技能名称}】等技能CD【${等待CD}】帧`,\n        日志类型: '等CD',\n        日志时间: 技能预估释放时间,\n      })\n      const 当前层数 = 技能实例?.技能运行数据?.当前层数\n      const 新层数 = Math.min(当前层数 + 1, 当前技能?.最大充能层数 || 1)\n      技能实例?.更新技能运行数据({ 当前层数: 新层数 })\n    }\n  }\n\n  // 增加技能GCD\n  增加技能GCD(当前技能: 循环基础技能数据类型) {\n    // GCD处理\n    if (当前技能?.技能GCD组) {\n      let 待更新GCD组: string = 当前技能.技能GCD组 as string\n      if (当前技能.技能GCD组 === '自身') {\n        待更新GCD组 = 当前技能?.技能名称\n      }\n      if (待更新GCD组) {\n        this.GCD组[待更新GCD组] =\n          (this.GCD组[待更新GCD组] || 0) + 当前技能?.技能释放后添加GCD - this.加速等级\n      }\n    }\n  }\n\n  技能成功开始释放(当前技能: 循环基础技能数据类型, 技能实例) {\n    this.增加技能GCD(当前技能)\n    this.增加技能CD(当前技能, 技能实例)\n  }\n\n  // 增加技能CD\n  增加技能CD(当前技能: 循环基础技能数据类型, 技能实例) {\n    // 技能CD处理\n    if (当前技能?.技能CD) {\n      if (技能实例?.技能释放后更新运行数据) {\n        技能实例.技能释放后更新运行数据?.()\n      } else {\n        this.技能释放后更新运行数据(当前技能, 技能实例)\n      }\n    }\n  }\n\n  // 判断添加GCD等\n  技能释放后(当前技能: 循环基础技能数据类型, 计划释放时间: number, 开始释放时间: number, 技能实例) {\n    const 技能释放记录结果 = 技能实例?.获取技能释放记录结果?.() || {}\n    // 技能释放记录\n    this.技能释放记录.push({\n      技能名称: 当前技能?.技能名称,\n      计划释放时间,\n      实际释放时间: 开始释放时间,\n      技能释放记录结果,\n    })\n  }\n\n  清空buff调用函数(对象: '自身' | '目标') {\n    const buff列表 = 对象 === '自身' ? this.当前自身buff列表 : this.当前目标buff列表\n\n    // 更新目标buff\n    Object.keys(buff列表).forEach((key) => {\n      const buff对象 = buff列表[key]\n      const buff应该消失时间 = (buff对象?.刷新时间 || 0) + (buff对象?.最大持续时间 || 0)\n      const 消失层数 = buff对象?.自然消失失去层数 || buff对象?.最大层数\n      if (buff应该消失时间 < this.当前时间) {\n        this.卸除buff({ 名称: key, 对象, 事件时间: buff应该消失时间, 卸除层数: 消失层数 })\n      }\n    })\n  }\n\n  清空已经消失的buff() {\n    // 更新目标buff\n    this.清空buff调用函数('目标')\n    // 更新自身buff\n    this.清空buff调用函数('自身')\n  }\n\n  // 对当前的DOT进行已过期的结算和剩余时间更新\n  DOT结算与更新() {\n    this.技能类实例集合?.流血?.结算流血伤害()\n    this.技能类实例集合?.斩浪破锋?.结算斩浪破锋伤害()\n    this.技能类实例集合?.截辕?.结算截辕伤害()\n  }\n\n  普通攻击结算() {\n    // 云刀从0秒开始，没1.5秒（24帧造成一次伤害）\n    const 云刀间隔 = 24\n    if (this.云刀上次造成伤害时间 !== undefined) {\n      if (this.云刀上次造成伤害时间 + 云刀间隔 <= this.当前时间) {\n        const 本次应该造成云刀伤害序列: number[] = [this.云刀上次造成伤害时间 + 云刀间隔]\n        while (\n          本次应该造成云刀伤害序列?.[本次应该造成云刀伤害序列.length - 1] + 云刀间隔 <=\n          this.当前时间\n        ) {\n          本次应该造成云刀伤害序列.push(\n            本次应该造成云刀伤害序列?.[本次应该造成云刀伤害序列.length - 1] + 云刀间隔\n          )\n        }\n        for (let i = 0; i < 本次应该造成云刀伤害序列.length; i++) {\n          this.技能造成伤害('云刀', undefined, undefined, 本次应该造成云刀伤害序列[i])\n          if (i === 本次应该造成云刀伤害序列.length - 1) {\n            this.云刀上次造成伤害时间 = 本次应该造成云刀伤害序列[i]\n          }\n        }\n      }\n    } else {\n      this.技能造成伤害('云刀')\n      this.云刀上次造成伤害时间 = 0\n    }\n  }\n\n  // 模拟轮次开始\n  本轮模拟开始前() {\n    this.重置循环执行结果()\n    this.DOT结算与更新()\n    this.普通攻击结算()\n  }\n\n  // 模拟轮次释放结束\n  本轮模拟结束后() {\n    // 判断buff列表，清空已经消失的buff\n    this.清空已经消失的buff()\n    this.对所有有CD技能检查和充能()\n  }\n\n  // 技能释放校验\n  技能释放校验(技能实例, 当前技能) {\n    const 体态校验结果 = this.单双刀体态校验(当前技能)\n    const 释放判断结果 = 技能实例.释放\n      ? 技能实例.释放?.() || { 可以释放: true }\n      : { 可以释放: true }\n    const 校验结果 = {\n      可以释放: 体态校验结果.可以释放 && 释放判断结果.可以释放,\n      异常信息: 体态校验结果.异常信息 || 释放判断结果.异常信息,\n    }\n    if (校验结果.可以释放) {\n      this.添加战斗日志?.({\n        日志: 当前技能?.技能名称,\n        日志类型: '释放技能',\n      })\n    }\n    return 校验结果\n  }\n\n  // 技能释放异常\n  技能释放异常(校验结果, 当前技能, i) {\n    this.添加战斗日志({\n      日志: `循环在第${i + 1}个技能${当前技能?.技能名称}异常终止`,\n      日志类型: '循环异常',\n    })\n    this.循环执行结果 = '异常'\n    if (校验结果?.异常信息) {\n      this.循环异常信息 = {\n        异常索引: i + 1,\n        异常信息: 校验结果?.异常信息,\n      }\n    }\n  }\n\n  // 模拟函数，一个技能的释放生命周期\n  模拟() {\n    for (let i = 0; i < this.测试循环.length; i++) {\n      this.本轮模拟开始前()\n      const 当前技能 = this?.技能基础数据?.find((item) => item?.技能名称 === this.测试循环[i])\n\n      if (当前技能) {\n        const 技能实例 = this.技能类实例集合[当前技能?.技能名称]\n        if (技能实例) {\n          技能实例?.释放前初始化?.()\n          // 获取预估技能释放时间，处理预估时间前的所有待生效事件，推进时间轴\n          const { 技能计划释放时间, 等待CD, 技能预估释放时间 } = this.技能释放前(\n            当前技能,\n            技能实例,\n            i\n          )\n          const 是否为读条技能 = !!技能实例?.读条时间?.()\n          if (是否为读条技能) {\n            技能实例?.读条?.(技能预估释放时间)\n          }\n          this.技能GCD和CD处理(等待CD, 技能预估释放时间, 当前技能, 技能实例)\n          const 释放校验结果 = this.技能释放校验(技能实例, 当前技能)\n          this.清空已经消失的buff()\n          const 是否为最后一个技能 = i === this.测试循环.length - 1\n          const 开始释放时间 = this.当前时间\n          if (释放校验结果?.可以释放) {\n            this.技能成功开始释放(当前技能, 技能实例)\n            技能实例.命中?.(是否为最后一个技能)\n            技能实例.造成伤害?.()\n            技能实例.释放后?.()\n          } else {\n            this.技能释放异常(释放校验结果, 当前技能, i)\n            break\n          }\n          this.技能释放后(当前技能, 技能计划释放时间, 开始释放时间, 技能实例)\n        }\n      }\n      this.本轮模拟结束后()\n    }\n  }\n\n  // 将日志按时间排序\n  日志排序() {\n    const 新日志 = [...(this.战斗日志 || [])]\n\n    新日志.sort((a, b) => {\n      return (a?.日志时间 || 0) - (b?.日志时间 || 0)\n    })\n\n    this.战斗日志 = [...(新日志 || [])]\n  }\n\n  获取当前各技能的运行状态() {\n    const 各技能当前运行状态 = {}\n\n    ;(Object.keys(this.技能类实例集合) || []).forEach((key) => {\n      各技能当前运行状态[key] = this.技能类实例集合[key]?.技能运行数据 || {}\n    })\n\n    return 各技能当前运行状态\n  }\n}\n\nexport default 循环主类\n\nexport type 循环主类类型 = typeof 循环主类\n"],"names":["技能系数","获取当前数据","循环主类","props","循环执行结果","循环异常信息","异常索引","异常信息","测试循环","奇穴","加速等级","网络延迟","角色状态信息","锐意","体态","当前自身buff列表","当前目标buff列表","当前时间","开始释放上一个技能的时间","战斗日志","技能释放记录","Buff和Dot数据","技能基础数据","GCD组","单刀","双刀","技能类实例集合","云刀上次造成伤害时间","undefined","大橙武模拟","this","获取加速等级","加速值","根据奇穴修改buff数据","根据奇穴修改技能数据","初始化技能实例类","起手驰风","起手识破BUFF","重置循环执行结果","决","决云势","行","行云势","停","停云势","留","留客雨","断","断云势","横","横云断浪","沧","沧浪三叠","孤","孤锋破浪","灭","灭影追风","游","游风飘踪","吃影子","流血","斩浪破锋","截辕","触发橙武","点掉橙武","名称","对象","事件时间","新增层数","当前层数","新buff对象","Math","min","最大层数","刷新时间","添加战斗日志","日志","日志类型","日志时间","buff刷新时间","卸除层数","待判断奇穴","includes","当前技能","技能类型","可以释放","ERROR_ACTION","time","跳过全部GCD时间","新GCD组","Object","keys","map","key","max","校验GCD组","技能GCD组","技能名称","forEach","实例","find","item","技能运行数据","最大充能层数","计划下次充能时间点","新层数","新充能时间点","充能","技能CD","更新技能运行数据","技能实例","GCD","等待CD时间","可以释放时间","是否为充满后第一次释放","释放后层数","原充能时间","计算充能时间","log","rest","来源","伤害次数","额外增益列表","造成时间","技能增益列表","有关的buff列表","filter","当前增益数据","增益名称","增益消失时间","最大持续时间","总增益列表","concat","buff列表","其他数据","锐意值","更新后锐意","切换目标","触发时间","破绽层数","破绽","破绽避实击虚枚举","技能造成伤害","增加锐意","潋风触发重置留客雨调息时间","i","检查GCD","技能释放前检查GCD统一方法","等待CD","技能释放前检查运行数据","延迟等待","技能计划释放时间","技能预估释放时间","时间差","增加时间","待更新GCD组","技能释放后添加GCD","增加技能GCD","增加技能CD","技能释放后更新运行数据","计划释放时间","开始释放时间","技能释放记录结果","获取技能释放记录结果","push","实际释放时间","buff对象","buff应该消失时间","消失层数","自然消失失去层数","卸除buff","清空buff调用函数","结算流血伤害","结算斩浪破锋伤害","结算截辕伤害","本次应该造成云刀伤害序列","length","DOT结算与更新","普通攻击结算","清空已经消失的buff","对所有有CD技能检查和充能","体态校验结果","单双刀体态校验","释放判断结果","释放","校验结果","本轮模拟开始前","释放前初始化","技能释放前","读条时间","读条","技能GCD和CD处理","释放校验结果","技能释放校验","是否为最后一个技能","技能释放异常","技能成功开始释放","命中","造成伤害","释放后","技能释放后","本轮模拟结束后","新日志","sort","a","b","各技能当前运行状态"],"sourceRoot":""}