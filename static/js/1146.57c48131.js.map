{"version":3,"file":"static/js/1146.57c48131.js","mappings":"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","sources":["../node_modules/@antv/component/src/legend/base.ts","../node_modules/@antv/component/src/legend/category.ts"],"sourcesContent":["import { IGroup } from '@antv/g-base';\nimport GroupComponent from '../abstract/group-component';\nimport { ILocation } from '../interfaces';\nimport { BBox, LegendBaseCfg, Point, PointLocationCfg } from '../types';\nimport { createBBox, formatPadding } from '../util/util';\n\nabstract class LegendBase<T extends LegendBaseCfg = LegendBaseCfg> extends GroupComponent\n  implements ILocation<PointLocationCfg> {\n  public getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    return {\n      ...cfg,\n      name: 'legend',\n      /**\n       * 布局方式： horizontal，vertical\n       * @type {String}\n       */\n      layout: 'horizontal',\n      locationType: 'point',\n      x: 0,\n      y: 0,\n      offsetX: 0,\n      offsetY: 0,\n      title: null,\n      background: null,\n    };\n  }\n\n  public getLayoutBBox(): BBox {\n    const bbox = super.getLayoutBBox();\n    const maxWidth = this.get('maxWidth');\n    const maxHeight = this.get('maxHeight');\n\n    let { width, height } = bbox;\n    if (maxWidth) {\n      width = Math.min(width, maxWidth);\n    }\n    if (maxHeight) {\n      height = Math.min(height, maxHeight);\n    }\n    \n    return createBBox(bbox.minX, bbox.minY, width, height);\n  }\n\n  public setLocation(cfg: PointLocationCfg) {\n    this.set('x', cfg.x);\n    this.set('y', cfg.y);\n    this.resetLocation();\n  }\n\n  protected resetLocation() {\n    const x = this.get('x');\n    const y = this.get('y');\n    const offsetX = this.get('offsetX');\n    const offsetY = this.get('offsetY');\n    this.moveElementTo(this.get('group'), {\n      x: x + offsetX,\n      y: y + offsetY,\n    });\n  }\n\n  protected applyOffset() {\n    this.resetLocation();\n  }\n\n  // 获取当前绘制的点\n  protected getDrawPoint(): Point {\n    return this.get('currentPoint');\n  }\n\n  protected setDrawPoint(point: Point) {\n    return this.set('currentPoint', point);\n  }\n  // 复写父类定义的绘制方法\n  protected renderInner(group: IGroup) {\n    this.resetDraw();\n    if (this.get('title')) {\n      this.drawTitle(group);\n    }\n    this.drawLegendContent(group);\n    if (this.get('background')) {\n      this.drawBackground(group);\n    }\n    // this.resetLocation(); // 在顶层已经在处理偏移时一起处理了\n  }\n\n  protected abstract drawLegendContent(group);\n\n  // 绘制背景\n  protected drawBackground(group: IGroup) {\n    const background = this.get('background');\n    const bbox = group.getBBox();\n    const padding = formatPadding(background.padding);\n    const attrs = {\n      // 背景从 (0,0) 开始绘制\n      x: 0,\n      y: 0,\n      width: bbox.width + padding[1] + padding[3],\n      height: bbox.height + padding[0] + padding[2],\n      ...background.style,\n    };\n    const backgroundShape = this.addShape(group, {\n      type: 'rect',\n      id: this.getElementId('background'),\n      name: 'legend-background',\n      attrs,\n    });\n    backgroundShape.toBack();\n  }\n\n  // 绘制标题，标题在图例项的上面\n  protected drawTitle(group: IGroup) {\n    const currentPoint = this.get('currentPoint');\n    const titleCfg = this.get('title');\n    const { spacing, style, text } = titleCfg;\n    const shape = this.addShape(group, {\n      type: 'text',\n      id: this.getElementId('title'),\n      name: 'legend-title',\n      attrs: {\n        text,\n        x: currentPoint.x,\n        y: currentPoint.y,\n        ...style,\n      },\n    });\n    const bbox = shape.getBBox();\n    // 标题单独在一行\n    this.set('currentPoint', { x: currentPoint.x, y: bbox.maxY + spacing });\n  }\n\n  // 重置绘制时开始的位置，如果绘制边框，考虑边框的 padding\n  private resetDraw() {\n    const background = this.get('background');\n    const currentPoint = { x: 0, y: 0 };\n    if (background) {\n      const padding = formatPadding(background.padding);\n      currentPoint.x = padding[3]; // 左边 padding\n      currentPoint.y = padding[0]; // 上面 padding\n    }\n    this.set('currentPoint', currentPoint); // 设置绘制的初始位置\n  }\n}\n\nexport default LegendBase;\n","import { IGroup, IShape } from '@antv/g-base';\nimport { clamp, deepMix, each, filter, get, mix, isNumber, isFunction } from '@antv/util';\nimport { IList } from '../interfaces';\nimport {\n  CategoryLegendCfg,\n  LegendPageNavigatorCfg,\n  LegendItemNameCfg,\n  LegendMarkerCfg,\n  ListItem,\n  LegendRadio,\n} from '../types';\nimport { ellipsisLabel } from '../util/label';\nimport { getMatrixByAngle, getMatrixByTranslate } from '../util/matrix';\nimport { getStatesStyle } from '../util/state';\nimport Theme from '../util/theme';\nimport LegendBase from './base';\n\n/**\n * 分页器 默认配置\n */\nconst DEFAULT_PAGE_NAVIGATOR = {\n  marker: {\n    style: {\n      inactiveFill: '#000',\n      inactiveOpacity: 0.45,\n      fill: '#000',\n      opacity: 1,\n      size: 12,\n    },\n  },\n  text: {\n    style: {\n      fill: '#ccc',\n      fontSize: 12,\n    },\n  },\n};\n\n// 默认 文本style\nconst textStyle = {\n  fill: Theme.textColor,\n  fontSize: 12,\n  textAlign: 'start',\n  textBaseline: 'middle',\n  fontFamily: Theme.fontFamily,\n  fontWeight: 'normal',\n  lineHeight: 12,\n};\n\nconst RIGHT_ARROW_NAME = 'navigation-arrow-right';\nconst LEFT_ARROW_NAME = 'navigation-arrow-left';\n\nconst ROTATE_MAP = {\n  right: (90 * Math.PI) / 180,\n  left: ((360 - 90) * Math.PI) / 180,\n  up: 0,\n  down: (180 * Math.PI) / 180,\n};\nclass Category extends LegendBase<CategoryLegendCfg> implements IList {\n  private currentPageIndex = 1;\n  private totalPagesCnt = 1;\n  private pageWidth = 0;\n  private pageHeight = 0;\n  private startX = 0;\n  private startY = 0;\n\n  public getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    return {\n      ...cfg,\n      name: 'legend',\n      type: 'category',\n      itemSpacing: 24,\n      itemMarginBottom: 8,\n      maxItemWidth: null,\n      itemWidth: null,\n      itemHeight: null,\n      itemName: {},\n      itemValue: null,\n      maxWidth: null,\n      maxHeight: null,\n      marker: {},\n      radio: null,\n      items: [],\n      itemStates: {},\n      itemBackground: {},\n      pageNavigator: {},\n      defaultCfg: {\n        title: {\n          spacing: 5,\n          style: {\n            fill: Theme.textColor,\n            fontSize: 12,\n            textAlign: 'start',\n            textBaseline: 'top',\n          },\n        },\n        background: {\n          padding: 5,\n          style: {\n            stroke: Theme.lineColor,\n          },\n        },\n        itemBackground: {\n          style: {\n            opacity: 0,\n            fill: '#fff',\n          },\n        },\n        pageNavigator: DEFAULT_PAGE_NAVIGATOR,\n        itemName: {\n          spacing: 16, // 如果右边有 value 或者 RadioIcon 使用这个间距\n          style: textStyle,\n        },\n        marker: {\n          spacing: 8,\n          style: {\n            r: 6,\n            symbol: 'circle',\n          },\n        },\n        itemValue: {\n          alignRight: false, // 只有itemWidth 不为 null 时此属性有效\n          formatter: null,\n          style: textStyle,\n          spacing: 6, // 如果右边有 RadioIcon 使用在这个间距\n        },\n        itemStates: {\n          active: {\n            nameStyle: {\n              opacity: 0.8,\n            },\n          },\n          unchecked: {\n            nameStyle: {\n              fill: Theme.uncheckedColor,\n            },\n            markerStyle: {\n              fill: Theme.uncheckedColor,\n              stroke: Theme.uncheckedColor,\n            },\n          },\n          inactive: {\n            nameStyle: {\n              fill: Theme.uncheckedColor,\n            },\n            markerStyle: {\n              opacity: 0.2,\n            },\n          },\n        },\n      },\n    };\n  }\n\n  // 实现 IList 接口\n  public isList(): boolean {\n    return true;\n  }\n\n  /**\n   * 获取图例项\n   * @return {ListItem[]} 列表项集合\n   */\n  public getItems(): ListItem[] {\n    return this.get('items');\n  }\n\n  /**\n   * 设置列表项\n   * @param {ListItem[]} items 列表项集合\n   */\n  public setItems(items: ListItem[]) {\n    this.update({\n      items,\n    });\n  }\n\n  /**\n   * 更新列表项\n   * @param {ListItem} item 列表项\n   * @param {object}   cfg  列表项\n   */\n  public updateItem(item: ListItem, cfg: object) {\n    mix(item, cfg);\n    this.clear(); // 由于单个图例项变化，会引起全局变化，所以全部更新\n    this.render();\n  }\n\n  /**\n   * 清空列表\n   */\n  public clearItems() {\n    const itemGroup = this.getElementByLocalId('item-group');\n    itemGroup && itemGroup.clear();\n  }\n\n  /**\n   * 设置列表项的状态\n   * @param {ListItem} item  列表项\n   * @param {string}   state 状态名\n   * @param {boolean}  value 状态值, true, false\n   */\n  public setItemState(item: ListItem, state: string, value: boolean) {\n    item[state] = value;\n    const itemElement = this.getElementByLocalId(`item-${item.id}`);\n    if (itemElement) {\n      const items = this.getItems();\n      const index = items.indexOf(item);\n      const offsetGroup = this.createOffScreenGroup(); // 离屏的 group\n      const newElement = this.drawItem(item, index, this.getItemHeight(), offsetGroup);\n      this.updateElements(newElement, itemElement); // 更新整个分组\n      this.clearUpdateStatus(itemElement); // 清理更新状态，防止出现 bug\n    }\n  }\n  /**\n   * 是否存在指定的状态\n   * @param {ListItem} item  列表项\n   * @param {boolean} state 状态名\n   */\n  public hasState(item: ListItem, state: string): boolean {\n    return !!item[state];\n  }\n\n  public getItemStates(item: ListItem): string[] {\n    const itemStates = this.get('itemStates');\n    const rst = [];\n    each(itemStates, (v, k) => {\n      if (item[k]) {\n        // item.selected\n        rst.push(k);\n      }\n    });\n    return rst;\n  }\n\n  /**\n   * 清楚所有列表项的状态\n   * @param {string} state 状态值\n   */\n  public clearItemsState(state: string) {\n    const items = this.getItemsByState(state);\n    each(items, (item) => {\n      this.setItemState(item, state, false);\n    });\n  }\n\n  /**\n   * 根据状态获取图例项\n   * @param  {string}     state [description]\n   * @return {ListItem[]}       [description]\n   */\n  public getItemsByState(state: string): ListItem[] {\n    const items = this.getItems();\n    return filter(items, (item) => {\n      return this.hasState(item, state);\n    });\n  }\n\n  // 绘制 legend 的选项\n  protected drawLegendContent(group) {\n    this.processItems();\n    this.drawItems(group);\n  }\n\n  // 防止未设置 id\n  private processItems() {\n    const items = this.get('items');\n    each(items, (item) => {\n      if (!item.id) {\n        // 如果没有设置 id，默认使用 name\n        item.id = item.name;\n      }\n    });\n  }\n\n  // 绘制所有的图例选项\n  private drawItems(group: IGroup) {\n    const itemContainerGroup = this.addGroup(group, {\n      id: this.getElementId('item-container-group'),\n      name: 'legend-item-container-group',\n    });\n    const itemGroup = this.addGroup(itemContainerGroup, {\n      id: this.getElementId('item-group'),\n      name: 'legend-item-group',\n    });\n    const itemHeight = this.getItemHeight();\n    const itemWidth = this.get('itemWidth');\n    const itemSpacing = this.get('itemSpacing');\n    const itemMarginBottom = this.get('itemMarginBottom');\n    const currentPoint = this.get('currentPoint');\n    const startX = currentPoint.x;\n    const startY = currentPoint.y;\n    const layout = this.get('layout');\n    const items = this.get('items');\n    let wrapped = false;\n    let pageWidth = 0;\n\n    const maxWidth = this.get('maxWidth'); // 最大宽度，会导致 layout : 'horizontal' 时自动换行\n    const maxHeight = this.get('maxHeight'); // 最大高度，会导致出现分页\n    // 暂时不考虑分页\n    each(items, (item, index) => {\n      const subGroup = this.drawItem(item, index, itemHeight, itemGroup);\n      const bbox = subGroup.getBBox();\n      const width = itemWidth || bbox.width;\n      if (width > pageWidth) {\n        pageWidth = width;\n      }\n      if (layout === 'horizontal') {\n        // 如果水平布局\n        if (maxWidth && maxWidth < currentPoint.x + width - startX) {\n          // 检测是否换行\n          wrapped = true;\n          currentPoint.x = startX;\n          currentPoint.y += itemHeight + itemMarginBottom;\n        }\n        this.moveElementTo(subGroup, currentPoint);\n        currentPoint.x += width + itemSpacing;\n      } else {\n        // 如果垂直布局\n        if (maxHeight && maxHeight < currentPoint.y + itemHeight + itemMarginBottom - startY) {\n          // 换行\n          wrapped = true;\n          currentPoint.x += pageWidth + itemSpacing;\n          currentPoint.y = startY;\n          pageWidth = 0;\n        }\n        this.moveElementTo(subGroup, currentPoint);\n        currentPoint.y += itemHeight + itemMarginBottom; // itemSpacing 仅影响水平间距\n      }\n    });\n\n    if (wrapped && this.get('flipPage')) {\n      this.pageHeight = 0;\n      this.pageWidth = 0;\n      this.totalPagesCnt = 1;\n      this.startX = startX;\n      this.startY = startY;\n      this.adjustNavigation(group, itemGroup);\n    }\n  }\n  // 获取图例项的高度，如果未定义，则按照 name 的高度计算\n  private getItemHeight() {\n    let itemHeight = this.get('itemHeight');\n    if (!itemHeight) {\n      const { style }: LegendItemNameCfg = this.get('itemName') || {};\n\n      if (isFunction(style)) {\n        const items = this.getItems();\n        items.forEach((item, index) => {\n          const { fontSize } = { ...textStyle, ...style(item, index, items) };\n          if (itemHeight < fontSize) {\n            itemHeight = fontSize;\n          }\n        });\n      } else if (style) {\n        itemHeight = style.fontSize;\n      }\n    }\n    return itemHeight;\n  }\n  // 绘制 marker\n  private drawMarker(container: IGroup, markerCfg: LegendMarkerCfg, item: ListItem, itemHeight: number) {\n    const markerAttrs = {\n      x: 0,\n      y: itemHeight / 2,\n      ...markerCfg.style,\n      symbol: get(item.marker, 'symbol', 'circle'),\n      ...get(item.marker, 'style', {}),\n    };\n\n    const shape = this.addShape(container, {\n      type: 'marker',\n      id: this.getElementId(`item-${item.id}-marker`),\n      name: 'legend-item-marker',\n      attrs: markerAttrs,\n    });\n    const bbox = shape.getBBox();\n    shape.attr('x', bbox.width / 2); // marker 需要左对齐，所以不能占用左侧的空间\n\n    const { stroke, fill } = shape.attr();\n    if (stroke) {\n      shape.set('isStroke', true);\n    }\n    if (fill) {\n      shape.set('isFill', true);\n    }\n\n    return shape;\n  }\n  // 绘制文本\n  private drawItemText(\n    container: IGroup,\n    textName: string,\n    cfg: LegendItemNameCfg,\n    item: ListItem,\n    itemHeight: number,\n    xPosition: number,\n    index: number\n  ) {\n    const formatter = cfg.formatter;\n    const { style } = cfg;\n\n    const attrs = {\n      x: xPosition,\n      y: itemHeight / 2,\n      text: formatter ? formatter(item[textName], item, index) : item[textName],\n      ...textStyle,\n      ...(isFunction(style) ? style(item, index, this.getItems()) : style),\n    };\n\n    return this.addShape(container, {\n      type: 'text',\n      id: this.getElementId(`item-${item.id}-${textName}`),\n      name: `legend-item-${textName}`,\n      attrs,\n    });\n  }\n\n  private drawRadio(container: IGroup, radioCfg: LegendRadio, item: ListItem, itemHeight: number, x: number) {\n    const style = radioCfg.style || {};\n    // 以用户设置的 r 为主\n    const r = style.r ?? itemHeight / 2;\n    const lineWidth = (r * 3.6) / 8;\n    const [x0, y0] = [x + r, itemHeight / 2 - r];\n    const [x1, y1] = [x0 + r, y0 + r];\n    const [x2, y2] = [x0, y1 + r];\n    const [x3, y3] = [x, y0 + r];\n    const { showRadio } = item;\n    const attrs = {\n      path: [\n        ['M', x0, y0],\n        ['A', r, r, 0, 0, 1, x1, y1],\n        ['L', x1 - lineWidth, y1],\n        ['L', x1, y1],\n        ['A', r, r, 0, 0, 1, x2, y2],\n        ['L', x2, y2 - lineWidth],\n        ['L', x2, y2],\n        ['A', r, r, 0, 0, 1, x3, y3],\n        ['L', x3 + lineWidth, y3],\n        ['L', x3, y3],\n        ['A', r, r, 0, 0, 1, x0, y0],\n        ['L', x0, y0 + lineWidth],\n      ],\n      stroke: '#000000',\n      fill: '#ffffff',\n      ...style,\n      opacity: showRadio ? (style?.opacity ?? 0.45) : 0,\n    };\n\n    const radioShape = this.addShape(container, {\n      type: 'path',\n      id: this.getElementId(`item-${item.id}-radio`),\n      name: 'legend-item-radio',\n      attrs,\n    });\n    radioShape.set('tip', radioCfg.tip);\n    return radioShape;\n  }\n\n  // 绘制图例项\n  private drawItem(item: ListItem, index: number, itemHeight: number, itemGroup: IGroup) {\n    const groupId = `item-${item.id}`;\n    // 设置单独的 Group 用于 setClip\n    const subContainer = this.addGroup(itemGroup, {\n      name: 'legend-item-container',\n      id: this.getElementId(`item-container-${groupId}`),\n      delegateObject: {\n        item,\n        index,\n      },\n    });\n    const subGroup = this.addGroup(subContainer, {\n      name: 'legend-item',\n      id: this.getElementId(groupId),\n      delegateObject: {\n        item,\n        index,\n      },\n    });\n    const marker = this.get('marker');\n    const itemName = this.get('itemName');\n    const itemValue = this.get('itemValue');\n    const itemBackground = this.get('itemBackground');\n    const radio = this.get('radio');\n    const itemWidth = this.getLimitItemWidth();\n\n    let curX = 0; // 记录当前 x 的位置\n    if (marker) {\n      const markerShape = this.drawMarker(subGroup, marker, item, itemHeight);\n      let spacing = marker.spacing;\n      const itemMarkerSpacing = get(item, ['marker', 'spacing']);\n\n      if (isNumber(itemMarkerSpacing)) {\n        // 如果 item 有配置 marker.spacing，采用 item 的配置\n        spacing = itemMarkerSpacing;\n      }\n\n      curX = markerShape.getBBox().maxX + spacing;\n    }\n\n    if (itemName) {\n      const nameShape = this.drawItemText(subGroup, 'name', itemName, item, itemHeight, curX, index);\n      if (itemWidth) {\n        // 设置了 item 的最大宽度限制，并且超出了，进行省略处理\n        ellipsisLabel(true, nameShape, clamp(itemWidth - curX, 0, itemWidth));\n      }\n      curX = nameShape.getBBox().maxX + itemName.spacing;\n    }\n\n    if (itemValue) {\n      const valueShape = this.drawItemText(subGroup, 'value', itemValue, item, itemHeight, curX, index);\n      if (itemWidth) {\n        if (itemValue.alignRight) {\n          valueShape.attr({\n            textAlign: 'right',\n            x: itemWidth,\n          });\n          ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth), 'head');\n        } else {\n          ellipsisLabel(true, valueShape, clamp(itemWidth - curX, 0, itemWidth));\n        }\n      }\n      curX = valueShape.getBBox().maxX + itemValue.spacing;\n    }\n\n    if (radio) {\n      this.drawRadio(subGroup, radio, item, itemHeight, curX);\n    }\n\n    // 添加透明的背景，便于拾取和包围盒计算\n    if (itemBackground) {\n      const bbox = subGroup.getBBox();\n      const backShape = this.addShape(subGroup, {\n        type: 'rect',\n        name: 'legend-item-background',\n        id: this.getElementId(`${groupId}-background`),\n        attrs: {\n          x: 0,\n          y: 0,\n          width: bbox.width,\n          height: itemHeight,\n          ...itemBackground.style,\n        },\n      });\n      backShape.toBack();\n    }\n\n    this.applyItemStates(item, subGroup);\n    return subGroup;\n  }\n\n  // 加上分页器并重新排序 items\n  private adjustNavigation(container: IGroup, itemGroup: IGroup) {\n    const startX = this.startX;\n    const startY = this.startY;\n    const layout = this.get('layout');\n    const subGroups = itemGroup.findAll((item) => item.get('name') === 'legend-item');\n    const maxWidth = this.get('maxWidth');\n    const maxHeight = this.get('maxHeight');\n    const itemWidth = this.get('itemWidth');\n    const itemSpacing = this.get('itemSpacing');\n    const itemHeight = this.getItemHeight();\n    const pageNavigator: LegendPageNavigatorCfg = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n    const navigation = this.drawNavigation(container, layout, '00/00', pageNavigator);\n    const navigationBBox = navigation.getBBox();\n    const currentPoint = { x: startX, y: startY };\n    let pages = 1;\n    let widthLimit = 0;\n    let pageWidth = 0;\n    let maxItemWidth = 0;\n    const itemMarginBottom = this.get('itemMarginBottom');\n\n    /**  判断当前 item 是否溢出当前页。是的话，需要换行 */\n    function shouldWrap(item, currentPoint) {\n      const bbox = item.getBBox();\n      const width = itemWidth || bbox.width;\n      const newItemXPos = currentPoint.x + width + itemSpacing + navigationBBox.width;\n      return newItemXPos > maxWidth;\n    }\n\n    if (layout === 'horizontal') {\n      const maxRow = this.get('maxRow') || 1;\n      const maxRowHeight = itemHeight + (maxRow === 1 ? 0 : itemMarginBottom);\n      // 分页器一直靠右上角\n      const navigationX = maxWidth - itemSpacing - navigationBBox.width - navigationBBox.minX; // 理论上不需要减 navigationBBox.minX\n      this.pageHeight = maxRowHeight * maxRow;\n      this.pageWidth = navigationX;\n      each(subGroups, (item) => {\n        const bbox = item.getBBox();\n        const width = itemWidth || bbox.width;\n        if ((widthLimit && widthLimit < currentPoint.x + width + itemSpacing) ||\n        shouldWrap(item, currentPoint)) {\n          if (pages === 1) {\n            widthLimit = currentPoint.x + itemSpacing;\n            this.moveElementTo(navigation, {\n              x: navigationX,\n              y: currentPoint.y + itemHeight / 2 - navigationBBox.height / 2 - navigationBBox.minY,\n            });\n          }\n          pages += 1;\n          currentPoint.x = startX;\n          currentPoint.y += maxRowHeight;\n        }\n        this.moveElementTo(item, currentPoint);\n        item.getParent().setClip({\n          type: 'rect',\n          attrs: {\n            x: currentPoint.x,\n            y: currentPoint.y,\n            width: width + itemSpacing,\n            height: itemHeight,\n          },\n        });\n        currentPoint.x += width + itemSpacing;\n      });\n    } else {\n      each(subGroups, (item) => {\n        const bbox = item.getBBox();\n        if (bbox.width > pageWidth) {\n          pageWidth = bbox.width;\n        }\n      });\n      maxItemWidth = pageWidth;\n      pageWidth += itemSpacing;\n      if (maxWidth) {\n        // maxWidth 限制加上\n        pageWidth = Math.min(maxWidth, pageWidth);\n        maxItemWidth = Math.min(maxWidth, maxItemWidth);\n      }\n      this.pageWidth = pageWidth;\n      this.pageHeight = maxHeight - Math.max(navigationBBox.height, itemHeight + itemMarginBottom);\n      const cntPerPage = Math.floor(this.pageHeight / (itemHeight + itemMarginBottom));\n      each(subGroups, (item, index) => {\n        if (index !== 0 && index % cntPerPage === 0) {\n          pages += 1;\n          currentPoint.x += pageWidth;\n          currentPoint.y = startY;\n        }\n        this.moveElementTo(item, currentPoint);\n        item.getParent().setClip({\n          type: 'rect',\n          attrs: {\n            x: currentPoint.x,\n            y: currentPoint.y,\n            width: pageWidth,\n            height: itemHeight,\n          },\n        });\n        currentPoint.y += itemHeight + itemMarginBottom;\n      });\n      this.totalPagesCnt = pages;\n      this.moveElementTo(navigation, {\n        x: startX + maxItemWidth / 2 - navigationBBox.width / 2 - navigationBBox.minX,\n        y: maxHeight - navigationBBox.height - navigationBBox.minY,\n      });\n    }\n\n    if (this.pageHeight && this.pageWidth) {\n      // 为了使固定的 clip 生效，clip 设置在 itemContainerGroup 上，itemGroup 需要在翻页时会设置 matrix\n      itemGroup.getParent().setClip({\n        type: 'rect',\n        attrs: {\n          x: this.startX,\n          y: this.startY,\n          width: this.pageWidth,\n          height: this.pageHeight,\n        },\n      });\n    }\n    // 重新计算 totalPagesCnt\n    if (layout === 'horizontal' && this.get('maxRow')) {\n      this.totalPagesCnt = Math.ceil(pages / this.get('maxRow'));\n    } else {\n      this.totalPagesCnt = pages;\n    }\n    if (this.currentPageIndex > this.totalPagesCnt) {\n      this.currentPageIndex = 1;\n    }\n    this.updateNavigation(navigation);\n    // update initial matrix\n    itemGroup.attr('matrix', this.getCurrentNavigationMatrix());\n  }\n\n  /**\n   * 绘制分页器\n   */\n  private drawNavigation(\n    group: IGroup,\n    layout: 'horizontal' | 'vertical',\n    text: string,\n    styleCfg?: LegendPageNavigatorCfg\n  ) {\n    const currentPoint = { x: 0, y: 0 };\n    const subGroup = this.addGroup(group, {\n      id: this.getElementId('navigation-group'),\n      name: 'legend-navigation',\n    });\n    const { size = 12, ...arrowStyle } = get(styleCfg.marker, 'style', {});\n    const leftArrow = this.drawArrow(\n      subGroup,\n      currentPoint,\n      LEFT_ARROW_NAME,\n      layout === 'horizontal' ? 'up' : 'left',\n      size,\n      arrowStyle\n    );\n    leftArrow.on('click', this.onNavigationBack);\n    const leftArrowBBox = leftArrow.getBBox();\n    currentPoint.x += leftArrowBBox.width + 2;\n\n    const textShape = this.addShape(subGroup, {\n      type: 'text',\n      id: this.getElementId('navigation-text'),\n      name: 'navigation-text',\n      attrs: {\n        x: currentPoint.x,\n        y: currentPoint.y + size / 2,\n        text,\n        textBaseline: 'middle',\n        ...get(styleCfg.text, 'style'),\n      },\n    });\n    const textBBox = textShape.getBBox();\n    currentPoint.x += textBBox.width + 2;\n\n    const rightArrow = this.drawArrow(\n      subGroup,\n      currentPoint,\n      RIGHT_ARROW_NAME,\n      layout === 'horizontal' ? 'down' : 'right',\n      size,\n      arrowStyle\n    );\n    rightArrow.on('click', this.onNavigationAfter);\n\n    return subGroup;\n  }\n\n  private updateNavigation(navigation?: IGroup) {\n    const pageNavigator: LegendPageNavigatorCfg = deepMix({}, DEFAULT_PAGE_NAVIGATOR, this.get('pageNavigator'));\n    const { fill, opacity, inactiveFill, inactiveOpacity } = pageNavigator.marker.style;\n\n    const text = `${this.currentPageIndex}/${this.totalPagesCnt}`;\n    const textShape = navigation ? navigation.getChildren()[1] : this.getElementByLocalId('navigation-text');\n    const leftArrow = navigation\n      ? navigation.findById(this.getElementId(LEFT_ARROW_NAME))\n      : this.getElementByLocalId(LEFT_ARROW_NAME);\n    const rightArrow = navigation\n      ? navigation.findById(this.getElementId(RIGHT_ARROW_NAME))\n      : this.getElementByLocalId(RIGHT_ARROW_NAME);\n    textShape.attr('text', text);\n    // 更新 left-arrow marker\n    leftArrow.attr('opacity', this.currentPageIndex === 1 ? inactiveOpacity : opacity);\n    leftArrow.attr('fill', this.currentPageIndex === 1 ? inactiveFill : fill);\n    leftArrow.attr('cursor', this.currentPageIndex === 1 ? 'not-allowed' : 'pointer');\n    // 更新 right-arrow marker\n    rightArrow.attr('opacity', this.currentPageIndex === this.totalPagesCnt ? inactiveOpacity : opacity);\n    rightArrow.attr('fill', this.currentPageIndex === this.totalPagesCnt ? inactiveFill : fill);\n    rightArrow.attr('cursor', this.currentPageIndex === this.totalPagesCnt ? 'not-allowed' : 'pointer');\n    // 更新位置\n    let cursorX = leftArrow.getBBox().maxX + 2;\n    textShape.attr('x', cursorX);\n    cursorX += textShape.getBBox().width + 2;\n    this.updateArrowPath(rightArrow, { x: cursorX, y: 0 });\n\n  }\n\n  private drawArrow(\n    group: IGroup,\n    currentPoint: { x: number; y: number },\n    name: string,\n    direction: 'left' | 'right' | 'up' | 'down',\n    size: number,\n    style?: LegendPageNavigatorCfg['marker']['style']\n  ) {\n    const { x, y } = currentPoint;\n    const shape = this.addShape(group, {\n      type: 'path',\n      id: this.getElementId(name),\n      name,\n      attrs: {\n        size,\n        direction,\n        path: [['M', x + size / 2, y], ['L', x, y + size], ['L', x + size, y + size], ['Z']],\n        cursor: 'pointer',\n        ...style,\n      },\n    });\n    shape.attr('matrix', getMatrixByAngle({ x: x + size / 2, y: y + size / 2 }, ROTATE_MAP[direction]));\n\n    return shape;\n  }\n\n  /**\n   * 更新分页器 arrow 组件\n   */\n  private updateArrowPath(arrow: IShape, point: { x: number; y: number }): void {\n    const { x, y } = point;\n    const { size, direction } = arrow.attr();\n    let matrix = getMatrixByAngle({ x: x + size / 2, y: y + size / 2 }, ROTATE_MAP[direction]);\n    arrow.attr('path', [['M', x + size / 2, y], ['L', x, y + size], ['L', x + size, y + size], ['Z']]);\n    arrow.attr('matrix', matrix);\n  }\n\n  private getCurrentNavigationMatrix() {\n    const { currentPageIndex, pageWidth, pageHeight } = this;\n    const layout = this.get('layout');\n    const translate =\n      layout === 'horizontal'\n        ? {\n          x: 0,\n          y: pageHeight * (1 - currentPageIndex),\n        }\n        : {\n          x: pageWidth * (1 - currentPageIndex),\n          y: 0,\n        };\n\n    return getMatrixByTranslate(translate);\n  }\n\n  private onNavigationBack = () => {\n    const itemGroup = this.getElementByLocalId('item-group');\n    if (this.currentPageIndex > 1) {\n      this.currentPageIndex -= 1;\n      this.updateNavigation();\n      const matrix = this.getCurrentNavigationMatrix();\n      if (this.get('animate')) {\n        itemGroup.animate(\n          {\n            matrix,\n          },\n          100\n        );\n      } else {\n        itemGroup.attr({ matrix });\n      }\n    }\n  };\n\n  private onNavigationAfter = () => {\n    const itemGroup = this.getElementByLocalId('item-group');\n    if (this.currentPageIndex < this.totalPagesCnt) {\n      this.currentPageIndex += 1;\n      this.updateNavigation();\n      const matrix = this.getCurrentNavigationMatrix();\n      if (this.get('animate')) {\n        itemGroup.animate(\n          {\n            matrix,\n          },\n          100\n        );\n      } else {\n        itemGroup.attr({ matrix });\n      }\n    }\n  };\n\n  // 附加状态对应的样式\n  private applyItemStates(item: ListItem, subGroup: IGroup) {\n    const states = this.getItemStates(item);\n    const hasStates = states.length > 0;\n    if (hasStates) {\n      const children = subGroup.getChildren();\n      const itemStates = this.get('itemStates');\n      each(children, (element) => {\n        const name = element.get('name');\n        const elName = name.split('-')[2]; // marker, name, value\n        const statesStyle = getStatesStyle(item, elName, itemStates);\n        if (statesStyle) {\n          element.attr(statesStyle);\n          if (elName === 'marker' && !(element.get('isStroke') && element.get('isFill'))) {\n            // 如果 marker 是单填充或者单描边的话，就不要额外添加 stroke 或这 fill 属性，否则会影响 unchecked 后的显示\n            if (element.get('isStroke')) {\n              element.attr('fill', null);\n            }\n            if (element.get('isFill')) {\n              element.attr('stroke', null);\n            }\n          }\n        }\n      });\n    }\n  }\n\n  // 获取 itemWidth 的最终设置\n  private getLimitItemWidth() {\n    const itemWidth = this.get('itemWidth');\n    let maxItemWidth = this.get('maxItemWidth');\n\n    if (maxItemWidth) {\n      // 设置了最大宽度\n      if (itemWidth) {\n        maxItemWidth = itemWidth <= maxItemWidth ? itemWidth : maxItemWidth;\n      }\n    } else if (itemWidth) {\n      maxItemWidth = itemWidth;\n    }\n\n    return maxItemWidth;\n  }\n}\n\nexport default Category;\n"],"names":["__extends","LegendBase","cfg","_super","getDefaultCfg","call","name","layout","locationType","x","y","offsetX","offsetY","title","background","bbox","getLayoutBBox","maxWidth","this","get","maxHeight","width","height","Math","min","createBBox","minX","minY","set","resetLocation","moveElementTo","point","group","resetDraw","drawTitle","drawLegendContent","drawBackground","getBBox","padding","formatPadding","attrs","style","addShape","type","id","getElementId","toBack","currentPoint","titleCfg","spacing","text","maxY","GroupComponent","DEFAULT_PAGE_NAVIGATOR","marker","inactiveFill","inactiveOpacity","fill","opacity","size","fontSize","textStyle","Theme","textAlign","textBaseline","fontFamily","fontWeight","lineHeight","RIGHT_ARROW_NAME","LEFT_ARROW_NAME","ROTATE_MAP","right","PI","left","up","down","_this","itemGroup","getElementByLocalId","currentPageIndex","updateNavigation","matrix","getCurrentNavigationMatrix","animate","attr","totalPagesCnt","Category","itemSpacing","itemMarginBottom","maxItemWidth","itemWidth","itemHeight","itemName","itemValue","radio","items","itemStates","itemBackground","pageNavigator","defaultCfg","stroke","r","symbol","alignRight","formatter","active","nameStyle","unchecked","markerStyle","inactive","update","item","mix","clear","render","state","value","itemElement","index","getItems","indexOf","offsetGroup","createOffScreenGroup","newElement","drawItem","getItemHeight","updateElements","clearUpdateStatus","rst","each","v","k","push","getItemsByState","setItemState","filter","hasState","processItems","drawItems","itemContainerGroup","addGroup","startX","startY","wrapped","pageWidth","subGroup","pageHeight","adjustNavigation","isFunction","style_1","items_1","forEach","container","markerCfg","markerAttrs","shape","textName","xPosition","radioCfg","_a","lineWidth","x0","y0","x1","y1","x2","y2","x3","y3","showRadio","path","_b","radioShape","tip","groupId","subContainer","delegateObject","getLimitItemWidth","curX","markerShape","drawMarker","itemMarkerSpacing","isNumber","maxX","nameShape","drawItemText","ellipsisLabel","clamp","valueShape","drawRadio","applyItemStates","subGroups","findAll","deepMix","navigation","drawNavigation","navigationBBox","pages","widthLimit","maxRow","maxRowHeight_1","navigationX_1","shouldWrap","getParent","setClip","max","cntPerPage_1","floor","ceil","styleCfg","arrowStyle","leftArrow","drawArrow","on","onNavigationBack","leftArrowBBox","textBBox","onNavigationAfter","textShape","getChildren","findById","rightArrow","cursorX","updateArrowPath","direction","cursor","getMatrixByAngle","arrow","translate","getMatrixByTranslate","getItemStates","length","children","itemStates_1","element","elName","split","statesStyle","getStatesStyle"],"sourceRoot":""}