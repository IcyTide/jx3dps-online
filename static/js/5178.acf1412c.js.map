{"version":3,"file":"static/js/5178.acf1412c.js","mappings":"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","sources":["../node_modules/@antv/component/src/tooltip/css-const.ts","../node_modules/@antv/component/src/tooltip/html-theme.ts","../node_modules/@antv/component/src/tooltip/html.ts","../node_modules/@antv/component/src/util/align.ts","../node_modules/@antv/component/src/trend/constant.ts","../node_modules/@antv/component/src/trend/path.ts","../node_modules/@antv/component/src/trend/trend.ts","../node_modules/@antv/component/src/util/event.ts","../node_modules/@antv/component/src/util/graphic.ts","../node_modules/@antv/component/src/util/text.ts","../node_modules/@antv/component/src/util/label.ts","../node_modules/@antv/component/src/util/matrix.ts","../node_modules/@antv/component/src/util/state.ts","../node_modules/@antv/component/src/util/theme.ts","../node_modules/@antv/component/src/util/util.ts","../node_modules/@antv/coord/src/coord/base.ts","../node_modules/@antv/coord/src/coord/cartesian.ts","../node_modules/@antv/coord/src/coord/helix.ts","../node_modules/@antv/coord/src/coord/polar.ts","../node_modules/@antv/coord/src/factory.ts","../node_modules/@antv/coord/src/index.ts"],"sourcesContent":["export const CONTAINER_CLASS = 'g2-tooltip';\nexport const TITLE_CLASS = 'g2-tooltip-title';\nexport const LIST_CLASS = 'g2-tooltip-list';\nexport const LIST_ITEM_CLASS = 'g2-tooltip-list-item';\nexport const MARKER_CLASS = 'g2-tooltip-marker';\nexport const VALUE_CLASS = 'g2-tooltip-value';\nexport const NAME_CLASS = 'g2-tooltip-name';\nexport const CROSSHAIR_X = 'g2-tooltip-crosshair-x';\nexport const CROSSHAIR_Y = 'g2-tooltip-crosshair-y';\n","import Theme from '../util/theme';\n\n// tooltip 相关 dom 的 css 类名\nimport * as CssConst from './css-const';\n\nexport default {\n  // css style for tooltip\n  [`${CssConst.CONTAINER_CLASS}`]: {\n    position: 'absolute',\n    visibility: 'visible',\n    // @2018-07-25 by blue.lb 这里去掉浮动，火狐上存在样式错位\n    // whiteSpace: 'nowrap',\n    zIndex: 8,\n    transition:\n      'visibility 0.2s cubic-bezier(0.23, 1, 0.32, 1), ' +\n      'left 0.4s cubic-bezier(0.23, 1, 0.32, 1), ' +\n      'top 0.4s cubic-bezier(0.23, 1, 0.32, 1)',\n    backgroundColor: 'rgba(255, 255, 255, 0.9)',\n    boxShadow: '0px 0px 10px #aeaeae',\n    borderRadius: '3px',\n    color: 'rgb(87, 87, 87)',\n    fontSize: '12px',\n    fontFamily: Theme.fontFamily,\n    lineHeight: '20px',\n    padding: '10px 10px 6px 10px',\n  },\n  [`${CssConst.TITLE_CLASS}`]: {\n    marginBottom: '4px',\n  },\n  [`${CssConst.LIST_CLASS}`]: {\n    margin: '0px',\n    listStyleType: 'none',\n    padding: '0px',\n  },\n  [`${CssConst.LIST_ITEM_CLASS}`]: {\n    listStyleType: 'none',\n    marginBottom: '4px',\n  },\n  [`${CssConst.MARKER_CLASS}`]: {\n    width: '8px',\n    height: '8px',\n    borderRadius: '50%',\n    display: 'inline-block',\n    marginRight: '8px',\n  },\n  [`${CssConst.VALUE_CLASS}`]: {\n    display: 'inline-block',\n    float: 'right',\n    marginLeft: '30px',\n  },\n  [`${CssConst.CROSSHAIR_X}`]: {\n    position: 'absolute',\n    width: '1px',\n    backgroundColor: 'rgba(0, 0, 0, 0.25)',\n  },\n  [`${CssConst.CROSSHAIR_Y}`]: {\n    position: 'absolute',\n    height: '1px',\n    backgroundColor: 'rgba(0, 0, 0, 0.25)',\n  },\n};\n","import colorUtil from '@antv/color-util';\nimport { createDom, modifyCSS } from '@antv/dom-util';\nimport { each, hasKey, isElement, substitute } from '@antv/util';\nimport HtmlComponent from '../abstract/html-component';\nimport { Point, PointLocationCfg } from '../types';\nimport { TooltipCfg } from '../types';\nimport { clearDom, regionToBBox, toPx } from '../util/util';\nimport * as CssConst from './css-const';\nimport TooltipTheme from './html-theme';\n\nimport { ILocation } from '../interfaces';\nimport { getAlignPoint } from '../util/align';\n\nfunction hasOneKey(obj, keys) {\n  let result = false;\n  each(keys, (key) => {\n    if (hasKey(obj, key)) {\n      result = true;\n      return false;\n    }\n  });\n  return result;\n}\n\nclass Tooltip<T extends TooltipCfg = TooltipCfg> extends HtmlComponent implements ILocation<PointLocationCfg> {\n  public getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    return {\n      ...cfg,\n      name: 'tooltip',\n      type: 'html',\n      x: 0,\n      y: 0,\n      items: [],\n      customContent: null,\n      containerTpl: `<div class=\"${CssConst.CONTAINER_CLASS}\"><div class=\"${CssConst.TITLE_CLASS}\"></div><ul class=\"${CssConst.LIST_CLASS}\"></ul></div>`,\n      itemTpl: `<li class=\"${CssConst.LIST_ITEM_CLASS}\" data-index={index}>\n          <span class=\"${CssConst.MARKER_CLASS}\" style=\"background:{color}\"></span>\n          <span class=\"${CssConst.NAME_CLASS}\">{name}</span>:\n          <span class=\"${CssConst.VALUE_CLASS}\">{value}</span>\n        </li>`,\n      xCrosshairTpl: `<div class=\"${CssConst.CROSSHAIR_X}\"></div>`,\n      yCrosshairTpl: `<div class=\"${CssConst.CROSSHAIR_Y}\"></div>`,\n      title: null,\n      showTitle: true,\n      /**\n       * tooltip 限制的区域\n       * @type {Region}\n       */\n      region: null,\n      // crosshair 的限制区域\n      crosshairsRegion: null,\n      containerClassName: CssConst.CONTAINER_CLASS,\n      // x, y, xy\n      crosshairs: null,\n      offset: 10,\n      position: 'right',\n      domStyles: null,\n      defaultStyles: TooltipTheme,\n    };\n  }\n\n  // tooltip 渲染时，渲染 title，items 和 corosshairs\n  public render() {\n    if (this.get('customContent')) {\n      this.renderCustomContent();\n    } else {\n      this.resetTitle();\n      this.renderItems();\n    }\n    // 绘制完成后，再定位\n    this.resetPosition();\n  }\n\n  // 复写清空函数，因为有模板的存在，所以默认的写法不合适\n  public clear() {\n    // 由于 crosshair 没有在 container 内，所以需要单独清理\n    this.clearCrosshairs();\n    this.setTitle(''); // 清空标题\n    this.clearItemDoms();\n  }\n\n  public show() {\n    const container = this.getContainer();\n    if (!container || this.destroyed) {\n      // 防止容器不存在或者被销毁时报错\n      return;\n    }\n    this.set('visible', true);\n    modifyCSS(container, {\n      visibility: 'visible',\n    });\n    this.setCrossHairsVisible(true);\n  }\n\n  public hide() {\n    const container = this.getContainer();\n    // relative: https://github.com/antvis/g2/issues/1221\n    if (!container || this.destroyed) {\n      return;\n    }\n    this.set('visible', false);\n    modifyCSS(container, {\n      visibility: 'hidden',\n    });\n    this.setCrossHairsVisible(false);\n  }\n\n  // 实现 IPointLocation 的接口\n  public getLocation() {\n    return { x: this.get('x'), y: this.get('y') };\n  }\n  // 实现 IPointLocation 的接口\n  public setLocation(point: Point) {\n    this.set('x', point.x);\n    this.set('y', point.y);\n    this.resetPosition();\n  }\n\n  public setCrossHairsVisible(visible) {\n    const display = visible ? '' : 'none';\n    const xCrosshairDom = this.get('xCrosshairDom');\n    const yCrosshairDom = this.get('yCrosshairDom');\n    xCrosshairDom &&\n      modifyCSS(xCrosshairDom, {\n        display,\n      });\n    yCrosshairDom &&\n      modifyCSS(yCrosshairDom, {\n        display,\n      });\n  }\n\n  // 如有 customContent 则根据 customContent 设置 container\n  protected initContainer() {\n    super.initContainer();\n    if (this.get('customContent')) {\n      if (this.get('container')) {\n        this.get('container').remove();\n      }\n      const container = this.getHtmlContentNode();\n      this.get('parent').appendChild(container);\n      this.set('container', container);\n      this.resetStyles();\n      this.applyStyles();\n    }\n  }\n\n  // 更新属性的同时，可能会引起 DOM 的变化，这里对可能引起 DOM 变化的场景做了处理\n  protected updateInner(cfg: Partial<T>) {\n    if (this.get('customContent')) {\n      this.renderCustomContent();\n    } else {\n      // 更新标题\n      if (hasOneKey(cfg, ['title', 'showTitle'])) {\n        this.resetTitle();\n      }\n      // 更新内容\n      if (hasKey(cfg, 'items')) {\n        this.renderItems();\n      }\n    }\n    super.updateInner(cfg);\n  }\n\n  protected initDom() {\n    this.cacheDoms();\n  }\n  // 清理 DOM\n  protected removeDom() {\n    super.removeDom();\n    this.clearCrosshairs();\n  }\n  // 调整位置\n  protected resetPosition() {\n    const x = this.get('x');\n    const y = this.get('y');\n    const offset = this.get('offset');\n    const { offsetX, offsetY } = this.getOffset();\n    const position = this.get('position');\n    const region = this.get('region');\n    const container = this.getContainer();\n    const bbox = this.getBBox();\n    const { width, height } = bbox;\n    let limitBox;\n    if (region) {\n      // 不限制位置\n      limitBox = regionToBBox(region);\n    }\n    const point = getAlignPoint(x, y, offset, width, height, position, limitBox);\n    modifyCSS(container, {\n      left: toPx(point.x + offsetX),\n      top: toPx(point.y + offsetY),\n    });\n    this.resetCrosshairs();\n  }\n\n  // 根据 customContent 渲染\n  private renderCustomContent() {\n    const node = this.getHtmlContentNode();\n    const parent: HTMLElement = this.get('parent');\n    const curContainer: HTMLElement = this.get('container');\n    if (curContainer && curContainer.parentNode === parent) {\n      parent.replaceChild(node, curContainer);\n    } else {\n      parent.appendChild(node);\n    }\n    this.set('container', node);\n    this.resetStyles();\n    this.applyStyles();\n  }\n\n  private getHtmlContentNode() {\n    let node: HTMLElement | undefined;\n    const customContent = this.get('customContent');\n    if (customContent) {\n      const elem = customContent(this.get('title'), this.get('items'));\n      if (isElement(elem)) {\n        node = elem as HTMLElement;\n      } else {\n        node = createDom(elem);\n      }\n    }\n    return node;\n  }\n\n  // 缓存模板设置的各种 DOM\n  private cacheDoms() {\n    const container = this.getContainer();\n    const titleDom = container.getElementsByClassName(CssConst.TITLE_CLASS)[0];\n    const listDom = container.getElementsByClassName(CssConst.LIST_CLASS)[0];\n    this.set('titleDom', titleDom);\n    this.set('listDom', listDom);\n  }\n\n  // 重置 title\n  private resetTitle() {\n    const title = this.get('title');\n    const showTitle = this.get('showTitle');\n    if (showTitle && title) {\n      this.setTitle(title);\n    } else {\n      this.setTitle('');\n    }\n  }\n  // 设置 title 文本\n  private setTitle(text) {\n    const titleDom = this.get('titleDom');\n    if (titleDom) {\n      titleDom.innerText = text;\n    }\n  }\n  // 终止 crosshair\n  private resetCrosshairs() {\n    const crosshairsRegion = this.get('crosshairsRegion');\n    const crosshairs = this.get('crosshairs');\n    if (!crosshairsRegion || !crosshairs) {\n      // 不显示 crosshair，都移除，没有设定 region 也都移除掉\n      this.clearCrosshairs();\n    } else {\n      const crosshairBox = regionToBBox(crosshairsRegion);\n      const xCrosshairDom = this.get('xCrosshairDom');\n      const yCrosshairDom = this.get('yCrosshairDom');\n      if (crosshairs === 'x') {\n        this.resetCrosshair('x', crosshairBox);\n        // 仅显示 x 的 crosshair，y 移除\n        if (yCrosshairDom) {\n          yCrosshairDom.remove();\n          this.set('yCrosshairDom', null);\n        }\n      } else if (crosshairs === 'y') {\n        this.resetCrosshair('y', crosshairBox);\n        // 仅显示 y 的 crosshair，x 移除\n        if (xCrosshairDom) {\n          xCrosshairDom.remove();\n          this.set('xCrosshairDom', null);\n        }\n      } else {\n        this.resetCrosshair('x', crosshairBox);\n        this.resetCrosshair('y', crosshairBox);\n      }\n      this.setCrossHairsVisible(this.get('visible'));\n    }\n  }\n  // 设定 crosshair 的位置，需要区分 x,y\n  private resetCrosshair(name: string, bbox) {\n    const croshairDom = this.checkCrosshair(name);\n    const value = this.get(name);\n    if (name === 'x') {\n      modifyCSS(croshairDom, {\n        left: toPx(value),\n        top: toPx(bbox.y),\n        height: toPx(bbox.height),\n      });\n    } else {\n      modifyCSS(croshairDom, {\n        top: toPx(value),\n        left: toPx(bbox.x),\n        width: toPx(bbox.width),\n      });\n    }\n  }\n\n  // 如果 crosshair 对应的 dom 不存在，则创建\n  private checkCrosshair(name: string) {\n    const domName = `${name}CrosshairDom`;\n    const tplName = `${name}CrosshairTpl`;\n    const constName = `CROSSHAIR_${name.toUpperCase()}`;\n    const styleName = CssConst[constName];\n    let croshairDom = this.get(domName);\n    const parent = this.get('parent') as HTMLElement;\n    if (!croshairDom) {\n      croshairDom = createDom(this.get(tplName)); // 创建\n      this.applyStyle(styleName, croshairDom); // 设置初始样式\n      parent.appendChild(croshairDom); // 添加到跟 tooltip 同级的目录下\n      this.set(domName, croshairDom);\n    }\n    return croshairDom;\n  }\n\n  private renderItems() {\n    this.clearItemDoms();\n    const items = this.get('items');\n    const itemTpl = this.get('itemTpl');\n    const listDom = this.get('listDom');\n    if (listDom) {\n      each(items, (item) => {\n        const color = colorUtil.toCSSGradient(item.color);\n        const substituteObj = {\n          ...item,\n          color,\n        };\n\n        const domStr = substitute(itemTpl, substituteObj);\n        const itemDom = createDom(domStr);\n        listDom.appendChild(itemDom);\n      });\n      this.applyChildrenStyles(listDom, this.get('domStyles'));\n    }\n  }\n\n  private clearItemDoms() {\n    if (this.get('listDom')) {\n      clearDom(this.get('listDom'));\n    }\n  }\n\n  private clearCrosshairs() {\n    const xCrosshairDom = this.get('xCrosshairDom');\n    const yCrosshairDom = this.get('yCrosshairDom');\n    xCrosshairDom && xCrosshairDom.remove();\n    yCrosshairDom && yCrosshairDom.remove();\n    this.set('xCrosshairDom', null);\n    this.set('yCrosshairDom', null);\n  }\n}\n\nexport default Tooltip;\n","import { BBox, Point } from '../types';\n\ninterface OutSides {\n  left: boolean;\n  right: boolean;\n  top: boolean;\n  bottom: boolean;\n}\n\n// 检测各边是否超出\nexport function getOutSides(x: number, y: number, width: number, height: number, limitBox: BBox): OutSides {\n  const hits = {\n    left: x < limitBox.x,\n    right: x + width > limitBox.x + limitBox.width,\n    top: y < limitBox.y,\n    bottom: y + height > limitBox.y + limitBox.height,\n  };\n  return hits;\n}\n\nexport function getPointByPosition(\n  x: number,\n  y: number,\n  offset: number,\n  width: number,\n  height: number,\n  position: string\n): Point {\n  let px = x;\n  let py = y;\n  switch (position) {\n    case 'left': // left center\n      px = x - width - offset;\n      py = y - height / 2;\n      break;\n    case 'right':\n      px = x + offset;\n      py = y - height / 2;\n      break;\n    case 'top':\n      px = x - width / 2;\n      py = y - height - offset;\n      break;\n    case 'bottom':\n      // bottom\n      px = x - width / 2;\n      py = y + offset;\n      break;\n    default:\n      // auto, 在 top-right\n      px = x + offset;\n      py = y - height - offset;\n      break;\n  }\n\n  return {\n    x: px,\n    y: py,\n  };\n}\n\nexport function getAlignPoint(\n  x: number,\n  y: number,\n  offset: number,\n  width: number,\n  height: number,\n  position: string,\n  limitBox?: BBox\n): Point {\n  const point = getPointByPosition(x, y, offset, width, height, position);\n  if (limitBox) {\n    const outSides = getOutSides(point.x, point.y, width, height, limitBox);\n    if (position === 'auto') {\n      // 如果是 auto，默认 tooltip 在右上角，仅需要判定右侧和上测冲突即可\n      if (outSides.right) {\n        point.x = Math.max(0, x - width - offset);\n      }\n      if (outSides.top) {\n        point.y = Math.max(0, y - height - offset);\n      }\n    } else if (position === 'top' || position === 'bottom') {\n      if (outSides.left) {\n        // 左侧躲避\n        point.x = limitBox.x;\n      }\n      if (outSides.right) {\n        // 右侧躲避\n        point.x = limitBox.x + limitBox.width - width;\n      }\n      if (position === 'top' && outSides.top) {\n        // 如果上面对齐检测上面，不检测下面\n        point.y = y + offset;\n      }\n      if (position === 'bottom' && outSides.bottom) {\n        point.y = y - height - offset;\n      }\n    } else {\n      // 检测左右位置\n      if (outSides.top) {\n        point.y = limitBox.y;\n      }\n      if (outSides.bottom) {\n        point.y = limitBox.y + limitBox.height - height;\n      }\n      if (position === 'left' && outSides.left) {\n        point.x = x + offset;\n      }\n      if (position === 'right' && outSides.right) {\n        point.x = x - width - offset;\n      }\n    }\n  }\n  return point;\n}\n","export const BACKGROUND_STYLE = {\n  // fill: 'red',\n  opacity: 0,\n};\n\nexport const LINE_STYLE = {\n  stroke: '#C5C5C5',\n  strokeOpacity: 0.85,\n};\n\nexport const AREA_STYLE = {\n  fill: '#CACED4',\n  opacity: 0.85,\n};\n","import { catmullRom2Bezier } from '@antv/path-util';\nimport { Category, Linear } from '@antv/scale';\nimport { each, head, isEqual, map } from '@antv/util';\n\ntype Point = [number, number];\n\n/**\n * 点数组转 path\n * @param points\n */\nfunction pointsToPath(points: Point[]): any[][] {\n  return map(points, (p: Point, idx: number) => {\n    const command = idx === 0 ? 'M' : 'L';\n    const [x, y] = p;\n    return [command, x, y];\n  });\n}\n\n/**\n * 将点连接成路径 path\n * @param points\n */\nexport function getLinePath(points: Point[]): any[][] {\n  return pointsToPath(points);\n}\n\n/**\n * 将点连成平滑的曲线\n * @param points\n */\nexport function getSmoothLinePath(points: Point[]): any[][] {\n  if (points.length <= 2) {\n    // 两点以内直接绘制成路径\n    return getLinePath(points);\n  }\n\n  const data = [];\n\n  each(points, (p) => {\n    // 当前点和上一个点一样的时候，忽略掉\n    if (!isEqual(p, data.slice(data.length - 2))) {\n      data.push(p[0], p[1]);\n    }\n  });\n\n  // const constraint = [ // 范围\n  //   [ 0, 0 ],\n  //   [ 1, 1 ],\n  // ];\n  const path = catmullRom2Bezier(data, false);\n  const [x, y] = head(points);\n  path.unshift(['M', x, y]);\n\n  return path;\n}\n\n/**\n * 将数据转成 path，利用 scale 的归一化能力\n * @param data\n * @param width\n * @param height\n * @param smooth\n */\nexport function dataToPath(data: number[], width: number, height: number, smooth: boolean = true): any[][] {\n  // 利用 scale 来获取 y 上的映射\n  const y = new Linear({\n    values: data,\n  });\n\n  const x = new Category({\n    values: map(data, (v, idx) => idx),\n  });\n\n  const points = map(data, (v: number, idx: number) => {\n    return [x.scale(idx) * width, height - y.scale(v) * height] as [number, number];\n  });\n\n  return smooth ? getSmoothLinePath(points) : getLinePath(points);\n}\n\n/**\n * 获得 area 面积的横向连接线的 px 位置\n * @param data \n * @param width \n * @param height \n */\nexport function getAreaLineY(data: number[], height: number): number {\n  const y = new Linear({\n    values: data,\n  });\n  // 当曲线全部为负数时，取最大值，当曲线全部为正数时，取最小值，当曲线有正有负，则取零点\n  const lineY = y.max < 0 ? y.max : Math.max(0, y.min);\n  return height - y.scale(lineY) * height;\n}\n\n/**\n * 线 path 转 area path\n * @param path\n * @param width\n * @param height\n */\nexport function linePathToAreaPath(path: any[][], width: number, height: number, data: number[]): any[][] {\n  const areaPath = [...path];\n\n  const lineYPx = getAreaLineY(data, height);\n\n  areaPath.push(['L', width, lineYPx]);\n  areaPath.push(['L', 0, lineYPx]);\n  areaPath.push(['Z']);\n\n  return areaPath;\n}\n","import { IGroup } from '@antv/g-base';\nimport GroupComponent from '../abstract/group-component';\nimport { GroupComponentCfg } from '../types';\nimport { AREA_STYLE, BACKGROUND_STYLE, LINE_STYLE } from './constant';\nimport { dataToPath, linePathToAreaPath } from './path';\n\nexport interface TrendCfg extends GroupComponentCfg {\n  // 位置大小\n  readonly x?: number;\n  readonly y?: number;\n  readonly width?: number;\n  readonly height?: number;\n  // 数据\n  readonly data?: number[];\n  // 样式\n  readonly smooth?: boolean;\n  readonly isArea?: boolean;\n  readonly backgroundStyle?: object;\n  readonly lineStyle?: object;\n  readonly areaStyle?: object;\n}\n\nexport class Trend extends GroupComponent<TrendCfg> {\n  public getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    return {\n      ...cfg,\n      name: 'trend',\n      x: 0,\n      y: 0,\n      width: 200,\n      height: 16,\n      smooth: true,\n      isArea: false,\n      data: [],\n      backgroundStyle: BACKGROUND_STYLE,\n      lineStyle: LINE_STYLE,\n      areaStyle: AREA_STYLE,\n    };\n  }\n\n  protected renderInner(group: IGroup) {\n    const { width, height, data, smooth, isArea, backgroundStyle, lineStyle, areaStyle } = this.cfg as TrendCfg;\n\n    // 背景\n    this.addShape(group, {\n      id: this.getElementId('background'),\n      type: 'rect',\n      attrs: {\n        x: 0,\n        y: 0,\n        width,\n        height,\n        ...backgroundStyle,\n      },\n    });\n\n    const path = dataToPath(data, width, height, smooth);\n    // 线\n    this.addShape(group, {\n      id: this.getElementId('line'),\n      type: 'path',\n      attrs: {\n        path,\n        ...lineStyle,\n      },\n    });\n\n    // area\n    // 在 path 的基础上，增加两个坐标点\n    if (isArea) {\n      const areaPath = linePathToAreaPath(path, width, height, data);\n      this.addShape(group, {\n        id: this.getElementId('area'),\n        type: 'path',\n        attrs: {\n          path: areaPath,\n          ...areaStyle,\n        },\n      });\n    }\n  }\n\n  protected applyOffset() {\n    const { x, y } = this.cfg as TrendCfg;\n\n    // 统一移动到对应的位置\n    this.moveElementTo(this.get('group'), {\n      x,\n      y,\n    });\n  }\n}\n\nexport default Trend;\n","import { IGroup } from '@antv/g-base';\nimport { Event as GraphEvent } from '@antv/g-base';\nimport { LooseObject } from '../types';\n\n/**\n *\n * @param group 分组\n * @param eventName 事件名\n * @param eventObject 事件对象\n */\nexport function propagationDelegate(group: IGroup, eventName: string, eventObject: LooseObject) {\n  const event = new GraphEvent(eventName, eventObject);\n  event.target = group;\n  event.propagationPath.push(group); // 从当前 group 开始触发 delegation\n  group.emitDelegation(eventName, event);\n  let parent = group.getParent() as IGroup;\n  // 执行冒泡\n  while (parent) {\n    // 委托事件要先触发\n    parent.emitDelegation(eventName, event);\n    event.propagationPath.push(parent);\n    parent = parent.getParent() as IGroup;\n  }\n}\n","import { IGroup } from '@antv/g-base';\nimport { get } from '@antv/util';\n\nimport { EnhancedTextCfg } from '../types';\nimport { ellipsisLabel } from './label';\nimport { applyRotate, applyTranslate } from './matrix';\nimport { formatPadding } from './util';\n\nexport interface TagCfg extends EnhancedTextCfg {\n  /** 组件的 id 标识 */\n  id?: string;\n  /** 组件的名字 */\n  name?: string;\n  /**\n   * 文本标注位置 x\n   */\n  x: number;\n  /**\n   * 文本标注位置 y\n   */\n  y: number;\n}\n\nexport function renderTag(container: IGroup, tagCfg: TagCfg) {\n  const { x, y, content, style, id, name, rotate, maxLength, autoEllipsis, isVertical, ellipsisPosition, background } = tagCfg;\n  const tagGroup = container.addGroup({\n    id: `${id}-group`,\n    name: `${name}-group`,\n    attrs: {\n      x,\n      y,\n    }\n  });\n\n  // Text shape\n  const text = tagGroup.addShape({\n    type: 'text',\n    id,\n    name,\n    attrs: {\n      x: 0,\n      y: 0,\n      text: content,\n      ...style,\n    },\n  });\n\n  // maxLength 应包含 background 中的 padding 值\n  const padding = formatPadding(get(background, 'padding', 0));\n  if (maxLength && autoEllipsis) {\n    const maxTextLength = maxLength - (padding[1] + padding[3]);\n    // 超出自动省略\n    ellipsisLabel(!isVertical, text, maxTextLength, ellipsisPosition);\n  }\n\n  if (background) {\n    // 渲染文本背景\n    const backgroundStyle = get(background, 'style', {});\n    const { minX, minY, width, height } = text.getCanvasBBox();\n    const tagBg = tagGroup.addShape('rect', {\n      id: `${id}-bg`,\n      name: `${id}-bg`,\n      attrs: {\n        x: minX - padding[3],\n        y: minY - padding[0],\n        width: width + padding[1] + padding[3],\n        height: height + padding[0] + padding[2],\n        ...backgroundStyle,\n      },\n    });\n    tagBg.toBack();\n  }\n\n  applyTranslate(tagGroup, x, y);\n  applyRotate(tagGroup, rotate, x, y);\n}\n","const ELLIPSIS_CODE = '\\u2026';\n\n/** 获取字符串长度 */\nexport function strLen(str: string) {\n    let len = 0;\n    for (let i = 0; i < str.length; i++) {\n        len += charAtLength(str, i);\n    }\n    return len;\n}\n\n/** 是否属于ASCII编码范畴 */\nexport function charAtLength(str: string, i: number) {\n    if (str.charCodeAt(i) > 0 && str.charCodeAt(i) < 128) {\n        return 1;\n    } else {\n        return 2;\n    }\n}\n\n/** 文本省略 */\nexport function ellipsisString(str: string, reseveLength: number, position:string = 'tail') {\n    const count = str.length;\n    let rst = '';\n    if (position === 'tail') {\n      for (let i = 0, index = 0; i < reseveLength; ) {\n        const charLength = charAtLength(str, index);\n        if (i + charLength <= reseveLength) {\n          rst += str[index];\n          i += charAtLength(str, index);\n          index++;\n        } else {\n          break;\n        }\n      }\n      rst += ELLIPSIS_CODE;\n    } else if (position === 'head') {\n      for (let i = 0, index = count - 1; i < reseveLength; ) {\n        const charLength = charAtLength(str, index);\n        if (i + charLength <= reseveLength) {\n          rst += str[index];\n          i += charAtLength(str, index);\n          index--;\n        } else {\n          break;\n        }\n      }\n      rst = ELLIPSIS_CODE + rst;\n    } else {\n      let startStr = '';\n      let endStr = '';\n      for (let i = 0, startIndex = 0, endIndex = count - 1; i < reseveLength; ) {\n        const startCodeLen = charAtLength(str, startIndex);\n        let hasAdd = false; // 设置标志位，防止头尾都没有附加字符\n        if (startCodeLen + i <= reseveLength) {\n          startStr += str[startIndex];\n          startIndex++;\n          i += startCodeLen;\n          hasAdd = true;\n        }\n\n        const endCodeLen = charAtLength(str, endIndex);\n        if (endCodeLen + i <= reseveLength) {\n          endStr = str[endIndex] + endStr;\n          i += endCodeLen;\n          endIndex--;\n          hasAdd = true;\n        }\n        if (!hasAdd) {\n          // 如果都没有增加字符，说明都不适合则中断\n          break;\n        }\n      }\n      rst = startStr + ELLIPSIS_CODE + endStr;\n    }\n    return rst;\n  }\n","import { IElement } from '@antv/g-base';\nimport { each, isNil, getEllipsisText, pick } from '@antv/util';\n\nimport { ellipsisString, strLen } from './text';\n\nconst ELLIPSIS_CODE = '\\u2026';\nconst ELLIPSIS_CODE_LENGTH = 2; // 省略号的长度\n\n/** 大数据量阈值 */\nconst OPTIMIZE_THRESHOLD = 400;\n/**\n * 针对大数据量做优化的 getMaxLabelWidth，做法不是直接去比较每一个 label 的最大宽度\n * 而是先通过比较每个 label 每个的字符串的长度，这里区分了下中英文字符\n * 最终是去字符串最“长”的那个 label 的宽度。\n * @param labels\n */\nfunction getMaxLabelWidthOptimized(labels: IElement[]) {\n  const texts: string[] = labels.map((label) => {\n    const text = label.attr('text');\n    return isNil(text) ? '' : `${text}`;\n  });\n  let maxLen = 0;\n  let maxIdx = 0;\n\n  for (let i = 0; i < texts.length; i += 1) {\n    let len = 0;\n    for (let j = 0; j <= texts[i].length; j += 1) {\n      const code = texts[i].charCodeAt(j);\n      if (code >= 19968 && code <= 40869) {\n        len += 2;\n      } else {\n        len += 1;\n      }\n    }\n    if (len > maxLen) {\n      maxLen = len;\n      maxIdx = i;\n    }\n  }\n\n  return labels[maxIdx].getBBox().width;\n}\n\n/** 获取最长的 label */\nexport function getMaxLabelWidth(labels: IElement[]) {\n  if (labels.length > OPTIMIZE_THRESHOLD) {\n    return getMaxLabelWidthOptimized(labels);\n  }\n\n  let max = 0;\n  each(labels, (label) => {\n    const bbox = label.getBBox();\n    const width = bbox.width;\n    if (max < width) {\n      max = width;\n    }\n  });\n  return max;\n}\n\n/** 获取label长度 */\nexport function getLabelLength(isVertical: boolean, label) {\n  const bbox = label.getCanvasBBox();\n  return isVertical ? bbox.width : bbox.height;\n}\n\n/* label长度是否超过约束值 */\nexport function testLabel(label: IElement, limitLength: number): boolean {\n  return label.getBBox().width < limitLength;\n}\n\n/** 处理 text shape 的自动省略 */\nexport function ellipsisLabel(isVertical: boolean, label: IElement, limitLength: number, position: string = 'tail') {\n  const text = label.attr('text') ?? ''; // 避免出现null、undefined\n\n  if (position === 'tail') {\n    // component 里的缩略处理做得很糟糕，文字长度测算完全不准确\n    // 这里暂时只对 tail 做处理\n    const font = pick(label.attr(), ['fontSize', 'fontFamily', 'fontWeight', 'fontStyle', 'fontVariant']);\n    const ellipsisText = getEllipsisText(text, limitLength, font, '…') as string;\n    if (text !== ellipsisText) {\n      label.attr('text', ellipsisText);\n      label.set('tip', text);\n      return true;\n    }\n    label.set('tip', null);\n    return false;\n  }\n\n  const labelLength = getLabelLength(isVertical, label);\n  const codeLength = strLen(text);\n  let ellipsisFlag = false;\n  if (limitLength < labelLength) {\n    const reserveLength = Math.floor((limitLength / labelLength) * codeLength) - ELLIPSIS_CODE_LENGTH; // 计算出来的应该保存的长度\n    let newText;\n    if (reserveLength >= 0) {\n      newText = ellipsisString(text, reserveLength, position);\n    } else {\n      newText = ELLIPSIS_CODE;\n    }\n    if (newText) {\n      label.attr('text', newText);\n      ellipsisFlag = true;\n    }\n  }\n  if (ellipsisFlag) {\n    label.set('tip', text);\n  } else {\n    label.set('tip', null);\n  }\n  return ellipsisFlag;\n}\n","import { IElement } from '@antv/g-base';\nimport { ext, vec2, vec3 } from '@antv/matrix-util';\nimport { BBox, Point } from '../types';\n\nconst identityMatrix = [1, 0, 0, 0, 1, 0, 0, 0, 1];\nexport function getMatrixByAngle(point: Point, angle: number, matrix = identityMatrix): number[] {\n  if (!angle) {\n    // 角度为 0 或者 null 时返回 null\n    return null;\n  }\n  const m = ext.transform(matrix, [\n    ['t', -point.x, -point.y],\n    ['r', angle],\n    ['t', point.x, point.y],\n  ]);\n  return m;\n}\n\nexport function getMatrixByTranslate(point: Point, currentMatrix?: number[]): number[] {\n  if (!point.x && !point.y) {\n    // 0，0 或者 nan 的情况下返回 null\n    return null;\n  }\n  return ext.transform(currentMatrix || identityMatrix, [['t', point.x, point.y]]);\n}\n\n// 从矩阵获取旋转的角度\nexport function getAngleByMatrix(matrix: [\n  number, number, number,\n  number, number, number,\n  number, number, number\n]): number {\n  const xVector: [number, number, number] = [1, 0, 0];\n  const out: [ number, number, number ] = [0, 0, 0];\n  vec3.transformMat3(out, xVector, matrix);\n  return Math.atan2(out[1], out[0]);\n}\n// 矩阵 * 向量\nfunction multiplyVec2(matrix, v) {\n  const out: [number, number] = [0, 0];\n  vec2.transformMat3(out, v, matrix);\n  return out;\n}\n\nexport function applyMatrix2BBox(matrix: number[], bbox: BBox) {\n  const topLeft = multiplyVec2(matrix, [bbox.minX, bbox.minY]);\n  const topRight = multiplyVec2(matrix, [bbox.maxX, bbox.minY]);\n  const bottomLeft = multiplyVec2(matrix, [bbox.minX, bbox.maxY]);\n  const bottomRight = multiplyVec2(matrix, [bbox.maxX, bbox.maxY]);\n  const minX = Math.min(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);\n  const maxX = Math.max(topLeft[0], topRight[0], bottomLeft[0], bottomRight[0]);\n  const minY = Math.min(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);\n  const maxY = Math.max(topLeft[1], topRight[1], bottomLeft[1], bottomRight[1]);\n  return {\n    x: minX,\n    y: minY,\n    minX,\n    minY,\n    maxX,\n    maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  };\n}\n\nexport function applyRotate(shape: IElement, rotate: number, x: number, y: number) {\n  if (rotate) {\n    const matrix = getMatrixByAngle({ x, y }, rotate, shape.getMatrix());\n    shape.setMatrix(matrix);\n  }\n}\n\nexport function applyTranslate(shape: IElement, x: number, y: number) {\n  const translateMatrix = getMatrixByTranslate({ x, y });\n  shape.attr('matrix', translateMatrix);\n}\n","import { each, mix } from '@antv/util';\nimport { ListItem } from '../types';\n\n// 获取多个状态量的合并值\nexport function getStatesStyle(item: ListItem, elementName: string, stateStyles: object) {\n  const styleName = `${elementName}Style`; // activeStyle\n  let styles = null;\n  each(stateStyles, (v, state) => {\n    if (item[state] && v[styleName]) {\n      if (!styles) {\n        styles = {};\n      }\n      mix(styles, v[styleName]); // 合并样式\n    }\n  });\n  return styles;\n}\n","export default {\n  fontFamily: `\n  BlinkMacSystemFont, \"Segoe UI\", Roboto,\"Helvetica Neue\",\n  Helvetica, \"PingFang SC\", \"Hiragino Sans GB\", \"Microsoft YaHei\",\n  SimSun, \"sans-serif\"`,\n  textColor: '#2C3542',\n  activeTextColor: '#333333',\n  uncheckedColor: '#D8D8D8',\n  lineColor: '#416180',\n  regionColor: '#CCD7EB',\n  verticalAxisRotate: -Math.PI / 4,\n  horizontalAxisRotate: Math.PI / 4,\n\n  // descriptionIcon theme\n  descriptionIconStroke: '#fff',\n  descriptionIconFill: 'rgba(58, 73, 101, .25)',\n};\n","import { IElement, IGroup } from '@antv/g-base';\nimport { each, isArray, isNil, isNumber } from '@antv/util';\nimport { BBox, Point, Region } from '../types';\n\nexport function formatPadding(padding: number | number[]): number[] {\n  let top = 0;\n  let left = 0;\n  let right = 0;\n  let bottom = 0;\n\n  if (isNumber(padding)) {\n    top = left = right = bottom = padding;\n  } else if (isArray(padding)) {\n    top = padding[0];\n    right = !isNil(padding[1]) ? padding[1] : padding[0];\n    bottom = !isNil(padding[2]) ? padding[2] : padding[0];\n    left = !isNil(padding[3]) ? padding[3] : right;\n  }\n\n  return [top, right, bottom, left];\n}\n\nexport function clearDom(container: HTMLElement) {\n  const children = container.childNodes;\n  const length = children.length;\n  for (let i = length - 1; i >= 0; i--) {\n    container.removeChild(children[i]);\n  }\n}\n\nexport function hasClass(elements, cName): boolean {\n  return !!elements.className.match(new RegExp(`(\\\\s|^)${cName}(\\\\s|$)`));\n}\n\nexport function regionToBBox(region: Region): BBox {\n  const { start, end } = region;\n  const minX = Math.min(start.x, end.x);\n  const minY = Math.min(start.y, end.y);\n  const maxX = Math.max(start.x, end.x);\n  const maxY = Math.max(start.y, end.y);\n  return {\n    x: minX,\n    y: minY,\n    minX,\n    minY,\n    maxX,\n    maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  };\n}\n\nexport function pointsToBBox(points: Point[]): BBox {\n  const xs: number[] = points.map((point) => point.x);\n  const ys: number[] = points.map((point) => point.y);\n  const minX = Math.min(...xs);\n  const minY = Math.min(...ys);\n  const maxX = Math.max(...xs);\n  const maxY = Math.max(...ys);\n  return {\n    x: minX,\n    y: minY,\n    minX,\n    minY,\n    maxX,\n    maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  };\n}\n\nexport function createBBox(x: number, y: number, width: number, height: number): BBox {\n  const maxX = x + width;\n  const maxY = y + height;\n\n  return {\n    x,\n    y,\n    width,\n    height,\n    minX: x,\n    minY: y,\n    // 非常奇葩的 js 特性\n    // Infinity + Infinity = Infinity\n    // Infinity - Infinity = NaN\n    // fixed https://github.com/antvis/G2Plot/issues/1243\n    maxX: isNaN(maxX) ? 0 : maxX,\n    maxY: isNaN(maxY) ? 0 : maxY,\n  };\n}\n\nexport function getValueByPercent(min: number, max: number, percent: number) {\n  return (1 - percent) * min + max * percent;\n}\n\nexport function getCirclePoint(center: Point, radius: number, angle: number) {\n  return {\n    x: center.x + Math.cos(angle) * radius,\n    y: center.y + Math.sin(angle) * radius,\n  };\n}\n\nexport function distance(p1: Point, p2: Point): number {\n  const dx = p2.x - p1.x;\n  const dy = p2.y - p1.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport const wait = (interval: number): Promise<void> => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, interval);\n  });\n};\n\n/**\n * 判断两个数值 是否接近\n * - 解决精度问题（由于无法确定精度上限，根据具体场景可传入 精度 参数）\n */\nexport const near = (x: number, y: number, e = Number.EPSILON ** 0.5): boolean =>\n  [x, y].includes(Infinity) ? Math.abs(x) === Math.abs(y) : Math.abs(x - y) < e;\n\nexport function intersectBBox(box1: BBox, box2: BBox): BBox {\n  const minX = Math.max(box1.minX, box2.minX);\n  const minY = Math.max(box1.minY, box2.minY);\n  const maxX = Math.min(box1.maxX, box2.maxX);\n  const maxY = Math.min(box1.maxY, box2.maxY);\n  return createBBox(minX, minY, maxX - minX, maxY - minY);\n}\n\nexport function mergeBBox(box1: BBox, box2: BBox): BBox {\n  const minX = Math.min(box1.minX, box2.minX);\n  const minY = Math.min(box1.minY, box2.minY);\n  const maxX = Math.max(box1.maxX, box2.maxX);\n  const maxY = Math.max(box1.maxY, box2.maxY);\n  return createBBox(minX, minY, maxX - minX, maxY - minY);\n}\n\nexport function getBBoxWithClip(element: IElement): BBox {\n  const clipShape = element.getClip();\n  const clipBBox = clipShape && clipShape.getBBox();\n  let bbox;\n  if (!element.isGroup()) {\n    // 如果是普通的图形\n    bbox = element.getBBox();\n  } else {\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    const children = (element as IGroup).getChildren();\n    if (children.length > 0) {\n      each(children, (child: IElement) => {\n        if (child.get('visible')) {\n          // 如果分组没有子元素，则直接跳过\n          if (child.isGroup() && child.get('children').length === 0) {\n            return true;\n          }\n          const box = getBBoxWithClip(child);\n          // 计算 4 个顶点\n          const leftTop = child.applyToMatrix([box.minX, box.minY, 1]);\n          const leftBottom = child.applyToMatrix([box.minX, box.maxY, 1]);\n          const rightTop = child.applyToMatrix([box.maxX, box.minY, 1]);\n          const rightBottom = child.applyToMatrix([box.maxX, box.maxY, 1]);\n          // 从中取最小的范围\n          const boxMinX = Math.min(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0]);\n          const boxMaxX = Math.max(leftTop[0], leftBottom[0], rightTop[0], rightBottom[0]);\n          const boxMinY = Math.min(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1]);\n          const boxMaxY = Math.max(leftTop[1], leftBottom[1], rightTop[1], rightBottom[1]);\n\n          if (boxMinX < minX) {\n            minX = boxMinX;\n          }\n\n          if (boxMaxX > maxX) {\n            maxX = boxMaxX;\n          }\n\n          if (boxMinY < minY) {\n            minY = boxMinY;\n          }\n\n          if (boxMaxY > maxY) {\n            maxY = boxMaxY;\n          }\n        }\n      });\n    } else {\n      minX = 0;\n      maxX = 0;\n      minY = 0;\n      maxY = 0;\n    }\n    bbox = createBBox(minX, minY, maxX - minX, maxY - minY);\n  }\n  if (clipBBox) {\n    return intersectBBox(bbox, clipBBox);\n  } else {\n    return bbox;\n  }\n}\n\nexport function updateClip(element: IElement, newElement: IElement) {\n  if (!element.getClip() && !newElement.getClip()) {\n    // 两者都没有 clip\n    return;\n  }\n  const newClipShape = newElement.getClip();\n  if (!newClipShape) {\n    // 新的 element 没有 clip\n    element.setClip(null); // 移除 clip\n    return;\n  }\n  const clipCfg = {\n    type: newClipShape.get('type'),\n    attrs: newClipShape.attr(),\n  };\n  element.setClip(clipCfg);\n}\n\nexport function toPx(number) {\n  return `${number}px`;\n}\n\nexport function getTextPoint(start: Point, end: Point, position: string, offset: number): Point {\n  const lineLength = distance(start, end);\n  const offsetPercent = offset / lineLength; // 计算间距同线的比例，用于计算最终的位置\n  let percent = 0;\n  if (position === 'start') {\n    percent = 0 - offsetPercent;\n  } else if (position === 'end') {\n    percent = 1 + offsetPercent;\n  }\n  return {\n    x: getValueByPercent(start.x, end.x, percent),\n    y: getValueByPercent(start.y, end.y, percent),\n  };\n}\n","import { ext, mat3, vec3 } from '@antv/matrix-util';\nimport { assign } from '@antv/util';\nimport { CoordinateCfg, ICoordinate, Point, Range } from '../interface';\n\nexport type CoordinateCtor = new (cfg: any) => Coordinate;\nexport type Vector2 = [number, number];\nexport type Vector3 = [number, number, number];\nexport type Matrix3 = [number, number, number, number, number, number, number, number, number];\n\n/**\n * Coordinate Base Class\n */\nexport default abstract class Coordinate implements ICoordinate {\n  // 自身属性\n  public readonly type: string = 'coordinate';\n  public readonly isRect: boolean = false;\n  public readonly isHelix: boolean = false;\n  public readonly isPolar: boolean = false;\n\n  // 外部属性\n  public start: Point;\n  public end: Point;\n  public matrix: Matrix3;\n  public isTransposed: boolean;\n\n  // 极坐标下的属性\n  public startAngle: number;\n  public endAngle: number;\n  public innerRadius: number;\n  public radius: number;\n\n  public x: Range;\n  public y: Range;\n\n  // 计算属性，通过相应的 get 方法获取，所以使用 protected 访问修饰符\n  protected center: Point;\n  protected width: number;\n  protected height: number;\n  private isReflectX = false;\n  private isReflectY = false;\n  // 初始构造时候的 matrix，存储起来用于 reset\n  private originalMatrix: Matrix3;\n\n  constructor(cfg: CoordinateCfg) {\n    const { start, end, matrix = [1, 0, 0, 0, 1, 0, 0, 0, 1], isTransposed = false } = cfg;\n    this.start = start;\n    this.end = end;\n    this.matrix = matrix as Matrix3;\n    this.originalMatrix = [...matrix] as Matrix3; // 去除引用\n    this.isTransposed = isTransposed;\n  }\n\n  /**\n   * 初始化流程\n   */\n  public initial() {\n    // center、width、height\n    this.center = {\n      x: (this.start.x + this.end.x) / 2,\n      y: (this.start.y + this.end.y) / 2,\n    };\n\n    this.width = Math.abs(this.end.x - this.start.x);\n    this.height = Math.abs(this.end.y - this.start.y);\n  }\n\n  /**\n   * 更新配置\n   * @param cfg\n   */\n  public update(cfg: CoordinateCfg) {\n    assign(this, cfg);\n    this.initial();\n  }\n\n  public convertDim(percent: number, dim: string): number {\n    let { start, end } = this[dim];\n\n    // 交换\n    if (this.isReflect(dim)) {\n      [start, end] = [end, start];\n    }\n\n    return start + percent * (end - start);\n  }\n\n  public invertDim(value: number, dim: string): number {\n    let { start, end } = this[dim];\n    // 交换\n    if (this.isReflect(dim)) {\n      [start, end] = [end, start];\n    }\n\n    return (value - start) / (end - start);\n  }\n\n  /**\n   * 将坐标点进行矩阵变换\n   * @param x   对应 x 轴画布坐标\n   * @param y   对应 y 轴画布坐标\n   * @param tag 默认为 0，可取值 0, 1\n   * @return    返回变换后的三阶向量 [x, y, z]\n   */\n  public applyMatrix(x: number, y: number, tag: number = 0): number[] {\n    const matrix = this.matrix;\n    const vector: Vector3 = [x, y, tag];\n    vec3.transformMat3(vector, vector, matrix);\n    return vector;\n  }\n\n  /**\n   * 将坐标点进行矩阵逆变换\n   * @param x   对应 x 轴画布坐标\n   * @param y   对应 y 轴画布坐标\n   * @param tag 默认为 0，可取值 0, 1\n   * @return    返回矩阵逆变换后的三阶向量 [x, y, z]\n   */\n  public invertMatrix(x: number, y: number, tag: number = 0): number[] {\n    const matrix = this.matrix;\n    const inverted = mat3.invert([0, 0, 0, 0, 0, 0, 0, 0, 0], matrix);\n    const vector: Vector3 = [x, y, tag];\n    if (inverted) {\n      // 如果为空则不进行矩阵变化，防止报错\n      vec3.transformMat3(vector, vector, inverted);\n    }\n    return vector;\n  }\n\n  /**\n   * 将归一化的坐标点数据转换为画布坐标，并根据坐标系当前矩阵进行变换\n   * @param point 归一化的坐标点\n   * @return      返回进行矩阵变换后的画布坐标\n   */\n  public convert(point: Point): Point {\n    const { x, y } = this.convertPoint(point);\n    const vector = this.applyMatrix(x, y, 1);\n    return {\n      x: vector[0],\n      y: vector[1],\n    };\n  }\n\n  /**\n   * 将进行过矩阵变换画布坐标转换为归一化坐标\n   * @param point 画布坐标\n   * @return      返回归一化的坐标点\n   */\n  public invert(point: Point): Point {\n    const vector = this.invertMatrix(point.x, point.y, 1);\n    return this.invertPoint({\n      x: vector[0],\n      y: vector[1],\n    });\n  }\n\n  /**\n   * 坐标系旋转变换\n   * @param  radian 旋转弧度\n   * @return        返回坐标系对象\n   */\n  public rotate(radian: number) {\n    const matrix = this.matrix;\n    const center = this.center;\n    ext.leftTranslate(matrix, matrix, [-center.x, -center.y]);\n    ext.leftRotate(matrix, matrix, radian);\n    ext.leftTranslate(matrix, matrix, [center.x, center.y]);\n    return this;\n  }\n\n  /**\n   * 坐标系反射变换\n   * @param dim 反射维度\n   * @return    返回坐标系对象\n   */\n  public reflect(dim: string) {\n    if (dim === 'x') {\n      this.isReflectX = !this.isReflectX;\n    } else {\n      this.isReflectY = !this.isReflectY;\n    }\n    return this;\n  }\n\n  /**\n   * 坐标系比例变换\n   * @param s1 x 方向缩放比例\n   * @param s2 y 方向缩放比例\n   * @return     返回坐标系对象\n   */\n  public scale(s1: number, s2: number) {\n    const matrix = this.matrix;\n    const center = this.center;\n    ext.leftTranslate(matrix, matrix, [-center.x, -center.y]);\n    ext.leftScale(matrix, matrix, [s1, s2]);\n    ext.leftTranslate(matrix, matrix, [center.x, center.y]);\n    return this;\n  }\n\n  /**\n   * 坐标系平移变换\n   * @param x x 方向平移像素\n   * @param y y 方向平移像素\n   * @return    返回坐标系对象\n   */\n  public translate(x: number, y: number) {\n    const matrix = this.matrix;\n    ext.leftTranslate(matrix, matrix, [x, y]);\n    return this;\n  }\n\n  /**\n   * 将坐标系 x y 两个轴进行转置\n   * @return 返回坐标系对象\n   */\n  public transpose() {\n    this.isTransposed = !this.isTransposed;\n    return this;\n  }\n\n  public getCenter(): Point {\n    return this.center;\n  }\n\n  public getWidth(): number {\n    return this.width;\n  }\n\n  public getHeight(): number {\n    return this.height;\n  }\n\n  public getRadius(): number {\n    return this.radius;\n  }\n\n  /**\n   * whether has reflect\n   * @param dim\n   */\n  public isReflect(dim: string): boolean {\n    return dim === 'x' ? this.isReflectX : this.isReflectY;\n  }\n\n  /**\n   * 重置 matrix\n   * @param matrix 如果传入，则使用，否则使用构造函数中传入的默认 matrix\n   */\n  public resetMatrix(matrix?: Matrix3) {\n    // 去除引用关系\n    this.matrix = matrix ? matrix : ([...this.originalMatrix] as Matrix3);\n  }\n\n  /**\n   * 将归一化的坐标点数据转换为画布坐标\n   * @param point\n   */\n  public abstract convertPoint(point: Point): Point;\n\n  /**\n   * 画布坐标转换为归一化的坐标点数据\n   * @param point\n   */\n  public abstract invertPoint(point: Point): Point;\n}\n","import { CoordinateCfg, Point } from '../interface';\nimport Coordinate from './base';\n\n/**\n * 笛卡尔坐标系\n * https://www.zhihu.com/question/20665303\n */\nexport default class Cartesian extends Coordinate {\n  public readonly isRect: boolean = true;\n  public readonly type: string = 'cartesian';\n\n  constructor(cfg: CoordinateCfg) {\n    super(cfg);\n\n    this.initial();\n  }\n\n  public initial() {\n    super.initial();\n\n    const start = this.start;\n    const end = this.end;\n\n    this.x = {\n      start: start.x,\n      end: end.x,\n    };\n    this.y = {\n      start: start.y,\n      end: end.y,\n    };\n  }\n\n  public convertPoint(point: Point) {\n    let { x, y } = point;\n\n    // 交换\n    if (this.isTransposed) {\n      [x, y] = [y, x];\n    }\n    return {\n      x: this.convertDim(x, 'x'),\n      y: this.convertDim(y, 'y'),\n    };\n  }\n\n  public invertPoint(point: Point) {\n    let x = this.invertDim(point.x, 'x');\n    let y = this.invertDim(point.y, 'y');\n\n    if (this.isTransposed) {\n      [x, y] = [y, x];\n    }\n\n    return { x, y };\n  }\n}\n","import { ext, vec2 } from '@antv/matrix-util';\nimport { isNumberEqual } from '@antv/util';\nimport { Point, PolarCfg } from '../interface';\nimport Coordinate, { Vector2 } from './base';\n\n/**\n * 螺旋坐标系\n */\nexport default class Helix extends Coordinate {\n  public readonly isHelix: boolean = true;\n  public readonly type: string = 'helix';\n\n  // 螺线系数\n  private a: number;\n  private d: number;\n\n  constructor(cfg: PolarCfg) {\n    super(cfg);\n\n    const { startAngle = 1.25 * Math.PI, endAngle = 7.25 * Math.PI, innerRadius = 0, radius } = cfg;\n\n    this.startAngle = startAngle;\n    this.endAngle = endAngle;\n    this.innerRadius = innerRadius;\n    this.radius = radius;\n\n    this.initial();\n  }\n\n  public initial() {\n    super.initial();\n\n    const index: number = (this.endAngle - this.startAngle) / (2 * Math.PI) + 1; // 螺线圈数\n    let maxRadius: number = Math.min(this.width, this.height) / 2;\n\n    if (this.radius && this.radius >= 0 && this.radius <= 1) {\n      maxRadius = maxRadius * this.radius;\n    }\n\n    this.d = Math.floor((maxRadius * (1 - this.innerRadius)) / index);\n    this.a = this.d / (Math.PI * 2); // 螺线系数\n\n    this.x = {\n      start: this.startAngle,\n      end: this.endAngle,\n    };\n    this.y = {\n      start: this.innerRadius * maxRadius,\n      end: this.innerRadius * maxRadius + this.d * 0.99,\n    };\n  }\n\n  /**\n   * 将百分比数据变成屏幕坐标\n   * @param point 归一化的点坐标\n   * @return      返回对应的屏幕坐标\n   */\n  public convertPoint(point: Point): Point {\n    let { x, y } = point;\n    if (this.isTransposed) {\n      [x, y] = [y, x];\n    }\n\n    const thi = this.convertDim(x, 'x');\n    const r = this.a * thi;\n    const newY = this.convertDim(y, 'y');\n\n    return {\n      x: this.center.x + Math.cos(thi) * (r + newY),\n      y: this.center.y + Math.sin(thi) * (r + newY),\n    };\n  }\n\n  /**\n   * 将屏幕坐标点还原成百分比数据\n   * @param point 屏幕坐标\n   * @return      返回对应的归一化后的数据\n   */\n  public invertPoint(point: Point): Point {\n    const d = this.d + this.y.start;\n\n    const v = vec2.subtract([0, 0], [point.x, point.y], [this.center.x, this.center.y]) as Vector2;\n\n    let thi = ext.angleTo(v, [1, 0], true);\n    let rMin = thi * this.a; // 坐标与原点的连线在第一圈上的交点，最小r值\n\n    if (vec2.length(v) < rMin) {\n      // 坐标与原点的连线不可能小于最小r值，但不排除因小数计算产生的略小于rMin的情况\n      rMin = vec2.length(v);\n    }\n\n    const index = Math.floor((vec2.length(v) - rMin) / d); // 当前点位于第index圈\n    thi = 2 * index * Math.PI + thi;\n    const r = this.a * thi;\n    let newY = vec2.length(v) - r;\n    newY = isNumberEqual(newY, 0) ? 0 : newY;\n\n    let x = this.invertDim(thi, 'x');\n    let y = this.invertDim(newY, 'y');\n    x = isNumberEqual(x, 0) ? 0 : x;\n    y = isNumberEqual(y, 0) ? 0 : y;\n\n    if (this.isTransposed) {\n      [x, y] = [y, x];\n    }\n\n    return { x, y };\n  }\n}\n","import { ext, vec2, vec3 } from '@antv/matrix-util';\nimport { isNumberEqual } from '@antv/util';\nimport { Point, PolarCfg } from '../interface';\nimport Coordinate, { Matrix3, Vector2, Vector3 } from './base';\n\nexport default class Polar extends Coordinate {\n  public readonly isPolar: boolean = true;\n  public readonly type: string = 'polar';\n\n  public circleCenter: Point;\n\n  // 极坐标的半径值，区别于用户设置的归一化 radius\n  private polarRadius: number;\n\n  constructor(cfg: PolarCfg) {\n    super(cfg);\n\n    const { startAngle = -Math.PI / 2, endAngle = (Math.PI * 3) / 2, innerRadius = 0, radius } = cfg;\n    this.startAngle = startAngle;\n    this.endAngle = endAngle;\n    this.innerRadius = innerRadius;\n    this.radius = radius;\n\n    this.initial();\n  }\n\n  public initial() {\n    super.initial();\n\n    while (this.endAngle < this.startAngle) {\n      this.endAngle += Math.PI * 2;\n    }\n\n    const oneBox = this.getOneBox();\n\n    const oneWidth = oneBox.maxX - oneBox.minX;\n    const oneHeight = oneBox.maxY - oneBox.minY;\n\n    const left = Math.abs(oneBox.minX) / oneWidth;\n    const top = Math.abs(oneBox.minY) / oneHeight;\n\n    let maxRadius: number;\n\n    if (this.height / oneHeight > this.width / oneWidth) {\n      // width 为主\n      maxRadius = this.width / oneWidth;\n      this.circleCenter = {\n        x: this.center.x - (0.5 - left) * this.width,\n        y: this.center.y - (0.5 - top) * maxRadius * oneHeight,\n      };\n    } else {\n      // height 为主\n      maxRadius = this.height / oneHeight;\n      this.circleCenter = {\n        x: this.center.x - (0.5 - left) * maxRadius * oneWidth,\n        y: this.center.y - (0.5 - top) * this.height,\n      };\n    }\n\n    this.polarRadius = this.radius;\n    if (!this.radius) {\n      this.polarRadius = maxRadius;\n    } else if (this.radius > 0 && this.radius <= 1) {\n      this.polarRadius = maxRadius * this.radius;\n    } else if (this.radius <= 0 || this.radius > maxRadius) {\n      this.polarRadius = maxRadius;\n    }\n\n    this.x = {\n      start: this.startAngle,\n      end: this.endAngle,\n    };\n\n    this.y = {\n      start: this.innerRadius * this.polarRadius,\n      end: this.polarRadius,\n    };\n  }\n\n  public getRadius() {\n    return this.polarRadius;\n  }\n\n  public convertPoint(point: Point): Point {\n    const center = this.getCenter();\n\n    let { x, y } = point;\n\n    if (this.isTransposed) {\n      [x, y] = [y, x];\n    }\n\n    x = this.convertDim(x, 'x');\n    y = this.convertDim(y, 'y');\n\n    return {\n      x: center.x + Math.cos(x) * y,\n      y: center.y + Math.sin(x) * y,\n    };\n  }\n\n  public invertPoint(point: Point): Point {\n    const center = this.getCenter();\n    const vPoint: Vector2 = [point.x - center.x, point.y - center.y];\n\n    let { startAngle, endAngle } = this;\n    if (this.isReflect('x')) {\n      [startAngle, endAngle] = [endAngle, startAngle];\n    }\n\n    const m: Matrix3 = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n    ext.leftRotate(m, m, startAngle);\n\n    const vStart3: Vector3 = [1, 0, 0];\n    vec3.transformMat3(vStart3, vStart3, m);\n    const vStart2: Vector2 = [vStart3[0], vStart3[1]];\n    let angle = ext.angleTo(vStart2, vPoint, endAngle < startAngle);\n    if (isNumberEqual(angle, Math.PI * 2)) {\n      angle = 0;\n    }\n    const radius = vec2.length(vPoint);\n\n    let xPercent = angle / (endAngle - startAngle);\n    xPercent = endAngle - startAngle > 0 ? xPercent : -xPercent;\n\n    const yPercent = this.invertDim(radius, 'y');\n    const rst = { x: 0, y: 0 };\n    rst.x = this.isTransposed ? yPercent : xPercent;\n    rst.y = this.isTransposed ? xPercent : yPercent;\n    return rst;\n  }\n\n  public getCenter() {\n    return this.circleCenter;\n  }\n\n  private getOneBox() {\n    const startAngle = this.startAngle;\n    const endAngle = this.endAngle;\n    if (Math.abs(endAngle - startAngle) >= Math.PI * 2) {\n      return {\n        minX: -1,\n        maxX: 1,\n        minY: -1,\n        maxY: 1,\n      };\n    }\n    const xs = [0, Math.cos(startAngle), Math.cos(endAngle)];\n    const ys = [0, Math.sin(startAngle), Math.sin(endAngle)];\n\n    for (let i = Math.min(startAngle, endAngle); i < Math.max(startAngle, endAngle); i += Math.PI / 18) {\n      xs.push(Math.cos(i));\n      ys.push(Math.sin(i));\n    }\n\n    return {\n      minX: Math.min(...xs),\n      maxX: Math.max(...xs),\n      minY: Math.min(...ys),\n      maxY: Math.max(...ys),\n    };\n  }\n}\n","import { CoordinateCtor } from './coord/base';\n\n// 所有的 Coordinate map\nconst COORDINATE_MAP: Record<string, CoordinateCtor> = {};\n\n/**\n * 通过类型获得 coordinate 类\n * @param type\n */\nexport const getCoordinate = (type: string): CoordinateCtor => {\n  return COORDINATE_MAP[type.toLowerCase()];\n};\n\n/**\n * 注册 coordinate 类\n * @param type\n * @param ctor\n */\nexport const registerCoordinate = (type: string, ctor: CoordinateCtor): void => {\n  // 存储到 map 中\n  COORDINATE_MAP[type.toLowerCase()] = ctor;\n};\n\nexport * from './interface';\n","import Coordinate from './coord/base';\nimport Cartesian from './coord/cartesian';\nimport Helix from './coord/helix';\nimport Polar from './coord/polar';\n\nimport { getCoordinate, registerCoordinate } from './factory';\n\nregisterCoordinate('rect', Cartesian);\nregisterCoordinate('cartesian', Cartesian);\nregisterCoordinate('polar', Polar);\nregisterCoordinate('helix', Helix);\n\nexport { getCoordinate, registerCoordinate, Coordinate };\n\nexport { Point, PolarCfg, CoordinateCfg } from './interface';\n"],"names":["CONTAINER_CLASS","TITLE_CLASS","LIST_CLASS","LIST_ITEM_CLASS","MARKER_CLASS","VALUE_CLASS","NAME_CLASS","CROSSHAIR_X","CROSSHAIR_Y","CssConst","position","visibility","zIndex","transition","backgroundColor","boxShadow","borderRadius","color","fontSize","fontFamily","Theme","lineHeight","padding","_a","marginBottom","margin","listStyleType","width","height","display","marginRight","float","marginLeft","__extends","Tooltip","cfg","_super","getDefaultCfg","call","name","type","x","y","items","customContent","containerTpl","itemTpl","xCrosshairTpl","yCrosshairTpl","title","showTitle","region","crosshairsRegion","containerClassName","crosshairs","offset","domStyles","defaultStyles","TooltipTheme","this","get","renderCustomContent","resetTitle","renderItems","resetPosition","clearCrosshairs","setTitle","clearItemDoms","container","getContainer","destroyed","set","modifyCSS","setCrossHairsVisible","point","visible","xCrosshairDom","yCrosshairDom","initContainer","remove","getHtmlContentNode","appendChild","resetStyles","applyStyles","obj","keys","result","each","key","hasKey","hasOneKey","updateInner","cacheDoms","removeDom","limitBox","getOffset","offsetX","offsetY","bbox","getBBox","regionToBBox","px","py","getPointByPosition","outSides","left","right","top","bottom","getOutSides","Math","max","getAlignPoint","toPx","resetCrosshairs","node","parent","curContainer","parentNode","replaceChild","elem","isElement","createDom","titleDom","getElementsByClassName","listDom","text","innerText","crosshairBox","resetCrosshair","croshairDom","checkCrosshair","value","domName","tplName","constName","toUpperCase","styleName","applyStyle","item","colorUtil","substituteObj","domStr","substitute","itemDom","applyChildrenStyles","clearDom","HtmlComponent","BACKGROUND_STYLE","opacity","LINE_STYLE","stroke","strokeOpacity","AREA_STYLE","fill","getLinePath","points","map","p","idx","pointsToPath","dataToPath","data","smooth","Linear","values","Category","v","scale","length","isEqual","slice","push","path","catmullRom2Bezier","head","unshift","getSmoothLinePath","linePathToAreaPath","areaPath","lineYPx","lineY","min","getAreaLineY","Trend","isArea","backgroundStyle","lineStyle","areaStyle","group","addShape","id","getElementId","attrs","moveElementTo","GroupComponent","propagationDelegate","eventName","eventObject","event","GraphEvent","target","propagationPath","emitDelegation","getParent","renderTag","tagCfg","content","style","rotate","maxLength","autoEllipsis","isVertical","ellipsisPosition","background","tagGroup","addGroup","formatPadding","maxTextLength","ellipsisLabel","getCanvasBBox","minX","minY","toBack","applyTranslate","applyRotate","charAtLength","str","i","charCodeAt","getMaxLabelWidth","labels","texts","label","attr","isNil","maxLen","maxIdx","len","j","code","getMaxLabelWidthOptimized","limitLength","font","pick","ellipsisText","getEllipsisText","labelLength","getLabelLength","codeLength","strLen","ellipsisFlag","reserveLength","floor","newText","reseveLength","count","rst","index","startStr","endStr","startIndex","endIndex","startCodeLen","hasAdd","endCodeLen","ellipsisString","identityMatrix","getMatrixByAngle","angle","matrix","ext","getMatrixByTranslate","currentMatrix","getAngleByMatrix","out","vec3","atan2","multiplyVec2","vec2","applyMatrix2BBox","topLeft","topRight","maxX","bottomLeft","maxY","bottomRight","shape","getMatrix","setMatrix","translateMatrix","getStatesStyle","elementName","stateStyles","styles","state","mix","textColor","activeTextColor","uncheckedColor","lineColor","regionColor","verticalAxisRotate","PI","horizontalAxisRotate","descriptionIconStroke","descriptionIconFill","isNumber","isArray","children","childNodes","removeChild","hasClass","elements","cName","className","match","RegExp","start","end","pointsToBBox","xs","ys","apply","createBBox","isNaN","getValueByPercent","percent","getCirclePoint","center","radius","cos","sin","near","e","Number","EPSILON","includes","Infinity","abs","getBBoxWithClip","element","clipShape","getClip","clipBBox","isGroup","minX_1","maxX_1","minY_1","maxY_1","getChildren","child","box","leftTop","applyToMatrix","leftBottom","rightTop","rightBottom","boxMinX","boxMaxX","boxMinY","boxMaxY","box1","box2","intersectBBox","updateClip","newElement","newClipShape","clipCfg","setClip","number","getTextPoint","offsetPercent","p1","p2","dx","dy","sqrt","distance","isRect","isHelix","isPolar","isReflectX","isReflectY","_b","isTransposed","originalMatrix","__spreadArray","Coordinate","assign","initial","dim","isReflect","tag","vector","inverted","mat3","convertPoint","applyMatrix","invertMatrix","invertPoint","radian","s1","s2","_this","Cartesian","convertDim","invertDim","startAngle","endAngle","_c","innerRadius","Helix","maxRadius","d","a","thi","r","newY","rMin","isNumberEqual","Polar","oneBox","getOneBox","oneWidth","oneHeight","circleCenter","polarRadius","getCenter","vPoint","m","vStart3","vStart2","xPercent","yPercent","COORDINATE_MAP","getCoordinate","toLowerCase","registerCoordinate","ctor"],"sourceRoot":""}