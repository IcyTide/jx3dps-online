{"version":3,"file":"static/js/8807.942e4ab2.js","mappings":";4XASO,SAASA,EAASC,EAAGC,EAAGC,GAC3B,MAAO,CACHF,EAAqB,KAAlBG,EAAAA,EAAAA,IAAQH,EAAG,KACdC,EAAqB,KAAlBE,EAAAA,EAAAA,IAAQF,EAAG,KACdC,EAAqB,KAAlBC,EAAAA,EAAAA,IAAQD,EAAG,KAErB,CAMM,SAASE,EAASJ,EAAGC,EAAGC,GAC3BF,GAAIG,EAAAA,EAAAA,IAAQH,EAAG,KACfC,GAAIE,EAAAA,EAAAA,IAAQF,EAAG,KACfC,GAAIC,EAAAA,EAAAA,IAAQD,EAAG,KACf,IAAIG,EAAMC,KAAKD,IAAIL,EAAGC,EAAGC,GACrBK,EAAMD,KAAKC,IAAIP,EAAGC,EAAGC,GACrBM,EAAI,EACJC,EAAI,EACJC,GAAKL,EAAME,GAAO,EACtB,GAAIF,IAAQE,EACRE,EAAI,EACJD,EAAI,MAEH,CACD,IAAIG,EAAIN,EAAME,EAEd,OADAE,EAAIC,EAAI,GAAMC,GAAK,EAAIN,EAAME,GAAOI,GAAKN,EAAME,GACvCF,GACJ,KAAKL,EACDQ,GAAKP,EAAIC,GAAKS,GAAKV,EAAIC,EAAI,EAAI,GAC/B,MACJ,KAAKD,EACDO,GAAKN,EAAIF,GAAKW,EAAI,EAClB,MACJ,KAAKT,EACDM,GAAKR,EAAIC,GAAKU,EAAI,EAK1BH,GAAK,CACR,CACD,MAAO,CAAEA,EAAGA,EAAGC,EAAGA,EAAGC,EAAGA,EAC3B,CACD,SAASE,EAAQC,EAAGC,EAAGC,GAOnB,OANIA,EAAI,IACJA,GAAK,GAELA,EAAI,IACJA,GAAK,GAELA,EAAI,EAAI,EACDF,EAAe,EAAIE,GAAdD,EAAID,GAEhBE,EAAI,GACGD,EAEPC,EAAI,EAAI,EACDF,GAAKC,EAAID,IAAM,EAAI,EAAIE,GAAK,EAEhCF,CACV,CAOM,SAASG,EAASR,EAAGC,EAAGC,GAC3B,IAAIV,EACAC,EACAC,EAIJ,GAHAM,GAAIL,EAAAA,EAAAA,IAAQK,EAAG,KACfC,GAAIN,EAAAA,EAAAA,IAAQM,EAAG,KACfC,GAAIP,EAAAA,EAAAA,IAAQO,EAAG,KACL,IAAND,EAEAR,EAAIS,EACJR,EAAIQ,EACJV,EAAIU,MAEH,CACD,IAAII,EAAIJ,EAAI,GAAMA,GAAK,EAAID,GAAKC,EAAID,EAAIC,EAAID,EACxCI,EAAI,EAAIH,EAAII,EAChBd,EAAIY,EAAQC,EAAGC,EAAGN,EAAI,EAAI,GAC1BP,EAAIW,EAAQC,EAAGC,EAAGN,GAClBN,EAAIU,EAAQC,EAAGC,EAAGN,EAAI,EAAI,EAC7B,CACD,MAAO,CAAER,EAAO,IAAJA,EAASC,EAAO,IAAJA,EAASC,EAAO,IAAJA,EACvC,CAOM,SAASe,EAASjB,EAAGC,EAAGC,GAC3BF,GAAIG,EAAAA,EAAAA,IAAQH,EAAG,KACfC,GAAIE,EAAAA,EAAAA,IAAQF,EAAG,KACfC,GAAIC,EAAAA,EAAAA,IAAQD,EAAG,KACf,IAAIG,EAAMC,KAAKD,IAAIL,EAAGC,EAAGC,GACrBK,EAAMD,KAAKC,IAAIP,EAAGC,EAAGC,GACrBM,EAAI,EACJU,EAAIb,EACJM,EAAIN,EAAME,EACVE,EAAY,IAARJ,EAAY,EAAIM,EAAIN,EAC5B,GAAIA,IAAQE,EACRC,EAAI,MAEH,CACD,OAAQH,GACJ,KAAKL,EACDQ,GAAKP,EAAIC,GAAKS,GAAKV,EAAIC,EAAI,EAAI,GAC/B,MACJ,KAAKD,EACDO,GAAKN,EAAIF,GAAKW,EAAI,EAClB,MACJ,KAAKT,EACDM,GAAKR,EAAIC,GAAKU,EAAI,EAK1BH,GAAK,CACR,CACD,MAAO,CAAEA,EAAGA,EAAGC,EAAGA,EAAGS,EAAGA,EAC3B,CAOM,SAASC,EAASX,EAAGC,EAAGS,GAC3BV,EAAsB,GAAlBL,EAAAA,EAAAA,IAAQK,EAAG,KACfC,GAAIN,EAAAA,EAAAA,IAAQM,EAAG,KACfS,GAAIf,EAAAA,EAAAA,IAAQe,EAAG,KACf,IAAIE,EAAId,KAAKe,MAAMb,GACfc,EAAId,EAAIY,EACRP,EAAIK,GAAK,EAAIT,GACbK,EAAII,GAAK,EAAII,EAAIb,GACjBM,EAAIG,GAAK,GAAK,EAAII,GAAKb,GACvBc,EAAMH,EAAI,EAId,MAAO,CAAEpB,EAAO,IAHR,CAACkB,EAAGJ,EAAGD,EAAGA,EAAGE,EAAGG,GAAGK,GAGNtB,EAAO,IAFpB,CAACc,EAAGG,EAAGA,EAAGJ,EAAGD,EAAGA,GAAGU,GAEMrB,EAAO,IADhC,CAACW,EAAGA,EAAGE,EAAGG,EAAGA,EAAGJ,GAAGS,GAE9B,CAOM,SAASC,EAASxB,EAAGC,EAAGC,EAAGuB,GAC9B,IAAIC,EAAM,EACNC,EAAAA,EAAAA,IAAKrB,KAAKsB,MAAM5B,GAAG6B,SAAS,MAC5BF,EAAAA,EAAAA,IAAKrB,KAAKsB,MAAM3B,GAAG4B,SAAS,MAC5BF,EAAAA,EAAAA,IAAKrB,KAAKsB,MAAM1B,GAAG2B,SAAS,MAGhC,OAAIJ,GACAC,EAAI,GAAGI,WAAWJ,EAAI,GAAGK,OAAO,KAChCL,EAAI,GAAGI,WAAWJ,EAAI,GAAGK,OAAO,KAChCL,EAAI,GAAGI,WAAWJ,EAAI,GAAGK,OAAO,IACzBL,EAAI,GAAGK,OAAO,GAAKL,EAAI,GAAGK,OAAO,GAAKL,EAAI,GAAGK,OAAO,GAExDL,EAAIM,KAAK,GACnB,CAQM,SAASC,EAAUjC,EAAGC,EAAGC,EAAGgC,EAAGC,GAClC,IAAIT,EAAM,EACNC,EAAAA,EAAAA,IAAKrB,KAAKsB,MAAM5B,GAAG6B,SAAS,MAC5BF,EAAAA,EAAAA,IAAKrB,KAAKsB,MAAM3B,GAAG4B,SAAS,MAC5BF,EAAAA,EAAAA,IAAKrB,KAAKsB,MAAM1B,GAAG2B,SAAS,MAC5BF,EAAAA,EAAAA,IAAKS,EAAoBF,KAG7B,OAAIC,GACAT,EAAI,GAAGI,WAAWJ,EAAI,GAAGK,OAAO,KAChCL,EAAI,GAAGI,WAAWJ,EAAI,GAAGK,OAAO,KAChCL,EAAI,GAAGI,WAAWJ,EAAI,GAAGK,OAAO,KAChCL,EAAI,GAAGI,WAAWJ,EAAI,GAAGK,OAAO,IACzBL,EAAI,GAAGK,OAAO,GAAKL,EAAI,GAAGK,OAAO,GAAKL,EAAI,GAAGK,OAAO,GAAKL,EAAI,GAAGK,OAAO,GAE3EL,EAAIM,KAAK,GACnB,CAeM,SAASI,EAAoBzB,GAChC,OAAOL,KAAKsB,MAAsB,IAAhBS,WAAW1B,IAAUkB,SAAS,GACnD,CAEM,SAASS,EAAoB9B,GAChC,OAAO+B,EAAgB/B,GAAK,GAC/B,CAEM,SAAS+B,EAAgBC,GAC5B,OAAOC,SAASD,EAAK,GACxB,CACM,SAASE,EAAoBC,GAChC,MAAO,CACH3C,EAAG2C,GAAS,GACZ1C,GAAY,MAAR0C,IAAmB,EACvBzC,EAAW,IAARyC,EAEV,sECtOM,IAAIC,EAAQ,CACfC,UAAW,UACXC,aAAc,UACdC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,MAAO,UACPC,OAAQ,UACRC,MAAO,UACPC,eAAgB,UAChBC,KAAM,UACNC,WAAY,UACZC,MAAO,UACPC,UAAW,UACXC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,MAAO,UACPC,eAAgB,UAChBC,SAAU,UACVC,QAAS,UACTC,KAAM,UACNC,SAAU,UACVC,SAAU,UACVC,cAAe,UACfC,SAAU,UACVC,UAAW,UACXC,SAAU,UACVC,UAAW,UACXC,YAAa,UACbC,eAAgB,UAChBC,WAAY,UACZC,WAAY,UACZC,QAAS,UACTC,WAAY,UACZC,aAAc,UACdC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,SAAU,UACVC,YAAa,UACbC,QAAS,UACTC,QAAS,UACTC,WAAY,UACZC,UAAW,UACXC,YAAa,UACbC,YAAa,UACbC,QAAS,UACTC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,KAAM,UACNC,KAAM,UACNC,MAAO,UACPC,YAAa,UACbC,KAAM,UACNC,SAAU,UACVC,QAAS,UACTC,UAAW,UACXC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,cAAe,UACfC,SAAU,UACVC,UAAW,UACXC,aAAc,UACdC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,qBAAsB,UACtBC,UAAW,UACXC,WAAY,UACZC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,cAAe,UACfC,aAAc,UACdC,eAAgB,UAChBC,eAAgB,UAChBC,eAAgB,UAChBC,YAAa,UACbC,KAAM,UACNC,UAAW,UACXC,MAAO,UACPC,QAAS,UACTC,OAAQ,UACRC,iBAAkB,UAClBC,WAAY,UACZC,aAAc,UACdC,aAAc,UACdC,eAAgB,UAChBC,gBAAiB,UACjBC,kBAAmB,UACnBC,gBAAiB,UACjBC,gBAAiB,UACjBC,aAAc,UACdC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,YAAa,UACbC,KAAM,UACNC,QAAS,UACTC,MAAO,UACPC,UAAW,UACXC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,cAAe,UACfC,UAAW,UACXC,cAAe,UACfC,cAAe,UACfC,WAAY,UACZC,UAAW,UACXC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,WAAY,UACZC,OAAQ,UACRC,cAAe,UACfC,IAAK,UACLC,UAAW,UACXC,UAAW,UACXC,YAAa,UACbC,OAAQ,UACRC,WAAY,UACZC,SAAU,UACVC,SAAU,UACVC,OAAQ,UACRC,OAAQ,UACRC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,KAAM,UACNC,YAAa,UACbC,UAAW,UACXC,IAAK,UACLC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,UAAW,UACXC,OAAQ,UACRC,MAAO,UACPC,MAAO,UACPC,WAAY,UACZC,OAAQ,UACRC,YAAa,qHCnIV,SAASC,EAAWtJ,GACvB,IAAIuJ,EAAM,CAAElM,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACvBgC,EAAI,EACJzB,EAAI,KACJS,EAAI,KACJR,EAAI,KACJyL,GAAK,EACLC,GAAS,EA6Bb,MA5BqB,kBAAVzJ,IACPA,EAgED,SAA6BA,GAEhC,GAAqB,KADrBA,EAAQA,EAAM0J,OAAOC,eACXC,OACN,OAAO,EAEX,IAAIC,GAAQ,EACZ,GAAI5J,EAAAA,EAAMD,GACNA,EAAQC,EAAAA,EAAMD,GACd6J,GAAQ,OAEP,GAAc,gBAAV7J,EACL,MAAO,CAAE3C,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAGgC,EAAG,EAAGkK,OAAQ,QAM7C,IAAIK,EAAQC,EAASR,IAAIS,KAAKhK,GAC9B,GAAI8J,EACA,MAAO,CAAEzM,EAAGyM,EAAM,GAAIxM,EAAGwM,EAAM,GAAIvM,EAAGuM,EAAM,IAGhD,GADAA,EAAQC,EAASE,KAAKD,KAAKhK,GAEvB,MAAO,CAAE3C,EAAGyM,EAAM,GAAIxM,EAAGwM,EAAM,GAAIvM,EAAGuM,EAAM,GAAIvK,EAAGuK,EAAM,IAG7D,GADAA,EAAQC,EAASG,IAAIF,KAAKhK,GAEtB,MAAO,CAAEnC,EAAGiM,EAAM,GAAIhM,EAAGgM,EAAM,GAAI/L,EAAG+L,EAAM,IAGhD,GADAA,EAAQC,EAASI,KAAKH,KAAKhK,GAEvB,MAAO,CAAEnC,EAAGiM,EAAM,GAAIhM,EAAGgM,EAAM,GAAI/L,EAAG+L,EAAM,GAAIvK,EAAGuK,EAAM,IAG7D,GADAA,EAAQC,EAASK,IAAIJ,KAAKhK,GAEtB,MAAO,CAAEnC,EAAGiM,EAAM,GAAIhM,EAAGgM,EAAM,GAAIvL,EAAGuL,EAAM,IAGhD,GADAA,EAAQC,EAASM,KAAKL,KAAKhK,GAEvB,MAAO,CAAEnC,EAAGiM,EAAM,GAAIhM,EAAGgM,EAAM,GAAIvL,EAAGuL,EAAM,GAAIvK,EAAGuK,EAAM,IAG7D,GADAA,EAAQC,EAASO,KAAKN,KAAKhK,GAEvB,MAAO,CACH3C,GAAGuC,EAAAA,EAAAA,IAAgBkK,EAAM,IACzBxM,GAAGsC,EAAAA,EAAAA,IAAgBkK,EAAM,IACzBvM,GAAGqC,EAAAA,EAAAA,IAAgBkK,EAAM,IACzBvK,GAAGI,EAAAA,EAAAA,IAAoBmK,EAAM,IAC7BL,OAAQI,EAAQ,OAAS,QAIjC,GADAC,EAAQC,EAASQ,KAAKP,KAAKhK,GAEvB,MAAO,CACH3C,GAAGuC,EAAAA,EAAAA,IAAgBkK,EAAM,IACzBxM,GAAGsC,EAAAA,EAAAA,IAAgBkK,EAAM,IACzBvM,GAAGqC,EAAAA,EAAAA,IAAgBkK,EAAM,IACzBL,OAAQI,EAAQ,OAAS,OAIjC,GADAC,EAAQC,EAASS,KAAKR,KAAKhK,GAEvB,MAAO,CACH3C,GAAGuC,EAAAA,EAAAA,IAAgBkK,EAAM,GAAKA,EAAM,IACpCxM,GAAGsC,EAAAA,EAAAA,IAAgBkK,EAAM,GAAKA,EAAM,IACpCvM,GAAGqC,EAAAA,EAAAA,IAAgBkK,EAAM,GAAKA,EAAM,IACpCvK,GAAGI,EAAAA,EAAAA,IAAoBmK,EAAM,GAAKA,EAAM,IACxCL,OAAQI,EAAQ,OAAS,QAIjC,GADAC,EAAQC,EAASU,KAAKT,KAAKhK,GAEvB,MAAO,CACH3C,GAAGuC,EAAAA,EAAAA,IAAgBkK,EAAM,GAAKA,EAAM,IACpCxM,GAAGsC,EAAAA,EAAAA,IAAgBkK,EAAM,GAAKA,EAAM,IACpCvM,GAAGqC,EAAAA,EAAAA,IAAgBkK,EAAM,GAAKA,EAAM,IACpCL,OAAQI,EAAQ,OAAS,OAGjC,OAAO,CACV,CAhJea,CAAoB1K,IAEX,kBAAVA,IACH2K,EAAe3K,EAAM3C,IAAMsN,EAAe3K,EAAM1C,IAAMqN,EAAe3K,EAAMzC,IAC3EgM,GAAMnM,EAAAA,EAAAA,IAAS4C,EAAM3C,EAAG2C,EAAM1C,EAAG0C,EAAMzC,GACvCiM,GAAK,EACLC,EAAwC,MAA/BmB,OAAO5K,EAAM3C,GAAGwN,QAAQ,GAAa,OAAS,OAElDF,EAAe3K,EAAMnC,IAAM8M,EAAe3K,EAAMlC,IAAM6M,EAAe3K,EAAMzB,IAChFT,GAAIgN,EAAAA,EAAAA,IAAoB9K,EAAMlC,GAC9BS,GAAIuM,EAAAA,EAAAA,IAAoB9K,EAAMzB,GAC9BgL,GAAM/K,EAAAA,EAAAA,IAASwB,EAAMnC,EAAGC,EAAGS,GAC3BiL,GAAK,EACLC,EAAS,OAEJkB,EAAe3K,EAAMnC,IAAM8M,EAAe3K,EAAMlC,IAAM6M,EAAe3K,EAAMjC,KAChFD,GAAIgN,EAAAA,EAAAA,IAAoB9K,EAAMlC,GAC9BC,GAAI+M,EAAAA,EAAAA,IAAoB9K,EAAMjC,GAC9BwL,GAAMlL,EAAAA,EAAAA,IAAS2B,EAAMnC,EAAGC,EAAGC,GAC3ByL,GAAK,EACLC,EAAS,OAETsB,OAAOC,UAAUC,eAAeC,KAAKlL,EAAO,OAC5CT,EAAIS,EAAMT,IAGlBA,GAAI4L,EAAAA,EAAAA,IAAW5L,GACR,CACHiK,GAAIA,EACJC,OAAQzJ,EAAMyJ,QAAUA,EACxBpM,EAAGM,KAAKC,IAAI,IAAKD,KAAKD,IAAI6L,EAAIlM,EAAG,IACjCC,EAAGK,KAAKC,IAAI,IAAKD,KAAKD,IAAI6L,EAAIjM,EAAG,IACjCC,EAAGI,KAAKC,IAAI,IAAKD,KAAKD,IAAI6L,EAAIhM,EAAG,IACjCgC,EAAGA,EAEV,CAED,IAII6L,EAAW,MAAMC,OAFJ,uBAEuB,SAASA,OAJ/B,gBAImD,KAIjEC,EAAoB,cAAcD,OAAOD,EAAU,cAAcC,OAAOD,EAAU,cAAcC,OAAOD,EAAU,aACjHG,EAAoB,cAAcF,OAAOD,EAAU,cAAcC,OAAOD,EAAU,cAAcC,OAAOD,EAAU,cAAcC,OAAOD,EAAU,aAChJrB,EAAW,CACXqB,SAAU,IAAII,OAAOJ,GACrB7B,IAAK,IAAIiC,OAAO,MAAQF,GACxBrB,KAAM,IAAIuB,OAAO,OAASD,GAC1BrB,IAAK,IAAIsB,OAAO,MAAQF,GACxBnB,KAAM,IAAIqB,OAAO,OAASD,GAC1BnB,IAAK,IAAIoB,OAAO,MAAQF,GACxBjB,KAAM,IAAImB,OAAO,OAASD,GAC1Bd,KAAM,uDACNF,KAAM,uDACNC,KAAM,uEACNF,KAAM,wEA2FH,SAASK,EAAe3K,GAC3B,OAAOyL,QAAQ1B,EAASqB,SAASpB,KAAKY,OAAO5K,IAChD,sHCjLG0L,EAA2B,WAC3B,SAASA,EAAU1L,EAAO2L,GAGtB,IAAIC,EAEJ,QAJc,IAAV5L,IAAoBA,EAAQ,SACnB,IAAT2L,IAAmBA,EAAO,CAAC,GAG3B3L,aAAiB0L,EAEjB,OAAO1L,EAEU,kBAAVA,IACPA,GAAQD,EAAAA,EAAAA,IAAoBC,IAEhC6L,KAAKC,cAAgB9L,EACrB,IAAIuJ,GAAMD,EAAAA,EAAAA,IAAWtJ,GACrB6L,KAAKC,cAAgB9L,EACrB6L,KAAKxO,EAAIkM,EAAIlM,EACbwO,KAAKvO,EAAIiM,EAAIjM,EACbuO,KAAKtO,EAAIgM,EAAIhM,EACbsO,KAAKtM,EAAIgK,EAAIhK,EACbsM,KAAKE,OAASpO,KAAKsB,MAAM,IAAM4M,KAAKtM,GAAK,IACzCsM,KAAKpC,OAAgC,QAAtBmC,EAAKD,EAAKlC,cAA2B,IAAPmC,EAAgBA,EAAKrC,EAAIE,OACtEoC,KAAKG,aAAeL,EAAKK,aAKrBH,KAAKxO,EAAI,IACTwO,KAAKxO,EAAIM,KAAKsB,MAAM4M,KAAKxO,IAEzBwO,KAAKvO,EAAI,IACTuO,KAAKvO,EAAIK,KAAKsB,MAAM4M,KAAKvO,IAEzBuO,KAAKtO,EAAI,IACTsO,KAAKtO,EAAII,KAAKsB,MAAM4M,KAAKtO,IAE7BsO,KAAKI,QAAU1C,EAAIC,EACtB,CAybD,OAxbAkC,EAAUV,UAAUkB,OAAS,WACzB,OAAOL,KAAKM,gBAAkB,GACjC,EACDT,EAAUV,UAAUoB,QAAU,WAC1B,OAAQP,KAAKK,QAChB,EAIDR,EAAUV,UAAUmB,cAAgB,WAEhC,IAAI5C,EAAMsC,KAAKQ,QACf,OAAgB,IAAR9C,EAAIlM,EAAkB,IAARkM,EAAIjM,EAAkB,IAARiM,EAAIhM,GAAW,GACtD,EAIDmO,EAAUV,UAAUsB,aAAe,WAE/B,IAAI/C,EAAMsC,KAAKQ,QAIXE,EAAQhD,EAAIlM,EAAI,IAChBmP,EAAQjD,EAAIjM,EAAI,IAChBmP,EAAQlD,EAAIhM,EAAI,IAsBpB,MAAO,OArBHgP,GAAS,OACLA,EAAQ,MAIR5O,KAAK+O,KAAKH,EAAQ,MAAS,MAAO,MAgBtB,OAdhBC,GAAS,OACLA,EAAQ,MAIR7O,KAAK+O,KAAKF,EAAQ,MAAS,MAAO,MAST,OAP7BC,GAAS,OACLA,EAAQ,MAIR9O,KAAK+O,KAAKD,EAAQ,MAAS,MAAO,KAG7C,EAIDf,EAAUV,UAAU2B,SAAW,WAC3B,OAAOd,KAAKtM,CACf,EAMDmM,EAAUV,UAAU4B,SAAW,SAAUC,GAGrC,OAFAhB,KAAKtM,GAAI4L,EAAAA,EAAAA,IAAW0B,GACpBhB,KAAKE,OAASpO,KAAKsB,MAAM,IAAM4M,KAAKtM,GAAK,IAClCsM,IACV,EAIDH,EAAUV,UAAU8B,MAAQ,WACxB,IAAI1C,GAAM9L,EAAAA,EAAAA,IAASuN,KAAKxO,EAAGwO,KAAKvO,EAAGuO,KAAKtO,GACxC,MAAO,CAAEM,EAAW,IAARuM,EAAIvM,EAASC,EAAGsM,EAAItM,EAAGS,EAAG6L,EAAI7L,EAAGgB,EAAGsM,KAAKtM,EACxD,EAKDmM,EAAUV,UAAU+B,YAAc,WAC9B,IAAI3C,GAAM9L,EAAAA,EAAAA,IAASuN,KAAKxO,EAAGwO,KAAKvO,EAAGuO,KAAKtO,GACpCM,EAAIF,KAAKsB,MAAc,IAARmL,EAAIvM,GACnBC,EAAIH,KAAKsB,MAAc,IAARmL,EAAItM,GACnBS,EAAIZ,KAAKsB,MAAc,IAARmL,EAAI7L,GACvB,OAAkB,IAAXsN,KAAKtM,EAAU,OAAO8L,OAAOxN,EAAG,MAAMwN,OAAOvN,EAAG,OAAOuN,OAAO9M,EAAG,MAAQ,QAAQ8M,OAAOxN,EAAG,MAAMwN,OAAOvN,EAAG,OAAOuN,OAAO9M,EAAG,OAAO8M,OAAOQ,KAAKE,OAAQ,IACjK,EAIDL,EAAUV,UAAUgC,MAAQ,WACxB,IAAI9C,GAAMzM,EAAAA,EAAAA,IAASoO,KAAKxO,EAAGwO,KAAKvO,EAAGuO,KAAKtO,GACxC,MAAO,CAAEM,EAAW,IAARqM,EAAIrM,EAASC,EAAGoM,EAAIpM,EAAGC,EAAGmM,EAAInM,EAAGwB,EAAGsM,KAAKtM,EACxD,EAKDmM,EAAUV,UAAUiC,YAAc,WAC9B,IAAI/C,GAAMzM,EAAAA,EAAAA,IAASoO,KAAKxO,EAAGwO,KAAKvO,EAAGuO,KAAKtO,GACpCM,EAAIF,KAAKsB,MAAc,IAARiL,EAAIrM,GACnBC,EAAIH,KAAKsB,MAAc,IAARiL,EAAIpM,GACnBC,EAAIJ,KAAKsB,MAAc,IAARiL,EAAInM,GACvB,OAAkB,IAAX8N,KAAKtM,EAAU,OAAO8L,OAAOxN,EAAG,MAAMwN,OAAOvN,EAAG,OAAOuN,OAAOtN,EAAG,MAAQ,QAAQsN,OAAOxN,EAAG,MAAMwN,OAAOvN,EAAG,OAAOuN,OAAOtN,EAAG,OAAOsN,OAAOQ,KAAKE,OAAQ,IACjK,EAKDL,EAAUV,UAAUkC,MAAQ,SAAUpO,GAElC,YADmB,IAAfA,IAAyBA,GAAa,IACnCD,EAAAA,EAAAA,IAASgN,KAAKxO,EAAGwO,KAAKvO,EAAGuO,KAAKtO,EAAGuB,EAC3C,EAKD4M,EAAUV,UAAUmC,YAAc,SAAUrO,GAExC,YADmB,IAAfA,IAAyBA,GAAa,GACnC,IAAM+M,KAAKqB,MAAMpO,EAC3B,EAKD4M,EAAUV,UAAUoC,OAAS,SAAU5N,GAEnC,YADmB,IAAfA,IAAyBA,GAAa,IACnCF,EAAAA,EAAAA,GAAUuM,KAAKxO,EAAGwO,KAAKvO,EAAGuO,KAAKtO,EAAGsO,KAAKtM,EAAGC,EACpD,EAKDkM,EAAUV,UAAUqC,aAAe,SAAU7N,GAEzC,YADmB,IAAfA,IAAyBA,GAAa,GACnC,IAAMqM,KAAKuB,OAAO5N,EAC5B,EAIDkM,EAAUV,UAAUqB,MAAQ,WACxB,MAAO,CACHhP,EAAGM,KAAKsB,MAAM4M,KAAKxO,GACnBC,EAAGK,KAAKsB,MAAM4M,KAAKvO,GACnBC,EAAGI,KAAKsB,MAAM4M,KAAKtO,GACnBgC,EAAGsM,KAAKtM,EAEf,EAKDmM,EAAUV,UAAUsC,YAAc,WAC9B,IAAIjQ,EAAIM,KAAKsB,MAAM4M,KAAKxO,GACpBC,EAAIK,KAAKsB,MAAM4M,KAAKvO,GACpBC,EAAII,KAAKsB,MAAM4M,KAAKtO,GACxB,OAAkB,IAAXsO,KAAKtM,EAAU,OAAO8L,OAAOhO,EAAG,MAAMgO,OAAO/N,EAAG,MAAM+N,OAAO9N,EAAG,KAAO,QAAQ8N,OAAOhO,EAAG,MAAMgO,OAAO/N,EAAG,MAAM+N,OAAO9N,EAAG,MAAM8N,OAAOQ,KAAKE,OAAQ,IAC7J,EAIDL,EAAUV,UAAUuC,gBAAkB,WAClC,IAAIC,EAAM,SAAUC,GAAK,MAAO,GAAGpC,OAAO1N,KAAKsB,MAAwB,KAAlBzB,EAAAA,EAAAA,IAAQiQ,EAAG,MAAa,IAAO,EACpF,MAAO,CACHpQ,EAAGmQ,EAAI3B,KAAKxO,GACZC,EAAGkQ,EAAI3B,KAAKvO,GACZC,EAAGiQ,EAAI3B,KAAKtO,GACZgC,EAAGsM,KAAKtM,EAEf,EAIDmM,EAAUV,UAAU0C,sBAAwB,WACxC,IAAIC,EAAM,SAAUF,GAAK,OAAO9P,KAAKsB,MAAwB,KAAlBzB,EAAAA,EAAAA,IAAQiQ,EAAG,KAAc,EACpE,OAAkB,IAAX5B,KAAKtM,EACN,OAAO8L,OAAOsC,EAAI9B,KAAKxO,GAAI,OAAOgO,OAAOsC,EAAI9B,KAAKvO,GAAI,OAAO+N,OAAOsC,EAAI9B,KAAKtO,GAAI,MACjF,QAAQ8N,OAAOsC,EAAI9B,KAAKxO,GAAI,OAAOgO,OAAOsC,EAAI9B,KAAKvO,GAAI,OAAO+N,OAAOsC,EAAI9B,KAAKtO,GAAI,OAAO8N,OAAOQ,KAAKE,OAAQ,IACtH,EAIDL,EAAUV,UAAU4C,OAAS,WACzB,GAAe,IAAX/B,KAAKtM,EACL,MAAO,cAEX,GAAIsM,KAAKtM,EAAI,EACT,OAAO,EAGX,IADA,IAAIR,EAAM,KAAMF,EAAAA,EAAAA,IAASgN,KAAKxO,EAAGwO,KAAKvO,EAAGuO,KAAKtO,GAAG,GACxCsQ,EAAK,EAAGjC,EAAKb,OAAO+C,QAAQ7N,EAAAA,GAAQ4N,EAAKjC,EAAGhC,OAAQiE,IAAM,CAC/D,IAAIE,EAAKnC,EAAGiC,GAAKG,EAAMD,EAAG,GAC1B,GAAIhP,IADkCgP,EAAG,GAErC,OAAOC,CAEd,CACD,OAAO,CACV,EACDtC,EAAUV,UAAU9L,SAAW,SAAUuK,GACrC,IAAIwE,EAAYxC,QAAQhC,GACxBA,EAAoB,OAAXA,QAA8B,IAAXA,EAAoBA,EAASoC,KAAKpC,OAC9D,IAAIyE,GAAkB,EAClBC,EAAWtC,KAAKtM,EAAI,GAAKsM,KAAKtM,GAAK,EAEvC,OADwB0O,IAAaE,IAAa1E,EAAOtK,WAAW,QAAqB,SAAXsK,GAS/D,QAAXA,IACAyE,EAAkBrC,KAAKyB,eAEZ,SAAX7D,IACAyE,EAAkBrC,KAAK6B,yBAEZ,QAAXjE,GAA+B,SAAXA,IACpByE,EAAkBrC,KAAKsB,eAEZ,SAAX1D,IACAyE,EAAkBrC,KAAKsB,aAAY,IAExB,SAAX1D,IACAyE,EAAkBrC,KAAKwB,cAAa,IAEzB,SAAX5D,IACAyE,EAAkBrC,KAAKwB,gBAEZ,SAAX5D,IACAyE,EAAkBrC,KAAK+B,UAEZ,QAAXnE,IACAyE,EAAkBrC,KAAKoB,eAEZ,QAAXxD,IACAyE,EAAkBrC,KAAKkB,eAEpBmB,GAAmBrC,KAAKsB,eAhCZ,SAAX1D,GAAgC,IAAXoC,KAAKtM,EACnBsM,KAAK+B,SAET/B,KAAKyB,aA8BnB,EACD5B,EAAUV,UAAUoD,SAAW,WAC3B,OAAQzQ,KAAKsB,MAAM4M,KAAKxO,IAAM,KAAOM,KAAKsB,MAAM4M,KAAKvO,IAAM,GAAKK,KAAKsB,MAAM4M,KAAKtO,EACnF,EACDmO,EAAUV,UAAUqD,MAAQ,WACxB,OAAO,IAAI3C,EAAUG,KAAK3M,WAC7B,EAKDwM,EAAUV,UAAUsD,QAAU,SAAUC,QACrB,IAAXA,IAAqBA,EAAS,IAClC,IAAIrE,EAAM2B,KAAKmB,QAGf,OAFA9C,EAAInM,GAAKwQ,EAAS,IAClBrE,EAAInM,GAAIyQ,EAAAA,EAAAA,IAAQtE,EAAInM,GACb,IAAI2N,EAAUxB,EACxB,EAKDwB,EAAUV,UAAUyD,SAAW,SAAUF,QACtB,IAAXA,IAAqBA,EAAS,IAClC,IAAIhF,EAAMsC,KAAKQ,QAIf,OAHA9C,EAAIlM,EAAIM,KAAKD,IAAI,EAAGC,KAAKC,IAAI,IAAK2L,EAAIlM,EAAIM,KAAKsB,OAAcsP,EAAS,IAAjB,OACrDhF,EAAIjM,EAAIK,KAAKD,IAAI,EAAGC,KAAKC,IAAI,IAAK2L,EAAIjM,EAAIK,KAAKsB,OAAcsP,EAAS,IAAjB,OACrDhF,EAAIhM,EAAII,KAAKD,IAAI,EAAGC,KAAKC,IAAI,IAAK2L,EAAIhM,EAAII,KAAKsB,OAAcsP,EAAS,IAAjB,OAC9C,IAAI7C,EAAUnC,EACxB,EAMDmC,EAAUV,UAAU0D,OAAS,SAAUH,QACpB,IAAXA,IAAqBA,EAAS,IAClC,IAAIrE,EAAM2B,KAAKmB,QAGf,OAFA9C,EAAInM,GAAKwQ,EAAS,IAClBrE,EAAInM,GAAIyQ,EAAAA,EAAAA,IAAQtE,EAAInM,GACb,IAAI2N,EAAUxB,EACxB,EAMDwB,EAAUV,UAAU2D,KAAO,SAAUJ,GAEjC,YADe,IAAXA,IAAqBA,EAAS,IAC3B1C,KAAK+C,IAAI,QAASL,EAC5B,EAMD7C,EAAUV,UAAU6D,MAAQ,SAAUN,GAElC,YADe,IAAXA,IAAqBA,EAAS,IAC3B1C,KAAK+C,IAAI,QAASL,EAC5B,EAMD7C,EAAUV,UAAU8D,WAAa,SAAUP,QACxB,IAAXA,IAAqBA,EAAS,IAClC,IAAIrE,EAAM2B,KAAKmB,QAGf,OAFA9C,EAAIpM,GAAKyQ,EAAS,IAClBrE,EAAIpM,GAAI0Q,EAAAA,EAAAA,IAAQtE,EAAIpM,GACb,IAAI4N,EAAUxB,EACxB,EAKDwB,EAAUV,UAAU+D,SAAW,SAAUR,QACtB,IAAXA,IAAqBA,EAAS,IAClC,IAAIrE,EAAM2B,KAAKmB,QAGf,OAFA9C,EAAIpM,GAAKyQ,EAAS,IAClBrE,EAAIpM,GAAI0Q,EAAAA,EAAAA,IAAQtE,EAAIpM,GACb,IAAI4N,EAAUxB,EACxB,EAKDwB,EAAUV,UAAUgE,UAAY,WAC5B,OAAOnD,KAAKiD,WAAW,IAC1B,EAKDpD,EAAUV,UAAUiE,KAAO,SAAUV,GACjC,IAAIrE,EAAM2B,KAAKmB,QACXkC,GAAOhF,EAAIrM,EAAI0Q,GAAU,IAE7B,OADArE,EAAIrM,EAAIqR,EAAM,EAAI,IAAMA,EAAMA,EACvB,IAAIxD,EAAUxB,EACxB,EAKDwB,EAAUV,UAAU4D,IAAM,SAAU5O,EAAOuO,QACxB,IAAXA,IAAqBA,EAAS,IAClC,IAAIY,EAAOtD,KAAKQ,QACZ+C,EAAO,IAAI1D,EAAU1L,GAAOqM,QAC5BnO,EAAIqQ,EAAS,IAOjB,OAAO,IAAI7C,EANA,CACPrO,GAAI+R,EAAK/R,EAAI8R,EAAK9R,GAAKa,EAAIiR,EAAK9R,EAChCC,GAAI8R,EAAK9R,EAAI6R,EAAK7R,GAAKY,EAAIiR,EAAK7R,EAChCC,GAAI6R,EAAK7R,EAAI4R,EAAK5R,GAAKW,EAAIiR,EAAK5R,EAChCgC,GAAI6P,EAAK7P,EAAI4P,EAAK5P,GAAKrB,EAAIiR,EAAK5P,GAGvC,EACDmM,EAAUV,UAAUqE,UAAY,SAAUC,EAASC,QAC/B,IAAZD,IAAsBA,EAAU,QACrB,IAAXC,IAAqBA,EAAS,IAClC,IAAIrF,EAAM2B,KAAKmB,QACXwC,EAAO,IAAMD,EACbE,EAAM,CAAC5D,MACX,IAAK3B,EAAIrM,GAAKqM,EAAIrM,GAAM2R,EAAOF,GAAY,GAAK,KAAO,MAAOA,GAC1DpF,EAAIrM,GAAKqM,EAAIrM,EAAI2R,GAAQ,IACzBC,EAAIC,KAAK,IAAIhE,EAAUxB,IAE3B,OAAOuF,CACV,EAID/D,EAAUV,UAAU2E,WAAa,WAC7B,IAAIzF,EAAM2B,KAAKmB,QAEf,OADA9C,EAAIrM,GAAKqM,EAAIrM,EAAI,KAAO,IACjB,IAAI6N,EAAUxB,EACxB,EACDwB,EAAUV,UAAU4E,cAAgB,SAAUN,QAC1B,IAAZA,IAAsBA,EAAU,GAOpC,IANA,IAAIlF,EAAMyB,KAAKiB,QACXjP,EAAIuM,EAAIvM,EACRC,EAAIsM,EAAItM,EACRS,EAAI6L,EAAI7L,EACRsR,EAAM,GACNC,EAAe,EAAIR,EAChBA,KACHO,EAAIH,KAAK,IAAIhE,EAAU,CAAE7N,EAAGA,EAAGC,EAAGA,EAAGS,EAAGA,KACxCA,GAAKA,EAAIuR,GAAgB,EAE7B,OAAOD,CACV,EACDnE,EAAUV,UAAU+E,gBAAkB,WAClC,IAAI7F,EAAM2B,KAAKmB,QACXnP,EAAIqM,EAAIrM,EACZ,MAAO,CACHgO,KACA,IAAIH,EAAU,CAAE7N,GAAIA,EAAI,IAAM,IAAKC,EAAGoM,EAAIpM,EAAGC,EAAGmM,EAAInM,IACpD,IAAI2N,EAAU,CAAE7N,GAAIA,EAAI,KAAO,IAAKC,EAAGoM,EAAIpM,EAAGC,EAAGmM,EAAInM,IAE5D,EAID2N,EAAUV,UAAUgF,aAAe,SAAUC,GACzC,IAAIC,EAAKrE,KAAKQ,QACV8D,EAAK,IAAIzE,EAAUuE,GAAY5D,QACnC,OAAO,IAAIX,EAAU,CACjBrO,EAAG8S,EAAG9S,GAAK6S,EAAG7S,EAAI8S,EAAG9S,GAAK6S,EAAG3Q,EAC7BjC,EAAG6S,EAAG7S,GAAK4S,EAAG5S,EAAI6S,EAAG7S,GAAK4S,EAAG3Q,EAC7BhC,EAAG4S,EAAG5S,GAAK2S,EAAG3S,EAAI4S,EAAG5S,GAAK2S,EAAG3Q,GAEpC,EAIDmM,EAAUV,UAAUoF,MAAQ,WACxB,OAAOvE,KAAKwE,OAAO,EACtB,EAID3E,EAAUV,UAAUsF,OAAS,WACzB,OAAOzE,KAAKwE,OAAO,EACtB,EAKD3E,EAAUV,UAAUqF,OAAS,SAAUE,GAKnC,IAJA,IAAIrG,EAAM2B,KAAKmB,QACXnP,EAAIqM,EAAIrM,EACR2S,EAAS,CAAC3E,MACV4E,EAAY,IAAMF,EACb9R,EAAI,EAAGA,EAAI8R,EAAG9R,IACnB+R,EAAOd,KAAK,IAAIhE,EAAU,CAAE7N,GAAIA,EAAIY,EAAIgS,GAAa,IAAK3S,EAAGoM,EAAIpM,EAAGC,EAAGmM,EAAInM,KAE/E,OAAOyS,CACV,EAID9E,EAAUV,UAAU0F,OAAS,SAAU1Q,GACnC,OAAO6L,KAAKyB,gBAAkB,IAAI5B,EAAU1L,GAAOsN,aACtD,EACM5B,CACV,CA/d8B,uCCAxB,SAASlO,EAAQ+S,EAAG7S,IAwCpB,SAAwB6S,GAC3B,MAAoB,kBAANA,IAAsC,IAApBA,EAAEI,QAAQ,MAAiC,IAAlBjR,WAAW6Q,EACvE,EAzCOK,CAAeL,KACfA,EAAI,QAER,IAAIM,EA2CD,SAAsBN,GACzB,MAAoB,kBAANA,IAAsC,IAApBA,EAAEI,QAAQ,IAC7C,CA7CmBG,CAAaP,GAO7B,OANAA,EAAY,MAAR7S,EAAc6S,EAAI5S,KAAKC,IAAIF,EAAKC,KAAKD,IAAI,EAAGgC,WAAW6Q,KAEvDM,IACAN,EAAIzQ,SAAS8K,OAAO2F,EAAI7S,GAAM,IAAM,KAGpCC,KAAKoT,IAAIR,EAAI7S,GAAO,KACb,EAOP6S,EAJQ,MAAR7S,GAIK6S,EAAI,EAAKA,EAAI7S,EAAOA,EAAM6S,EAAI7S,GAAOgC,WAAWkL,OAAOlN,IAKvD6S,EAAI7S,EAAOgC,WAAWkL,OAAOlN,GAGzC,CAKM,SAAS8Q,EAAQ3O,GACpB,OAAOlC,KAAKC,IAAI,EAAGD,KAAKD,IAAI,EAAGmC,GAClC,CAoBM,SAASsL,EAAW5L,GAKvB,OAJAA,EAAIG,WAAWH,IACXyR,MAAMzR,IAAMA,EAAI,GAAKA,EAAI,KACzBA,EAAI,GAEDA,CACV,CAKM,SAASuL,EAAoByF,GAChC,OAAIA,GAAK,EACE,GAAGlF,OAAmB,IAAZ4F,OAAOV,GAAU,KAE/BA,CACV,CAKM,SAASvR,EAAKkS,GACjB,OAAoB,IAAbA,EAAEtH,OAAe,IAAMsH,EAAItG,OAAOsG,EAC5C,uJCjFD,OAOC,WACA,aAEA,IAAIC,EAAS,CAAC,EAAElG,eAGhB,SAASmG,IAGR,IAFA,IAAIC,EAAU,GAEL5S,EAAI,EAAGA,EAAI6S,UAAU1H,OAAQnL,IAAK,CAC1C,IAAI8S,EAAMD,UAAU7S,GACpB,GAAK8S,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BH,EAAQ3B,KAAK6B,QACP,GAAIE,MAAMC,QAAQH,IACxB,GAAIA,EAAI3H,OAAQ,CACf,IAAI+H,EAAQP,EAAWQ,MAAM,KAAML,GAC/BI,GACHN,EAAQ3B,KAAKiC,EAEd,OACK,GAAgB,WAAZH,EAAsB,CAChC,GAAID,EAAIrS,WAAa6L,OAAOC,UAAU9L,WAAaqS,EAAIrS,SAASA,WAAW2S,SAAS,iBAAkB,CACrGR,EAAQ3B,KAAK6B,EAAIrS,YACjB,QACA,CAED,IAAK,IAAI8O,KAAOuD,EACXJ,EAAOjG,KAAKqG,EAAKvD,IAAQuD,EAAIvD,IAChCqD,EAAQ3B,KAAK1B,EAGf,CAxBiB,CAyBlB,CAED,OAAOqD,EAAQhS,KAAK,IACpB,CAEoCyS,EAAOC,SAC3CX,EAAWY,QAAUZ,EACrBU,EAAOC,QAAUX,QAGX,kBACL,OAAOA,CADF,UAAe,OAAf,YA9CP,wCCgCD,SAASa,EAAUC,GACjB,MAAqB,iBAAPA,GAAyB,MAANA,GAA8B,IAAhBA,EAAGC,QAGpD,UAASC,EACPC,EACAC,GAEA,QAAIA,GAA2C,WAAbD,IAId,YAAbA,GAAuC,SAAbA,CA0BnC,UAASE,EAAaL,EAAaI,GACjC,GAAIJ,EAAGM,aAAeN,EAAGO,cAAgBP,EAAGQ,YAAcR,EAAGS,YAAa,CACxE,IAAMC,EAAQC,iBAAiBX,EAAI,MACnC,OACEE,EAAYQ,EAAME,UAAWR,IAC7BF,EAAYQ,EAAMG,UAAWT,IAhBnC,SAAyBJ,GACvB,IAAMc,EAbR,SAAyBd,GACvB,IAAKA,EAAGe,gBAAkBf,EAAGe,cAAcC,YACzC,OAAO,KAGT,IACE,OAAOhB,EAAGe,cAAcC,YAAYC,YAEpC,CADA,MAAOC,GACP,OAAO,IAAP,CAKYC,CAbhB,CAagCnB,GAC9B,QAAKc,IAKHA,EAAMR,aAAeN,EAAGO,cAAgBO,EAAMN,YAAcR,EAAGS,YAU7DW,CAjBN,CAiBsBpB,EAIpB,QAAO,CAWT,UAASqB,EACPC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAqBA,OACGF,EAAmBL,GAClBM,EAAiBL,GAClBI,EAAmBL,GAAsBM,EAAiBL,EAAAA,EA6C1DI,GAAoBL,GAAsBO,GAAeL,GACzDI,GAAkBL,GAAoBM,GAAeL,EAE/CG,EAAmBL,EAAqBG,EA4C9CG,EAAiBL,GAAoBM,EAAcL,GACnDG,EAAmBL,GAAsBO,EAAcL,EAEjDI,EAAiBL,EAAmBG,EAAAA,CAAAA,CAAAA,SAAAA,EAM/BI,EAAiBC,GAE/B,IAAMC,EAAsBC,OAK1BC,EAKEH,EALFG,WACAC,EAIEJ,EAJFI,MACAC,EAGEL,EAHFK,OACAC,EAEEN,EAFFM,SACAjC,EACE2B,EADF3B,2BAKIkC,EACgB,mBAAbD,EAA0BA,EAAW,SAACE,GAAAA,OAAcA,IAASF,CAAAA,EAEtE,IAAKtC,EAAU+B,GACb,MAAM,IAAIU,UAAU,kBAStB,IALA,IAAMC,EAAmBC,SAASD,kBAAoBC,SAASC,gBAGzDC,EAAoB,GACtBC,EAAyBf,EACtB/B,EAAU8C,IAAWP,EAAcO,IAAS,CAKjD,IAHAA,EAASA,EAAOC,iBAGDL,EAAkB,CAC/BG,EAAOpF,KAAKqF,GACZ,KAKU,OAAVA,GACAA,IAAWH,SAASK,MACpB1C,EAAawC,KACZxC,EAAaqC,SAASC,kBAMX,MAAVE,GAAkBxC,EAAawC,EAAQzC,IACzCwC,EAAOpF,KAAKqF,EA8ChB,KArCA,IAAMG,EAAgBhB,EAAmBiB,eACrCjB,EAAmBiB,eAAeC,MAClCC,WACEC,EAAiBpB,EAAmBiB,eACtCjB,EAAmBiB,eAAeI,OAClCC,YAGEC,EAAYtB,OAAOuB,SAAWC,YAC9BC,EAAYzB,OAAO0B,SAAWC,YAAAA,EAShC9B,EAAO+B,wBANDC,EAAAA,EAART,OACOU,EAAAA,EAAPb,MACKc,EAAAA,EAALC,IACOC,EAAAA,EAAPC,MACQC,EAAAA,EAARC,OACMC,EAAAA,EAANC,KAIEC,EACQ,UAAVrC,GAA+B,YAAVA,EACjB6B,EACU,QAAV7B,EACAiC,EACAJ,EAAYF,EAAe,EAC7BW,EACS,WAAXrC,EACIkC,EAAaP,EAAc,EAChB,QAAX3B,EACA8B,EACAI,EAGAI,EAAqC,GAElCC,EAAQ,EAAGA,EAAQ/B,EAAOlL,OAAQiN,IAAS,CAClD,IAAM7D,EAAQ8B,EAAO+B,GAAAA,EAWjB7D,EAAM+C,wBANRR,EAAAA,EAAAA,OACAH,EAAAA,EAAAA,MACAe,EAAAA,EAAAA,IACAE,EAAAA,EAAAA,MACAE,EAAAA,EAAAA,OACAE,EAAAA,EAAAA,KAKF,GACiB,cAAfrC,GACA8B,GAAa,GACbM,GAAc,GACdF,GAAgBhB,GAChBc,GAAelB,GACfgB,GAAaC,GACbG,GAAgBC,GAChBC,GAAcC,GACdL,GAAeC,EAGf,OAAOO,EAGT,IAAME,EAAajE,iBAAiBG,GAC9B+D,EAAajX,SAASgX,EAAWE,gBAA2B,IAC5DC,EAAYnX,SAASgX,EAAWI,eAA0B,IAC1DC,EAAcrX,SAASgX,EAAWM,iBAA4B,IAC9DC,EAAevX,SAASgX,EAAWQ,kBAA6B,IAElEC,EAAsB,EACtBC,EAAuB,EAIrBC,EACJ,gBAAiBzE,EACZA,EAAsB0E,YACtB1E,EAAsBN,YACvBqE,EACAI,EACA,EACAQ,EACJ,iBAAkB3E,EACbA,EAAsB4E,aACtB5E,EAAsBR,aACvByE,EACAI,EACA,EAEN,GAAI1C,IAAqB3B,EAIrBuE,EADY,UAAVlD,EACYqC,EACK,QAAVrC,EACKqC,EAAcpB,EACT,YAAVjB,EACKd,EACZqC,EACAA,EAAYN,EACZA,EACA2B,EACAI,EACAzB,EAAYc,EACZd,EAAYc,EAAcV,EAC1BA,GAIYU,EAAcpB,EAAiB,EAI7CkC,EADa,UAAXlD,EACaqC,EACK,WAAXrC,EACMqC,EAAezB,EAAgB,EAC1B,QAAXZ,EACMqC,EAAezB,EAGf3B,EACbkC,EACAA,EAAYP,EACZA,EACA6B,EACAI,EACA1B,EAAYkB,EACZlB,EAAYkB,EAAeV,EAC3BA,GAMJsB,EAAc5Z,KAAKD,IAAI,EAAG6Z,EAAc3B,GACxC4B,EAAe7Z,KAAKD,IAAI,EAAG8Z,EAAe/B,OACrC,CAIH8B,EADY,UAAVlD,EACYqC,EAAcP,EAAMc,EACf,QAAV5C,EACKqC,EAAcH,EAASc,EAAeM,EACjC,YAAVtD,EACKd,EACZ4C,EACAI,EACAhB,EACA0B,EACAI,EAAeM,EACfjB,EACAA,EAAcV,EACdA,GAIYU,GAAeP,EAAMZ,EAAS,GAAKoC,EAAkB,EAInEH,EADa,UAAXlD,EACaqC,EAAeF,EAAOM,EACjB,WAAXzC,EACMqC,GAAgBF,EAAOrB,EAAQ,GAAKqC,EAAiB,EAChD,QAAXnD,EACMqC,EAAeN,EAAQc,EAAcM,EAGrClE,EACbkD,EACAJ,EACAjB,EACA2B,EACAI,EAAcM,EACdd,EACAA,EAAeV,EACfA,GAvCC,IA2CG4B,EAA0B7E,EAA1B6E,WAAYC,EAAc9E,EAAd8E,UAkBpBpB,GAAeoB,GAhBfP,EAAc5Z,KAAKD,IACjB,EACAC,KAAKC,IACHka,EAAYP,EACZvE,EAAMP,aAAe8C,EAASoC,KAalChB,GAAgBkB,GAVhBL,EAAe7Z,KAAKD,IAClB,EACAC,KAAKC,IACHia,EAAaL,EACbxE,EAAML,YAAcyC,EAAQqC,IASlCb,CAAAA,EAAalH,KAAK,CAAEwC,GAAIc,EAAOmD,IAAKoB,EAAad,KAAMe,GAGzD,QAAOZ,CAAAA","sources":["../node_modules/@ctrl/tinycolor/dist/module/conversion.js","../node_modules/@ctrl/tinycolor/dist/module/css-color-names.js","../node_modules/@ctrl/tinycolor/dist/module/format-input.js","../node_modules/@ctrl/tinycolor/dist/module/index.js","../node_modules/@ctrl/tinycolor/dist/module/util.js","../node_modules/classnames/index.js","../node_modules/compute-scroll-into-view/src/index.ts"],"sourcesContent":["import { bound01, pad2 } from './util';\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n/**\n * Handle bounds / percentage checking to conform to CSS color spec\n * <http://www.w3.org/TR/css3-color/>\n * *Assumes:* r, g, b in [0, 255] or [0, 1]\n * *Returns:* { r, g, b } in [0, 255]\n */\nexport function rgbToRgb(r, g, b) {\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255,\n    };\n}\n/**\n * Converts an RGB color value to HSL.\n * *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n * *Returns:* { h, s, l } in [0,1]\n */\nexport function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var s = 0;\n    var l = (max + min) / 2;\n    if (max === min) {\n        s = 0;\n        h = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, l: l };\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * (6 * t);\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\n/**\n * Converts an HSL color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nexport function hslToRgb(h, s, l) {\n    var r;\n    var g;\n    var b;\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n    if (s === 0) {\n        // achromatic\n        g = l;\n        b = l;\n        r = l;\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n/**\n * Converts an RGB color value to HSV\n *\n * *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n * *Returns:* { h, s, v } in [0,1]\n */\nexport function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var v = max;\n    var d = max - min;\n    var s = max === 0 ? 0 : d / max;\n    if (max === min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n/**\n * Converts an HSV color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nexport function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n    var i = Math.floor(h);\n    var f = h - i;\n    var p = v * (1 - s);\n    var q = v * (1 - f * s);\n    var t = v * (1 - (1 - f) * s);\n    var mod = i % 6;\n    var r = [v, q, p, p, t, v][mod];\n    var g = [t, v, v, q, p, p][mod];\n    var b = [p, p, t, v, v, q][mod];\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n/**\n * Converts an RGB color to hex\n *\n * Assumes r, g, and b are contained in the set [0, 255]\n * Returns a 3 or 6 character hex\n */\nexport function rgbToHex(r, g, b, allow3Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    // Return a 3 character hex if possible\n    if (allow3Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n    return hex.join('');\n}\n/**\n * Converts an RGBA color plus alpha transparency to hex\n *\n * Assumes r, g, b are contained in the set [0, 255] and\n * a in [0, 1]. Returns a 4 or 8 character rgba hex\n */\n// eslint-disable-next-line max-params\nexport function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n        pad2(convertDecimalToHex(a)),\n    ];\n    // Return a 4 character hex if possible\n    if (allow4Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1)) &&\n        hex[3].startsWith(hex[3].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n    return hex.join('');\n}\n/**\n * Converts an RGBA color to an ARGB Hex8 string\n * Rarely used, but required for \"toFilter()\"\n */\nexport function rgbaToArgbHex(r, g, b, a) {\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    return hex.join('');\n}\n/** Converts a decimal to a hex value */\nexport function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n/** Converts a hex value to a decimal */\nexport function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n}\n/** Parse a base-16 hex value into a base-10 integer */\nexport function parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\nexport function numberInputToObject(color) {\n    return {\n        r: color >> 16,\n        g: (color & 0xff00) >> 8,\n        b: color & 0xff,\n    };\n}\n","// https://github.com/bahamas10/css-color-names/blob/master/css-color-names.json\n/**\n * @hidden\n */\nexport var names = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    goldenrod: '#daa520',\n    gold: '#ffd700',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavenderblush: '#fff0f5',\n    lavender: '#e6e6fa',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32',\n};\n","import { convertHexToDecimal, hslToRgb, hsvToRgb, parseIntFromHex, rgbToRgb } from './conversion';\nimport { names } from './css-color-names';\nimport { boundAlpha, convertToPercentage } from './util';\n/**\n * Given a string or object, convert that input to RGB\n *\n * Possible string inputs:\n * ```\n * \"red\"\n * \"#f00\" or \"f00\"\n * \"#ff0000\" or \"ff0000\"\n * \"#ff000000\" or \"ff000000\"\n * \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n * \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n * \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n * \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n * \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n * \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n * \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n * ```\n */\nexport function inputToRGB(color) {\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n    if (typeof color === 'string') {\n        color = stringInputToObject(color);\n    }\n    if (typeof color === 'object') {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === '%' ? 'prgb' : 'rgb';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = 'hsv';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = 'hsl';\n        }\n        if (Object.prototype.hasOwnProperty.call(color, 'a')) {\n            a = color.a;\n        }\n    }\n    a = boundAlpha(a);\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: Math.min(255, Math.max(rgb.r, 0)),\n        g: Math.min(255, Math.max(rgb.g, 0)),\n        b: Math.min(255, Math.max(rgb.b, 0)),\n        a: a,\n    };\n}\n// <http://www.w3.org/TR/css3-values/#integers>\nvar CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\n// <http://www.w3.org/TR/css3-values/#number-value>\nvar CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\n// Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\nvar CSS_UNIT = \"(?:\".concat(CSS_NUMBER, \")|(?:\").concat(CSS_INTEGER, \")\");\n// Actual matching.\n// Parentheses and commas are optional, but not required.\n// Whitespace can take the place of commas or opening paren\nvar PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\".concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")\\\\s*\\\\)?\");\nvar PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\".concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")\\\\s*\\\\)?\");\nvar matchers = {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp('rgb' + PERMISSIVE_MATCH3),\n    rgba: new RegExp('rgba' + PERMISSIVE_MATCH4),\n    hsl: new RegExp('hsl' + PERMISSIVE_MATCH3),\n    hsla: new RegExp('hsla' + PERMISSIVE_MATCH4),\n    hsv: new RegExp('hsv' + PERMISSIVE_MATCH3),\n    hsva: new RegExp('hsva' + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n};\n/**\n * Permissive string parsing.  Take in a number of formats, and output an object\n * based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n */\nexport function stringInputToObject(color) {\n    color = color.trim().toLowerCase();\n    if (color.length === 0) {\n        return false;\n    }\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color === 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: 'name' };\n    }\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match = matchers.rgb.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    match = matchers.rgba.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    match = matchers.hsl.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    match = matchers.hsla.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    match = matchers.hsv.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    match = matchers.hsva.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    match = matchers.hex8.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex6.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    match = matchers.hex4.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            a: convertHexToDecimal(match[4] + match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex3.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    return false;\n}\n/**\n * Check to see if it looks like a CSS unit\n * (see `matchers` above for definition).\n */\nexport function isValidCSSUnit(color) {\n    return Boolean(matchers.CSS_UNIT.exec(String(color)));\n}\n","import { numberInputToObject, rgbaToHex, rgbToHex, rgbToHsl, rgbToHsv } from './conversion';\nimport { names } from './css-color-names';\nimport { inputToRGB } from './format-input';\nimport { bound01, boundAlpha, clamp01 } from './util';\nvar TinyColor = /** @class */ (function () {\n    function TinyColor(color, opts) {\n        if (color === void 0) { color = ''; }\n        if (opts === void 0) { opts = {}; }\n        var _a;\n        // If input is already a tinycolor, return itself\n        if (color instanceof TinyColor) {\n            // eslint-disable-next-line no-constructor-return\n            return color;\n        }\n        if (typeof color === 'number') {\n            color = numberInputToObject(color);\n        }\n        this.originalInput = color;\n        var rgb = inputToRGB(color);\n        this.originalInput = color;\n        this.r = rgb.r;\n        this.g = rgb.g;\n        this.b = rgb.b;\n        this.a = rgb.a;\n        this.roundA = Math.round(100 * this.a) / 100;\n        this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;\n        this.gradientType = opts.gradientType;\n        // Don't let the range of [0,255] come back in [0,1].\n        // Potentially lose a little bit of precision here, but will fix issues where\n        // .5 gets interpreted as half of the total, instead of half of 1\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n        if (this.r < 1) {\n            this.r = Math.round(this.r);\n        }\n        if (this.g < 1) {\n            this.g = Math.round(this.g);\n        }\n        if (this.b < 1) {\n            this.b = Math.round(this.b);\n        }\n        this.isValid = rgb.ok;\n    }\n    TinyColor.prototype.isDark = function () {\n        return this.getBrightness() < 128;\n    };\n    TinyColor.prototype.isLight = function () {\n        return !this.isDark();\n    };\n    /**\n     * Returns the perceived brightness of the color, from 0-255.\n     */\n    TinyColor.prototype.getBrightness = function () {\n        // http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    };\n    /**\n     * Returns the perceived luminance of a color, from 0-1.\n     */\n    TinyColor.prototype.getLuminance = function () {\n        // http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var R;\n        var G;\n        var B;\n        var RsRGB = rgb.r / 255;\n        var GsRGB = rgb.g / 255;\n        var BsRGB = rgb.b / 255;\n        if (RsRGB <= 0.03928) {\n            R = RsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (GsRGB <= 0.03928) {\n            G = GsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (BsRGB <= 0.03928) {\n            B = BsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n        }\n        return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    };\n    /**\n     * Returns the alpha value of a color, from 0-1.\n     */\n    TinyColor.prototype.getAlpha = function () {\n        return this.a;\n    };\n    /**\n     * Sets the alpha value on the current color.\n     *\n     * @param alpha - The new alpha value. The accepted range is 0-1.\n     */\n    TinyColor.prototype.setAlpha = function (alpha) {\n        this.a = boundAlpha(alpha);\n        this.roundA = Math.round(100 * this.a) / 100;\n        return this;\n    };\n    /**\n     * Returns the object as a HSVA object.\n     */\n    TinyColor.prototype.toHsv = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };\n    };\n    /**\n     * Returns the hsva values interpolated into a string with the following format:\n     * \"hsva(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHsvString = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        var h = Math.round(hsv.h * 360);\n        var s = Math.round(hsv.s * 100);\n        var v = Math.round(hsv.v * 100);\n        return this.a === 1 ? \"hsv(\".concat(h, \", \").concat(s, \"%, \").concat(v, \"%)\") : \"hsva(\".concat(h, \", \").concat(s, \"%, \").concat(v, \"%, \").concat(this.roundA, \")\");\n    };\n    /**\n     * Returns the object as a HSLA object.\n     */\n    TinyColor.prototype.toHsl = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };\n    };\n    /**\n     * Returns the hsla values interpolated into a string with the following format:\n     * \"hsla(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHslString = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        var h = Math.round(hsl.h * 360);\n        var s = Math.round(hsl.s * 100);\n        var l = Math.round(hsl.l * 100);\n        return this.a === 1 ? \"hsl(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%)\") : \"hsla(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%, \").concat(this.roundA, \")\");\n    };\n    /**\n     * Returns the hex value of the color.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHex = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return rgbToHex(this.r, this.g, this.b, allow3Char);\n    };\n    /**\n     * Returns the hex value of the color -with a # appened.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHexString = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return '#' + this.toHex(allow3Char);\n    };\n    /**\n     * Returns the hex 8 value of the color.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8 = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);\n    };\n    /**\n     * Returns the hex 8 value of the color -with a # appened.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8String = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return '#' + this.toHex8(allow4Char);\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toRgb = function () {\n        return {\n            r: Math.round(this.r),\n            g: Math.round(this.g),\n            b: Math.round(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA values interpolated into a string with the following format:\n     * \"RGBA(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toRgbString = function () {\n        var r = Math.round(this.r);\n        var g = Math.round(this.g);\n        var b = Math.round(this.b);\n        return this.a === 1 ? \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\") : \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(this.roundA, \")\");\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toPercentageRgb = function () {\n        var fmt = function (x) { return \"\".concat(Math.round(bound01(x, 255) * 100), \"%\"); };\n        return {\n            r: fmt(this.r),\n            g: fmt(this.g),\n            b: fmt(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA relative values interpolated into a string\n     */\n    TinyColor.prototype.toPercentageRgbString = function () {\n        var rnd = function (x) { return Math.round(bound01(x, 255) * 100); };\n        return this.a === 1\n            ? \"rgb(\".concat(rnd(this.r), \"%, \").concat(rnd(this.g), \"%, \").concat(rnd(this.b), \"%)\")\n            : \"rgba(\".concat(rnd(this.r), \"%, \").concat(rnd(this.g), \"%, \").concat(rnd(this.b), \"%, \").concat(this.roundA, \")\");\n    };\n    /**\n     * The 'real' name of the color -if there is one.\n     */\n    TinyColor.prototype.toName = function () {\n        if (this.a === 0) {\n            return 'transparent';\n        }\n        if (this.a < 1) {\n            return false;\n        }\n        var hex = '#' + rgbToHex(this.r, this.g, this.b, false);\n        for (var _i = 0, _a = Object.entries(names); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            if (hex === value) {\n                return key;\n            }\n        }\n        return false;\n    };\n    TinyColor.prototype.toString = function (format) {\n        var formatSet = Boolean(format);\n        format = format !== null && format !== void 0 ? format : this.format;\n        var formattedString = false;\n        var hasAlpha = this.a < 1 && this.a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format.startsWith('hex') || format === 'name');\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === 'name' && this.a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === 'rgb') {\n            formattedString = this.toRgbString();\n        }\n        if (format === 'prgb') {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === 'hex' || format === 'hex6') {\n            formattedString = this.toHexString();\n        }\n        if (format === 'hex3') {\n            formattedString = this.toHexString(true);\n        }\n        if (format === 'hex4') {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === 'hex8') {\n            formattedString = this.toHex8String();\n        }\n        if (format === 'name') {\n            formattedString = this.toName();\n        }\n        if (format === 'hsl') {\n            formattedString = this.toHslString();\n        }\n        if (format === 'hsv') {\n            formattedString = this.toHsvString();\n        }\n        return formattedString || this.toHexString();\n    };\n    TinyColor.prototype.toNumber = function () {\n        return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);\n    };\n    TinyColor.prototype.clone = function () {\n        return new TinyColor(this.toString());\n    };\n    /**\n     * Lighten the color a given amount. Providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.lighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l += amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Brighten the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.brighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var rgb = this.toRgb();\n        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n        return new TinyColor(rgb);\n    };\n    /**\n     * Darken the color a given amount, from 0 to 100.\n     * Providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.darken = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l -= amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the color with pure white, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.tint = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('white', amount);\n    };\n    /**\n     * Mix the color with pure black, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.shade = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('black', amount);\n    };\n    /**\n     * Desaturate the color a given amount, from 0 to 100.\n     * Providing 100 will is the same as calling greyscale\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.desaturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s -= amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Saturate the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.saturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s += amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Completely desaturates a color into greyscale.\n     * Same as calling `desaturate(100)`\n     */\n    TinyColor.prototype.greyscale = function () {\n        return this.desaturate(100);\n    };\n    /**\n     * Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n     * Values outside of this range will be wrapped into this range.\n     */\n    TinyColor.prototype.spin = function (amount) {\n        var hsl = this.toHsl();\n        var hue = (hsl.h + amount) % 360;\n        hsl.h = hue < 0 ? 360 + hue : hue;\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the current color a given amount with another color, from 0 to 100.\n     * 0 means no mixing (return current color).\n     */\n    TinyColor.prototype.mix = function (color, amount) {\n        if (amount === void 0) { amount = 50; }\n        var rgb1 = this.toRgb();\n        var rgb2 = new TinyColor(color).toRgb();\n        var p = amount / 100;\n        var rgba = {\n            r: (rgb2.r - rgb1.r) * p + rgb1.r,\n            g: (rgb2.g - rgb1.g) * p + rgb1.g,\n            b: (rgb2.b - rgb1.b) * p + rgb1.b,\n            a: (rgb2.a - rgb1.a) * p + rgb1.a,\n        };\n        return new TinyColor(rgba);\n    };\n    TinyColor.prototype.analogous = function (results, slices) {\n        if (results === void 0) { results = 6; }\n        if (slices === void 0) { slices = 30; }\n        var hsl = this.toHsl();\n        var part = 360 / slices;\n        var ret = [this];\n        for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results;) {\n            hsl.h = (hsl.h + part) % 360;\n            ret.push(new TinyColor(hsl));\n        }\n        return ret;\n    };\n    /**\n     * taken from https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js\n     */\n    TinyColor.prototype.complement = function () {\n        var hsl = this.toHsl();\n        hsl.h = (hsl.h + 180) % 360;\n        return new TinyColor(hsl);\n    };\n    TinyColor.prototype.monochromatic = function (results) {\n        if (results === void 0) { results = 6; }\n        var hsv = this.toHsv();\n        var h = hsv.h;\n        var s = hsv.s;\n        var v = hsv.v;\n        var res = [];\n        var modification = 1 / results;\n        while (results--) {\n            res.push(new TinyColor({ h: h, s: s, v: v }));\n            v = (v + modification) % 1;\n        }\n        return res;\n    };\n    TinyColor.prototype.splitcomplement = function () {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        return [\n            this,\n            new TinyColor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n            new TinyColor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\n        ];\n    };\n    /**\n     * Compute how the color would appear on a background\n     */\n    TinyColor.prototype.onBackground = function (background) {\n        var fg = this.toRgb();\n        var bg = new TinyColor(background).toRgb();\n        return new TinyColor({\n            r: bg.r + (fg.r - bg.r) * fg.a,\n            g: bg.g + (fg.g - bg.g) * fg.a,\n            b: bg.b + (fg.b - bg.b) * fg.a,\n        });\n    };\n    /**\n     * Alias for `polyad(3)`\n     */\n    TinyColor.prototype.triad = function () {\n        return this.polyad(3);\n    };\n    /**\n     * Alias for `polyad(4)`\n     */\n    TinyColor.prototype.tetrad = function () {\n        return this.polyad(4);\n    };\n    /**\n     * Get polyad colors, like (for 1, 2, 3, 4, 5, 6, 7, 8, etc...)\n     * monad, dyad, triad, tetrad, pentad, hexad, heptad, octad, etc...\n     */\n    TinyColor.prototype.polyad = function (n) {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        var result = [this];\n        var increment = 360 / n;\n        for (var i = 1; i < n; i++) {\n            result.push(new TinyColor({ h: (h + i * increment) % 360, s: hsl.s, l: hsl.l }));\n        }\n        return result;\n    };\n    /**\n     * compare color vs current color\n     */\n    TinyColor.prototype.equals = function (color) {\n        return this.toRgbString() === new TinyColor(color).toRgbString();\n    };\n    return TinyColor;\n}());\nexport { TinyColor };\n// kept for backwards compatability with v1\nexport function tinycolor(color, opts) {\n    if (color === void 0) { color = ''; }\n    if (opts === void 0) { opts = {}; }\n    return new TinyColor(color, opts);\n}\n","/**\n * Take input from [0, n] and return it as [0, 1]\n * @hidden\n */\nexport function bound01(n, max) {\n    if (isOnePointZero(n)) {\n        n = '100%';\n    }\n    var isPercent = isPercentage(n);\n    n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));\n    // Automatically convert percentage into number\n    if (isPercent) {\n        n = parseInt(String(n * max), 10) / 100;\n    }\n    // Handle floating point rounding errors\n    if (Math.abs(n - max) < 0.000001) {\n        return 1;\n    }\n    // Convert into [0, 1] range if it isn't already\n    if (max === 360) {\n        // If n is a hue given in degrees,\n        // wrap around out-of-range values into [0, 360] range\n        // then convert into [0, 1].\n        n = (n < 0 ? (n % max) + max : n % max) / parseFloat(String(max));\n    }\n    else {\n        // If n not a hue given in degrees\n        // Convert into [0, 1] range if it isn't already.\n        n = (n % max) / parseFloat(String(max));\n    }\n    return n;\n}\n/**\n * Force a number between 0 and 1\n * @hidden\n */\nexport function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n}\n/**\n * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n * @hidden\n */\nexport function isOnePointZero(n) {\n    return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;\n}\n/**\n * Check to see if string passed in is a percentage\n * @hidden\n */\nexport function isPercentage(n) {\n    return typeof n === 'string' && n.indexOf('%') !== -1;\n}\n/**\n * Return a valid alpha value [0,1] with all invalid values being set to 1\n * @hidden\n */\nexport function boundAlpha(a) {\n    a = parseFloat(a);\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n    return a;\n}\n/**\n * Replace a decimal with it's percentage value\n * @hidden\n */\nexport function convertToPercentage(n) {\n    if (n <= 1) {\n        return \"\".concat(Number(n) * 100, \"%\");\n    }\n    return n;\n}\n/**\n * Force a hex value to have 2 characters\n * @hidden\n */\nexport function pad2(c) {\n    return c.length === 1 ? '0' + c : String(c);\n}\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// Compute what scrolling needs to be done on required scrolling boxes for target to be in view\n\n// The type names here are named after the spec to make it easier to find more information around what they mean:\n// To reduce churn and reduce things that need be maintained things from the official TS DOM library is used here\n// https://drafts.csswg.org/cssom-view/\n\n// For a definition on what is \"block flow direction\" exactly, check this: https://drafts.csswg.org/css-writing-modes-4/#block-flow-direction\n\n// add support for visualViewport object currently implemented in chrome\ninterface visualViewport {\n  height: number\n  width: number\n}\n\ntype ScrollLogicalPosition = 'start' | 'center' | 'end' | 'nearest'\n// This new option is tracked in this PR, which is the most likely candidate at the time: https://github.com/w3c/csswg-drafts/pull/1805\ntype ScrollMode = 'always' | 'if-needed'\n// New option that skips auto-scrolling all nodes with overflow: hidden set\n// See FF implementation: https://hg.mozilla.org/integration/fx-team/rev/c48c3ec05012#l7.18\ntype SkipOverflowHiddenElements = boolean\n\ninterface Options {\n  block?: ScrollLogicalPosition\n  inline?: ScrollLogicalPosition\n  scrollMode?: ScrollMode\n  boundary?: CustomScrollBoundary\n  skipOverflowHiddenElements?: SkipOverflowHiddenElements\n}\n\n// Custom behavior, not in any spec\ntype CustomScrollBoundaryCallback = (parent: Element) => boolean\ntype CustomScrollBoundary = Element | CustomScrollBoundaryCallback | null\ninterface CustomScrollAction {\n  el: Element\n  top: number\n  left: number\n}\n\n// @TODO better shadowdom test, 11 = document fragment\nfunction isElement(el: any): el is Element {\n  return typeof el === 'object' && el != null && el.nodeType === 1\n}\n\nfunction canOverflow(\n  overflow: string | null,\n  skipOverflowHiddenElements?: boolean\n) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip'\n}\n\nfunction getFrameElement(el: Element) {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null\n  }\n\n  try {\n    return el.ownerDocument.defaultView.frameElement\n  } catch (e) {\n    return null\n  }\n}\n\nfunction isHiddenByFrame(el: Element): boolean {\n  const frame = getFrameElement(el)\n  if (!frame) {\n    return false\n  }\n\n  return (\n    frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth\n  )\n}\n\nfunction isScrollable(el: Element, skipOverflowHiddenElements?: boolean) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    const style = getComputedStyle(el, null)\n    return (\n      canOverflow(style.overflowY, skipOverflowHiddenElements) ||\n      canOverflow(style.overflowX, skipOverflowHiddenElements) ||\n      isHiddenByFrame(el)\n    )\n  }\n\n  return false\n}\n/**\n * Find out which edge to align against when logical scroll position is \"nearest\"\n * Interesting fact: \"nearest\" works similarily to \"if-needed\", if the element is fully visible it will not scroll it\n *\n * Legends:\n * ┌────────┐ ┏ ━ ━ ━ ┓\n * │ target │   frame\n * └────────┘ ┗ ━ ━ ━ ┛\n */\nfunction alignNearest(\n  scrollingEdgeStart: number,\n  scrollingEdgeEnd: number,\n  scrollingSize: number,\n  scrollingBorderStart: number,\n  scrollingBorderEnd: number,\n  elementEdgeStart: number,\n  elementEdgeEnd: number,\n  elementSize: number\n) {\n  /**\n   * If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓\n   *          │  │\n   *        ┃ │  │ ┃        do nothing\n   *          │  │\n   *        ┗━│━━│━┛\n   *          └──┘\n   *\n   *  If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D\n   *\n   *    ┏ ━ ━ ━ ━ ┓\n   *   ┌───────────┐\n   *   │┃         ┃│        do nothing\n   *   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart < scrollingEdgeStart &&\n      elementEdgeEnd > scrollingEdgeEnd) ||\n    (elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd)\n  ) {\n    return 0\n  }\n\n  /**\n   * If element edge A is outside scrolling box edge A and element height is less than scrolling box height\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓         ┏━┌━━┐━┓\n   *          └──┘             │  │\n   *  from  ┃      ┃     to  ┃ └──┘ ┃\n   *\n   *        ┗━ ━━ ━┛         ┗━ ━━ ━┛\n   *\n   * If element edge B is outside scrolling box edge B and element height is greater than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━┌━━┐━┓\n   *                           │  │\n   *  from  ┃ ┌──┐ ┃     to  ┃ │  │ ┃\n   *          │  │             │  │\n   *        ┗━│━━│━┛         ┗━│━━│━┛\n   *          │  │             └──┘\n   *          │  │\n   *          └──┘\n   *\n   * If element edge C is outside scrolling box edge C and element width is less than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───┐                 ┌───┐\n   *  │ ┃ │       ┃         ┃   │     ┃\n   *  └───┘                 └───┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is greater than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *        ┌───────────┐   ┌───────────┐\n   *    ┃   │     ┃     │   ┃         ┃ │\n   *        └───────────┘   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize) ||\n    (elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize)\n  ) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart\n  }\n\n  /**\n   * If element edge B is outside scrolling box edge B and element height is less than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━ ━━ ━┓\n   *\n   *  from  ┃      ┃     to  ┃ ┌──┐ ┃\n   *          ┌──┐             │  │\n   *        ┗━│━━│━┛         ┗━└━━┘━┛\n   *          └──┘\n   *\n   * If element edge A is outside scrolling box edge A and element height is greater than scrolling box height\n   *\n   *          ┌──┐\n   *          │  │\n   *          │  │             ┌──┐\n   *        ┏━│━━│━┓         ┏━│━━│━┓\n   *          │  │             │  │\n   *  from  ┃ └──┘ ┃     to  ┃ │  │ ┃\n   *                           │  │\n   *        ┗━ ━━ ━┛         ┗━└━━┘━┛\n   *\n   * If element edge C is outside scrolling box edge C and element width is greater than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───────────┐           ┌───────────┐\n   *  │     ┃     │   ┃       │ ┃         ┃\n   *  └───────────┘           └───────────┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is less than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *                ┌───┐             ┌───┐\n   *        ┃       │ ┃ │       ┃     │   ┃\n   *                └───┘             └───┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   */\n  if (\n    (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize) ||\n    (elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize)\n  ) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd\n  }\n\n  return 0\n}\n\nexport default (target: Element, options: Options): CustomScrollAction[] => {\n  //TODO: remove this hack when microbundle will support typescript >= 4.0\n  const windowWithViewport = (window as unknown) as Window & {\n    visualViewport: visualViewport\n  }\n\n  const {\n    scrollMode,\n    block,\n    inline,\n    boundary,\n    skipOverflowHiddenElements,\n  } = options\n  // Allow using a callback to check the boundary\n  // The default behavior is to check if the current target matches the boundary element or not\n  // If undefined it'll check that target is never undefined (can happen as we recurse up the tree)\n  const checkBoundary =\n    typeof boundary === 'function' ? boundary : (node: any) => node !== boundary\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target')\n  }\n\n  // Used to handle the top most element that can be scrolled\n  const scrollingElement = document.scrollingElement || document.documentElement\n\n  // Collect all the scrolling boxes, as defined in the spec: https://drafts.csswg.org/cssom-view/#scrolling-box\n  const frames: Element[] = []\n  let cursor: Element | null = target\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    // Move cursor to parent\n    cursor = cursor.parentElement\n\n    // Stop when we reach the viewport\n    if (cursor === scrollingElement) {\n      frames.push(cursor)\n      break\n    }\n\n    // Skip document.body if it's not the scrollingElement and documentElement isn't independently scrollable\n    if (\n      cursor != null &&\n      cursor === document.body &&\n      isScrollable(cursor) &&\n      !isScrollable(document.documentElement)\n    ) {\n      continue\n    }\n\n    // Now we check if the element is scrollable, this code only runs if the loop haven't already hit the viewport or a custom boundary\n    if (cursor != null && isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor)\n    }\n  }\n\n  // Support pinch-zooming properly, making sure elements scroll into the visual viewport\n  // Browsers that don't support visualViewport will report the layout viewport dimensions on document.documentElement.clientWidth/Height\n  // and viewport dimensions on window.innerWidth/Height\n  // https://www.quirksmode.org/mobile/viewports2.html\n  // https://bokand.github.io/viewport/index.html\n  const viewportWidth = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.width\n    : innerWidth\n  const viewportHeight = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.height\n    : innerHeight\n\n  // Newer browsers supports scroll[X|Y], page[X|Y]Offset is\n  const viewportX = window.scrollX || pageXOffset\n  const viewportY = window.scrollY || pageYOffset\n\n  const {\n    height: targetHeight,\n    width: targetWidth,\n    top: targetTop,\n    right: targetRight,\n    bottom: targetBottom,\n    left: targetLeft,\n  } = target.getBoundingClientRect()\n\n  // These values mutate as we loop through and generate scroll coordinates\n  let targetBlock: number =\n    block === 'start' || block === 'nearest'\n      ? targetTop\n      : block === 'end'\n      ? targetBottom\n      : targetTop + targetHeight / 2 // block === 'center\n  let targetInline: number =\n    inline === 'center'\n      ? targetLeft + targetWidth / 2\n      : inline === 'end'\n      ? targetRight\n      : targetLeft // inline === 'start || inline === 'nearest\n\n  // Collect new scroll positions\n  const computations: CustomScrollAction[] = []\n  // In chrome there's no longer a difference between caching the `frames.length` to a var or not, so we don't in this case (size > speed anyways)\n  for (let index = 0; index < frames.length; index++) {\n    const frame = frames[index]\n\n    // @TODO add a shouldScroll hook here that allows userland code to take control\n\n    const {\n      height,\n      width,\n      top,\n      right,\n      bottom,\n      left,\n    } = frame.getBoundingClientRect()\n\n    // If the element is already visible we can end it here\n    // @TODO targetBlock and targetInline should be taken into account to be compliant with https://github.com/w3c/csswg-drafts/pull/1805/files#diff-3c17f0e43c20f8ecf89419d49e7ef5e0R1333\n    if (\n      scrollMode === 'if-needed' &&\n      targetTop >= 0 &&\n      targetLeft >= 0 &&\n      targetBottom <= viewportHeight &&\n      targetRight <= viewportWidth &&\n      targetTop >= top &&\n      targetBottom <= bottom &&\n      targetLeft >= left &&\n      targetRight <= right\n    ) {\n      // Break the loop and return the computations for things that are not fully visible\n      return computations\n    }\n\n    const frameStyle = getComputedStyle(frame)\n    const borderLeft = parseInt(frameStyle.borderLeftWidth as string, 10)\n    const borderTop = parseInt(frameStyle.borderTopWidth as string, 10)\n    const borderRight = parseInt(frameStyle.borderRightWidth as string, 10)\n    const borderBottom = parseInt(frameStyle.borderBottomWidth as string, 10)\n\n    let blockScroll: number = 0\n    let inlineScroll: number = 0\n\n    // The property existance checks for offfset[Width|Height] is because only HTMLElement objects have them, but any Element might pass by here\n    // @TODO find out if the \"as HTMLElement\" overrides can be dropped\n    const scrollbarWidth =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth -\n          (frame as HTMLElement).clientWidth -\n          borderLeft -\n          borderRight\n        : 0\n    const scrollbarHeight =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight -\n          (frame as HTMLElement).clientHeight -\n          borderTop -\n          borderBottom\n        : 0\n\n    if (scrollingElement === frame) {\n      // Handle viewport logic (document.documentElement or document.body)\n\n      if (block === 'start') {\n        blockScroll = targetBlock\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          viewportY,\n          viewportY + viewportHeight,\n          viewportHeight,\n          borderTop,\n          borderBottom,\n          viewportY + targetBlock,\n          viewportY + targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - viewportHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          viewportX,\n          viewportX + viewportWidth,\n          viewportWidth,\n          borderLeft,\n          borderRight,\n          viewportX + targetInline,\n          viewportX + targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      // Apply scroll position offsets and ensure they are within bounds\n      // @TODO add more test cases to cover this 100%\n      blockScroll = Math.max(0, blockScroll + viewportY)\n      inlineScroll = Math.max(0, inlineScroll + viewportX)\n    } else {\n      // Handle each scrolling frame that might exist between the target and the viewport\n\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          top,\n          bottom,\n          height,\n          borderTop,\n          borderBottom + scrollbarHeight,\n          targetBlock,\n          targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          left,\n          right,\n          width,\n          borderLeft,\n          borderRight + scrollbarWidth,\n          targetInline,\n          targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      const { scrollLeft, scrollTop } = frame\n      // Ensure scroll coordinates are not out of bounds while applying scroll offsets\n      blockScroll = Math.max(\n        0,\n        Math.min(\n          scrollTop + blockScroll,\n          frame.scrollHeight - height + scrollbarHeight\n        )\n      )\n      inlineScroll = Math.max(\n        0,\n        Math.min(\n          scrollLeft + inlineScroll,\n          frame.scrollWidth - width + scrollbarWidth\n        )\n      )\n\n      // Cache the offset so that parent frames can scroll this into view correctly\n      targetBlock += scrollTop - blockScroll\n      targetInline += scrollLeft - inlineScroll\n    }\n\n    computations.push({ el: frame, top: blockScroll, left: inlineScroll })\n  }\n\n  return computations\n}\n"],"names":["rgbToRgb","r","g","b","bound01","rgbToHsl","max","Math","min","h","s","l","d","hue2rgb","p","q","t","hslToRgb","rgbToHsv","v","hsvToRgb","i","floor","f","mod","rgbToHex","allow3Char","hex","pad2","round","toString","startsWith","charAt","join","rgbaToHex","a","allow4Char","convertDecimalToHex","parseFloat","convertHexToDecimal","parseIntFromHex","val","parseInt","numberInputToObject","color","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","goldenrod","gold","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavenderblush","lavender","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","inputToRGB","rgb","ok","format","trim","toLowerCase","length","named","match","matchers","exec","rgba","hsl","hsla","hsv","hsva","hex8","hex6","hex4","hex3","stringInputToObject","isValidCSSUnit","String","substr","convertToPercentage","Object","prototype","hasOwnProperty","call","boundAlpha","CSS_UNIT","concat","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","Boolean","TinyColor","opts","_a","this","originalInput","roundA","gradientType","isValid","isDark","getBrightness","isLight","toRgb","getLuminance","RsRGB","GsRGB","BsRGB","pow","getAlpha","setAlpha","alpha","toHsv","toHsvString","toHsl","toHslString","toHex","toHexString","toHex8","toHex8String","toRgbString","toPercentageRgb","fmt","x","toPercentageRgbString","rnd","toName","_i","entries","_b","key","formatSet","formattedString","hasAlpha","toNumber","clone","lighten","amount","clamp01","brighten","darken","tint","mix","shade","desaturate","saturate","greyscale","spin","hue","rgb1","rgb2","analogous","results","slices","part","ret","push","complement","monochromatic","res","modification","splitcomplement","onBackground","background","fg","bg","triad","polyad","tetrad","n","result","increment","equals","indexOf","isOnePointZero","isPercent","isPercentage","abs","isNaN","Number","c","hasOwn","classNames","classes","arguments","arg","argType","Array","isArray","inner","apply","includes","module","exports","default","isElement","el","nodeType","canOverflow","overflow","skipOverflowHiddenElements","isScrollable","clientHeight","scrollHeight","clientWidth","scrollWidth","style","getComputedStyle","overflowY","overflowX","frame","ownerDocument","defaultView","frameElement","e","getFrameElement","isHiddenByFrame","alignNearest","scrollingEdgeStart","scrollingEdgeEnd","scrollingSize","scrollingBorderStart","scrollingBorderEnd","elementEdgeStart","elementEdgeEnd","elementSize","target","options","windowWithViewport","window","scrollMode","block","inline","boundary","checkBoundary","node","TypeError","scrollingElement","document","documentElement","frames","cursor","parentElement","body","viewportWidth","visualViewport","width","innerWidth","viewportHeight","height","innerHeight","viewportX","scrollX","pageXOffset","viewportY","scrollY","pageYOffset","getBoundingClientRect","targetHeight","targetWidth","targetTop","top","targetRight","right","targetBottom","bottom","targetLeft","left","targetBlock","targetInline","computations","index","frameStyle","borderLeft","borderLeftWidth","borderTop","borderTopWidth","borderRight","borderRightWidth","borderBottom","borderBottomWidth","blockScroll","inlineScroll","scrollbarWidth","offsetWidth","scrollbarHeight","offsetHeight","scrollLeft","scrollTop"],"sourceRoot":""}