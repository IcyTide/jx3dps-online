{"version":3,"file":"static/js/5726.55e5d2ae.js","mappings":"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","sources":["../node_modules/@antv/g2/src/chart/controller/index.ts","../node_modules/@antv/g2/src/chart/controller/legend.ts","../node_modules/@antv/g2/src/chart/controller/scrollbar.ts","../node_modules/@antv/g2/src/chart/controller/slider.ts","../node_modules/@antv/g2/src/chart/controller/tooltip.ts","../node_modules/@antv/g2/src/chart/event.ts"],"sourcesContent":["import { ControllerCtor } from './base';\n\nconst LOAD_COMPONENT_CONTROLLERS: Record<string, ControllerCtor> = {};\n\n/**\n * 全局注册组件。\n * @param name 组件名称\n * @param plugin 注册的组件类\n * @returns void\n */\nexport function registerComponentController(name: string, plugin: ControllerCtor) {\n  LOAD_COMPONENT_CONTROLLERS[name] = plugin;\n}\n\n/**\n * 删除全局组件。\n * @param name 组件名\n * @returns void\n */\nexport function unregisterComponentController(name: string) {\n  delete LOAD_COMPONENT_CONTROLLERS[name];\n}\n\n/**\n * 获取以注册的组件名。\n * @returns string[] 返回已注册的组件名称\n */\nexport function getComponentControllerNames(): string[] {\n  return Object.keys(LOAD_COMPONENT_CONTROLLERS);\n}\n\n/**\n * 根据组件名获取组件类。\n * @param name 组件名\n * @returns 返回组件类\n */\nexport function getComponentController(name: string): ControllerCtor {\n  return LOAD_COMPONENT_CONTROLLERS[name];\n}\n","import { deepMix, each, find, get, head, isBoolean, last } from '@antv/util';\nimport { COMPONENT_MAX_VIEW_PERCENTAGE, COMPONENT_TYPE, DIRECTION, LAYER } from '../../constant';\nimport { Attribute, CategoryLegend, ContinuousLegend, GroupComponent, IGroup, Scale, Tick } from '../../dependents';\nimport { ComponentOption, LegendCfg, LegendOption, LooseObject, AllLegendsOptions, Padding } from '../../interface';\nimport { DEFAULT_ANIMATE_CFG } from '../../animate';\nimport Geometry from '../../geometry/base';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { omit } from '../../util/helper';\nimport { getCustomLegendItems, getLegendItems, getLegendLayout, getLegendThemeCfg } from '../../util/legend';\nimport { getName } from '../../util/scale';\nimport View from '../view';\nimport { Controller } from './base';\n\ntype DoEach = (geometry: Geometry, attr: Attribute, scale: Scale) => void;\n\n/**\n * 从配置中获取单个字段的 legend 配置\n * @param legends\n * @param field\n * @returns the option of one legend field\n */\nfunction getLegendOption(legends: AllLegendsOptions, field: string) {\n  if (isBoolean(legends)) {\n    return legends === false ? false : {};\n  }\n\n  return get(legends, [field], legends);\n}\n\nfunction getDirection(legendOption: any): DIRECTION {\n  return get(legendOption, 'position', DIRECTION.BOTTOM);\n}\n\n/**\n * @ignore\n * legend Controller\n */\nexport default class Legend extends Controller<AllLegendsOptions> {\n  /** the draw group of axis */\n  private container: IGroup;\n  /** 用于多个 legend 布局的 bbox */\n  private layoutBBox: BBox;\n\n  constructor(view: View) {\n    super(view);\n\n    this.container = this.view.getLayer(LAYER.FORE).addGroup();\n  }\n\n  public get name(): string {\n    return 'legend';\n  }\n\n  public init() {}\n\n  /**\n   * render the legend component by legend options\n   */\n  public render() {\n    // 和 update 逻辑保持一致\n    this.update();\n  }\n\n  /**\n   * layout legend\n   * 计算出 legend 的 direction 位置 x, y\n   */\n  public layout() {\n    this.layoutBBox = this.view.viewBBox;\n\n    each(this.components, (co: ComponentOption) => {\n      const { component, direction } = co;\n      const layout = getLegendLayout(direction);\n      const maxWidthRatio = component.get('maxWidthRatio');\n      const maxHeightRatio = component.get('maxHeightRatio');\n\n      const maxSize = this.getCategoryLegendSizeCfg(layout, maxWidthRatio, maxHeightRatio);\n\n      const maxWidth = component.get('maxWidth');\n      const maxHeight = component.get('maxHeight');\n\n      // 先更新 maxSize，更新 layoutBBox，以便计算正确的 x y\n      component.update({\n        maxWidth: Math.min(maxSize.maxWidth, maxWidth || 0),\n        maxHeight: Math.min(maxSize.maxHeight, maxHeight || 0),\n      });\n\n      const padding = component.get('padding') as Padding;\n\n      const bboxObject = component.getLayoutBBox(); // 这里只需要他的 width、height 信息做位置调整\n      const bbox = new BBox(bboxObject.x, bboxObject.y, bboxObject.width, bboxObject.height).expand(padding);\n\n      const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, direction);\n      const [x2, y2] = directionToPosition(this.layoutBBox, bbox, direction);\n\n      let x = 0;\n      let y = 0;\n\n      // 因为 legend x y 要和 coordinateBBox 对齐，所以要做一个简单的判断\n      if (direction.startsWith('top') || direction.startsWith('bottom')) {\n        x = x1;\n        y = y2;\n      } else {\n        x = x2;\n        y = y1;\n      }\n\n      // 更新位置\n      component.setLocation({ x: x + padding[3], y: y + padding[0] });\n\n      this.layoutBBox = this.layoutBBox.cut(bbox, direction);\n    });\n  }\n\n  /**\n   * legend 的更新逻辑\n   */\n  public update() {\n    this.option = this.view.getOptions().legends;\n\n    // 已经处理过的 legend\n    const updated: Record<string, true> = {};\n\n    const eachLegend = (geometry: Geometry, attr: Attribute, scale: Scale) => {\n      const id = this.getId(scale.field);\n\n      const existCo = this.getComponentById(id);\n\n      // 存在则 update\n      if (existCo) {\n        let cfg;\n        const legendOption = getLegendOption(this.option, scale.field);\n\n        // if the legend option is not false, means legend should be created.\n        if (legendOption !== false) {\n          if (get(legendOption, 'custom')) {\n            cfg = this.getCategoryCfg(geometry, attr, scale, legendOption, true);\n          } else {\n            if (scale.isLinear) {\n              // linear field, create continuous legend\n              cfg = this.getContinuousCfg(geometry, attr, scale, legendOption);\n            } else if (scale.isCategory) {\n              // category field, create category legend\n              cfg = this.getCategoryCfg(geometry, attr, scale, legendOption);\n            }\n          }\n        }\n\n        // 如果 cfg 为空，则不在 updated 标记，那么会在后面逻辑中删除\n        if (cfg) {\n          // omit 掉一些属性，比如 container 等\n          omit(cfg, ['container']);\n\n          existCo.direction = getDirection(legendOption);\n\n          existCo.component.update(cfg);\n\n          // 标记为新的\n          updated[id] = true;\n        }\n      } else {\n        // 不存在则 create\n        const legend = this.createFieldLegend(geometry, attr, scale);\n\n        if (legend) {\n          (legend.component as GroupComponent).init();\n          this.components.push(legend);\n\n          // 标记为新的\n          updated[id] = true;\n        }\n      }\n    };\n\n    // 全局自定义图例\n    if (get(this.option, 'custom')) {\n      const id = 'global-custom';\n      const existCo = this.getComponentById(id);\n      if (existCo) {\n        const customCfg = this.getCategoryCfg(undefined, undefined, undefined, this.option, true);\n        omit(customCfg, ['container']);\n        existCo.component.update(customCfg);\n\n        updated[id] = true;\n      } else {\n        const component = this.createCustomLegend(undefined, undefined, undefined, this.option as LegendCfg);\n        if (component) {\n          component.init();\n\n          const layer = LAYER.FORE;\n          const direction = getDirection(this.option);\n\n          this.components.push({\n            id,\n            component,\n            layer,\n            direction,\n            type: COMPONENT_TYPE.LEGEND,\n            extra: undefined,\n          });\n\n          // 标记为更新\n          updated[id] = true;\n        }\n      }\n    } else {\n      // 遍历处理每一个创建逻辑\n      this.loopLegends(eachLegend);\n    }\n\n    // 处理完成之后，销毁删除的\n    // 不在处理中的\n    const components = [];\n    each(this.getComponents(), (co: ComponentOption) => {\n      if (updated[co.id]) {\n        components.push(co);\n      } else {\n        co.component.destroy();\n      }\n    });\n\n    // 更新当前已有的 components\n    this.components = components;\n  }\n\n  public clear() {\n    super.clear();\n    this.container.clear();\n  }\n\n  public destroy() {\n    super.destroy();\n\n    this.container.remove(true);\n  }\n\n  /**\n   * 递归获取所有的 Geometry\n   */\n  private getGeometries(view: View): Geometry[] {\n    let geometries = view.geometries;\n\n    each(view.views, (v: View) => {\n      geometries = geometries.concat(this.getGeometries(v));\n    });\n\n    return geometries;\n  }\n\n  /**\n   * 遍历 Geometry，处理 legend 逻辑\n   * @param doEach 每个 loop 中的处理方法\n   */\n  private loopLegends(doEach: DoEach) {\n    const isRootView = this.view.getRootView() === this.view;\n    // 非根 view，不处理 legend\n    if (!isRootView) {\n      return;\n    }\n\n    // 递归 view 中所有的 Geometry，进行创建 legend\n    const geometries = this.getGeometries(this.view);\n\n    const looped: Record<string, true> = {}; // 防止一个字段创建两个 legend\n\n    each(geometries, (geometry: Geometry) => {\n      const attributes = geometry.getGroupAttributes();\n\n      each(attributes, (attr: Attribute) => {\n        const scale = attr.getScale(attr.type);\n        // 如果在视觉通道上映射常量值，如 size(2) shape('circle') 不创建 legend\n        if (!scale || scale.type === 'identity' || looped[scale.field]) {\n          return;\n        }\n\n        doEach(geometry, attr, scale);\n\n        looped[scale.field] = true;\n      });\n    });\n  }\n\n  /**\n   * 创建一个 legend\n   * @param geometry\n   * @param attr\n   * @param scale\n   */\n  private createFieldLegend(geometry: Geometry, attr: Attribute, scale: Scale): ComponentOption {\n    let component;\n\n    const legendOption = getLegendOption(this.option, scale.field);\n    const layer = LAYER.FORE;\n    const direction = getDirection(legendOption);\n\n    // if the legend option is not false, means legend should be created.\n    if (legendOption !== false) {\n      if (get(legendOption, 'custom')) {\n        component = this.createCustomLegend(geometry, attr, scale, legendOption);\n      } else {\n        if (scale.isLinear) {\n          // linear field, create continuous legend\n          component = this.createContinuousLegend(geometry, attr, scale, legendOption);\n        } else if (scale.isCategory) {\n          // category field, create category legend\n          component = this.createCategoryLegend(geometry, attr, scale, legendOption);\n        }\n      }\n    }\n\n    if (component) {\n      component.set('field', scale.field);\n\n      return {\n        id: this.getId(scale.field),\n        component,\n        layer,\n        direction,\n        type: COMPONENT_TYPE.LEGEND,\n        extra: { scale },\n      };\n    }\n  }\n\n  /**\n   * 自定义图例使用 category 图例去渲染\n   * @param geometry\n   * @param attr\n   * @param scale\n   * @param legendOption\n   */\n  private createCustomLegend(geometry: Geometry, attr: Attribute, scale: Scale, legendOption: LegendCfg) {\n    // 直接使用 分类图例渲染\n    const cfg = this.getCategoryCfg(geometry, attr, scale, legendOption, true);\n    return new CategoryLegend(cfg);\n  }\n\n  /**\n   * 创建连续图例\n   * @param geometry\n   * @param attr\n   * @param scale\n   * @param legendOption\n   */\n  private createContinuousLegend(geometry: Geometry, attr: Attribute, scale: Scale, legendOption: any) {\n    const cfg = this.getContinuousCfg(geometry, attr, scale, omit(legendOption, ['value']));\n    return new ContinuousLegend(cfg);\n  }\n\n  /**\n   * 创建分类图例\n   * @param geometry\n   * @param attr\n   * @param scale\n   * @param legendOption\n   */\n  private createCategoryLegend(geometry: Geometry, attr: Attribute, scale: Scale, legendOption: any) {\n    const cfg = this.getCategoryCfg(geometry, attr, scale, legendOption);\n    return new CategoryLegend(cfg);\n  }\n\n  /**\n   * 获得连续图例的配置\n   * @param geometry\n   * @param attr\n   * @param scale\n   * @param legendOption\n   */\n  private getContinuousCfg(geometry: Geometry, attr: Attribute, scale: Scale, legendOption: any) {\n    const ticks = scale.getTicks();\n\n    const containMin = find(ticks, (tick: Tick) => tick.value === 0);\n    const containMax = find(ticks, (tick: Tick) => tick.value === 1);\n    const items = ticks.map((tick: Tick) => {\n      const { value, tickValue } = tick;\n      const attrValue = attr.mapping(scale.invert(value)).join('');\n\n      return {\n        value: tickValue,\n        attrValue,\n        color: attrValue,\n        scaleValue: value,\n      };\n    });\n\n    if (!containMin) {\n      items.push({\n        value: scale.min,\n        attrValue: attr.mapping(scale.invert(0)).join(''),\n        color: attr.mapping(scale.invert(0)).join(''),\n        scaleValue: 0,\n      });\n    }\n    if (!containMax) {\n      items.push({\n        value: scale.max,\n        attrValue: attr.mapping(scale.invert(1)).join(''),\n        color: attr.mapping(scale.invert(1)).join(''),\n        scaleValue: 1,\n      });\n    }\n\n    // 排序\n    items.sort((a: any, b: any) => a.value - b.value);\n\n    // 跟 attr 相关的配置\n    // size color 区别的配置\n    const attrLegendCfg: LooseObject = {\n      min: head(items).value,\n      max: last(items).value,\n      colors: [],\n      rail: {\n        type: attr.type,\n      },\n      track: {},\n    };\n\n    if (attr.type === 'size') {\n      attrLegendCfg.track = {\n        style: {\n          // size 的选中前景色，对于 color，则直接使用 color 标识\n          // @ts-ignore\n          fill: attr.type === 'size' ? this.view.getTheme().defaultColor : undefined,\n        },\n      };\n    }\n\n    if (attr.type === 'color') {\n      attrLegendCfg.colors = items.map((item) => item.attrValue);\n    }\n\n    const container = this.container;\n    // if position is not set, use top as default\n    const direction = getDirection(legendOption);\n\n    const layout = getLegendLayout(direction);\n\n    let title = get(legendOption, 'title');\n    if (title) {\n      title = deepMix(\n        {\n          text: getName(scale),\n        },\n        title\n      );\n    }\n\n    // 基础配置，从当前数据中读到的配置\n    attrLegendCfg.container = container;\n    attrLegendCfg.layout = layout;\n    attrLegendCfg.title = title;\n    attrLegendCfg.animateOption = DEFAULT_ANIMATE_CFG;\n    // @ts-ignore\n    return this.mergeLegendCfg(attrLegendCfg, legendOption, 'continuous');\n  }\n\n  /**\n   * 获取分类图例的配置项\n   * @param geometry\n   * @param attr\n   * @param scale\n   * @param custom\n   * @param legendOption\n   */\n  private getCategoryCfg(geometry: Geometry, attr: Attribute, scale: Scale, legendOption: any, custom?: boolean) {\n    const container = this.container;\n    // if position is not set, use top as default\n    const direction = get(legendOption, 'position', DIRECTION.BOTTOM);\n\n    const legendTheme = getLegendThemeCfg(this.view.getTheme(), direction);\n\n    // the default marker style\n    const themeMarker = get(legendTheme, ['marker']);\n    const userMarker = get(legendOption, 'marker');\n    const layout = getLegendLayout(direction);\n    const themePageNavigator = get(legendTheme, ['pageNavigator']);\n    const userPageNavigator = get(legendOption, 'pageNavigator');\n\n    const items = custom\n      ? getCustomLegendItems(themeMarker, userMarker, legendOption.items)\n      : getLegendItems(this.view, geometry, attr, themeMarker, userMarker);\n\n    let title = get(legendOption, 'title');\n    if (title) {\n      title = deepMix(\n        {\n          text: scale ? getName(scale) : '',\n        },\n        title\n      );\n    }\n    const maxWidthRatio = get(legendOption, 'maxWidthRatio');\n    const maxHeightRatio = get(legendOption, 'maxHeightRatio');\n\n    const baseCfg: LooseObject = this.getCategoryLegendSizeCfg(layout, maxWidthRatio, maxHeightRatio);\n    baseCfg.container = container;\n    baseCfg.layout = layout;\n    baseCfg.items = items;\n    baseCfg.title = title;\n    baseCfg.animateOption = DEFAULT_ANIMATE_CFG;\n    baseCfg.pageNavigator = deepMix({}, themePageNavigator, userPageNavigator);\n\n    const categoryCfg = this.mergeLegendCfg(baseCfg, legendOption, direction);\n    if (categoryCfg.reversed) {\n      // 图例项需要逆序\n      categoryCfg.items.reverse();\n    }\n\n    const maxItemWidth = get(categoryCfg, 'maxItemWidth');\n    if (maxItemWidth && maxItemWidth <= 1) {\n      // 转换成像素值\n      categoryCfg.maxItemWidth = this.view.viewBBox.width * maxItemWidth;\n    }\n\n    return categoryCfg;\n  }\n\n  /**\n   * get legend config, use option > suggestion > theme\n   * @param baseCfg\n   * @param legendOption\n   * @param direction\n   */\n  private mergeLegendCfg(baseCfg: object, legendOption: LegendOption, direction: DIRECTION) {\n    const position = direction.split('-')[0];\n    const themeObject = getLegendThemeCfg(this.view.getTheme(), position);\n\n    return deepMix({}, themeObject, baseCfg, legendOption);\n  }\n\n  /**\n   * 生成 id\n   * @param key\n   */\n  private getId(key: string): string {\n    return `${this.name}-${key}`;\n  }\n\n  /**\n   * 根据 id 来获取组件\n   * @param id\n   */\n  private getComponentById(id: string): ComponentOption {\n    return find(this.components, (co) => co.id === id);\n  }\n\n  private getCategoryLegendSizeCfg(\n    layout: 'horizontal' | 'vertical',\n    maxWidthRatio = COMPONENT_MAX_VIEW_PERCENTAGE,\n    maxHeightRatio = COMPONENT_MAX_VIEW_PERCENTAGE\n  ) {\n    const { width: vw, height: vh } = this.view.viewBBox;\n    // 目前 legend 的布局是以 viewBBox 为参照\n    // const { width: cw, height: ch } = this.view.coordinateBBox;\n    return layout === 'vertical'\n      ? {\n          maxWidth: vw * maxWidthRatio,\n          maxHeight: vh,\n        }\n      : {\n          maxWidth: vw,\n          maxHeight: vh * maxHeightRatio,\n        };\n  }\n}\n","import { Controller } from './base';\nimport { IGroup, Scrollbar as ScrollbarComponent, Scale } from '../../dependents';\nimport { ScrollbarOption, ComponentOption, ScrollbarCfg, Data, ScaleOption, Padding } from '../../interface';\nimport View from '../view';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { COMPONENT_TYPE, DIRECTION, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { isObject, clamp, size, throttle, noop, get, valuesOfKey, deepMix } from '@antv/util';\nimport { isBetween } from '../../util/helper';\n\nconst DEFAULT_PADDING: number = 0;\nconst DEFAULT_SIZE: number = 8;\nconst DEFAULT_CATEGORY_SIZE: number = 32;\nconst MIN_THUMB_LENGTH: number = 20;\n\nexport default class Scrollbar extends Controller<ScrollbarOption> {\n  private scrollbar: ComponentOption;\n  private container: IGroup;\n\n  private trackLen: number;\n  private thumbLen: number;\n  private cnt: number;\n  private step: number;\n  private ratio: number;\n  private data: Data;\n  private xScaleCfg: {\n    field: string;\n    values: string[];\n  };\n  private yScalesCfg: Scale[];\n\n  private onChangeFn: (evt: {}) => void = noop;\n\n  constructor(view: View) {\n    super(view);\n    this.container = this.view.getLayer(LAYER.FORE).addGroup();\n    this.onChangeFn = throttle(this.onValueChange, 20, {\n      leading: true,\n    }) as (evt: {}) => void;\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n\n    this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  }\n\n  get name(): string {\n    return 'scrollbar';\n  }\n\n  public destroy() {\n    super.destroy();\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  }\n\n  public init() { }\n\n  /**\n   * 渲染\n   */\n  public render() {\n    this.option = this.view.getOptions().scrollbar;\n\n    if (this.option) {\n      if (this.scrollbar) {\n        // exist, update\n        this.scrollbar = this.updateScrollbar();\n      } else {\n        // not exist, create\n        this.scrollbar = this.createScrollbar();\n        this.scrollbar.component.on('scrollchange', this.onChangeFn);\n      }\n    } else {\n      if (this.scrollbar) {\n        // exist, destroy\n        this.scrollbar.component.destroy();\n        this.scrollbar = undefined;\n      }\n    }\n  }\n\n  /**\n   * 布局\n   */\n  public layout() {\n    if (this.option && !this.trackLen) {\n      this.measureScrollbar();\n      setTimeout(() => {\n        if (!this.view.destroyed) {\n          this.changeViewData(this.getScrollRange(), true);\n        }\n      });\n    }\n    if (this.scrollbar) {\n      const width = this.view.coordinateBBox.width;\n      const padding: Padding = this.scrollbar.component.get('padding') as Padding;\n      const bboxObject = this.scrollbar.component.getLayoutBBox();\n      const bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height).expand(\n        padding\n      );\n      const cfg = this.getScrollbarComponentCfg();\n\n      let x: number;\n      let y: number;\n\n      if (cfg.isHorizontal) {\n        const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM);\n        const [x2, y2] = directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM);\n        x = x2;\n        y = y1;\n      } else {\n        const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT);\n        const [x2, y2] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.RIGHT);\n        x = x2;\n        y = y1;\n      }\n\n      x += padding[3];\n      y += padding[0];\n\n      // 默认放在 bottom\n      if (this.trackLen) {\n        this.scrollbar.component.update({\n          ...cfg,\n          x,\n          y,\n          trackLen: this.trackLen,\n          thumbLen: this.thumbLen,\n          thumbOffset: (this.trackLen - this.thumbLen) * this.ratio,\n        });\n      } else {\n        this.scrollbar.component.update({\n          ...cfg,\n          x,\n          y,\n        });\n      }\n\n      this.view.viewBBox = this.view.viewBBox.cut(bbox, cfg.isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT);\n    }\n  }\n\n  /**\n   * 更新\n   */\n  public update() {\n    // 逻辑和 render 保持一致\n    this.render();\n  }\n\n  public getComponents() {\n    return this.scrollbar ? [this.scrollbar] : [];\n  }\n\n  public clear() {\n    if (this.scrollbar) {\n      this.scrollbar.component.destroy();\n      this.scrollbar = undefined;\n    }\n    this.trackLen = 0;\n    this.thumbLen = 0;\n    this.ratio = 0;\n    this.cnt = 0;\n    this.step = 0;\n    this.data = undefined;\n    this.xScaleCfg = undefined;\n    this.yScalesCfg = [];\n  }\n\n  /** 设置滚动条位置  */\n  public setValue(ratio: number) {\n    this.onValueChange({ ratio });\n  }\n\n  /** 获得滚动条位置  */\n  public getValue() {\n    return this.ratio;\n  }\n\n  /**\n   * 获取 scrollbar 的主题配置\n   */\n  private getThemeOptions() {\n    const theme = this.view.getTheme();\n    return get(theme, ['components', 'scrollbar', 'common'], {});\n  }\n\n  /**\n   * 获取 scrollbar 组件的主题样式\n   */\n  private getScrollbarTheme(style?: ScrollbarCfg['style']) {\n    const theme = get(this.view.getTheme(), ['components', 'scrollbar']);\n    const { thumbHighlightColor, ...restStyles } = style || {};\n    return {\n      default: deepMix({}, get(theme, ['default', 'style'], {}), restStyles),\n      hover: deepMix({}, get(theme, ['hover', 'style'], {}), { thumbColor: thumbHighlightColor }),\n    };\n  }\n\n  private resetMeasure = () => {\n    this.clear();\n  };\n\n  private onValueChange = ({ ratio }: { ratio: number }) => {\n    const { animate } = this.getValidScrollbarCfg();\n    this.ratio = clamp(ratio, 0, 1);\n    const originalAnimate = this.view.getOptions().animate;\n    if (!animate) {\n      this.view.animate(false);\n    }\n    this.changeViewData(this.getScrollRange(), true);\n    this.view.animate(originalAnimate);\n  };\n\n  private measureScrollbar(): void {\n    const xScale = this.view.getXScale();\n    const yScales = this.view.getYScales().slice();\n    this.data = this.getScrollbarData();\n    this.step = this.getStep();\n    this.cnt = this.getCnt();\n    const { trackLen, thumbLen } = this.getScrollbarComponentCfg();\n    this.trackLen = trackLen;\n    this.thumbLen = thumbLen;\n    this.xScaleCfg = {\n      field: xScale.field,\n      values: xScale.values || [],\n    };\n    this.yScalesCfg = yScales;\n  }\n\n  private getScrollRange(): [number, number] {\n    const startIdx: number = Math.floor((this.cnt - this.step) * clamp(this.ratio, 0, 1));\n    const endIdx: number = Math.min(startIdx + this.step - 1, this.cnt - 1);\n    return [startIdx, endIdx];\n  }\n\n  private changeViewData([startIdx, endIdx]: [number, number], render?: boolean): void {\n    const { type } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const values = valuesOfKey(this.data, this.xScaleCfg.field);\n\n    // 如果是 xScale 数值类型，则进行排序\n    const xScaleValues = this.view.getXScale().isLinear ? values.sort((a, b) => Number(a) - Number(b)) : values;\n\n    const xValues = isHorizontal ? xScaleValues : xScaleValues.reverse();\n    this.yScalesCfg.forEach((cfg) => {\n      this.view.scale(cfg.field, {\n        formatter: cfg.formatter,\n        type: cfg.type as ScaleOption['type'],\n        min: cfg.min,\n        max: cfg.max,\n        tickMethod: cfg.tickMethod\n      });\n    });\n    this.view.filter(this.xScaleCfg.field, (val) => {\n      const idx = xValues.indexOf(val);\n      return idx > -1 ? isBetween(idx, startIdx, endIdx) : true;\n    });\n    this.view.render(true);\n  }\n\n  private createScrollbar(): ComponentOption {\n    const { type } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const component = new ScrollbarComponent({\n      container: this.container,\n      ...this.getScrollbarComponentCfg(),\n      x: 0,\n      y: 0,\n    });\n\n    component.init();\n\n    return {\n      component,\n      layer: LAYER.FORE,\n      direction: isHorizontal ? DIRECTION.BOTTOM : DIRECTION.RIGHT,\n      type: COMPONENT_TYPE.SCROLLBAR,\n    };\n  }\n\n  private updateScrollbar(): ComponentOption {\n    const config = this.getScrollbarComponentCfg();\n    const realConfig = this.trackLen\n      ? {\n        ...config,\n        trackLen: this.trackLen,\n        thumbLen: this.thumbLen,\n        thumbOffset: (this.trackLen - this.thumbLen) * this.ratio,\n      }\n      : { ...config };\n    this.scrollbar.component.update(realConfig);\n\n    return this.scrollbar;\n  }\n\n  private getStep() {\n    if (this.step) {\n      return this.step;\n    }\n    const { coordinateBBox } = this.view;\n    const { type, categorySize } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n\n    return Math.floor((isHorizontal ? coordinateBBox.width : coordinateBBox.height) / categorySize);\n  }\n\n  private getCnt() {\n    if (this.cnt) {\n      return this.cnt;\n    }\n    const xScale = this.view.getXScale();\n    const data = this.getScrollbarData();\n    const values = valuesOfKey(data, xScale.field);\n    return size(values);\n  }\n\n  private getScrollbarComponentCfg() {\n    const { coordinateBBox, viewBBox } = this.view;\n    const { type, padding, width, height, style } = this.getValidScrollbarCfg();\n    const isHorizontal = type !== 'vertical';\n    const [paddingTop, paddingRight, paddingBottom, paddingLeft] = padding;\n    const position = isHorizontal\n      ? {\n        x: coordinateBBox.minX + paddingLeft,\n        y: viewBBox.maxY - height - paddingBottom,\n      }\n      : {\n        x: viewBBox.maxX - width - paddingRight,\n        y: coordinateBBox.minY + paddingTop,\n      };\n    const step = this.getStep();\n    const cnt = this.getCnt();\n    const trackLen = isHorizontal\n      ? coordinateBBox.width - paddingLeft - paddingRight\n      : coordinateBBox.height - paddingTop - paddingBottom;\n    const thumbLen = Math.max(trackLen * clamp(step / cnt, 0, 1), MIN_THUMB_LENGTH);\n\n    return {\n      ...this.getThemeOptions(),\n      x: position.x,\n      y: position.y,\n      size: isHorizontal ? height : width,\n      isHorizontal,\n      trackLen,\n      thumbLen,\n      thumbOffset: 0,\n      theme: this.getScrollbarTheme(style),\n    };\n  }\n\n  /**\n   * 填充一些默认的配置项目\n   */\n  private getValidScrollbarCfg(): Required<ScrollbarCfg> {\n    let cfg: Required<ScrollbarCfg> = {\n      type: 'horizontal',\n      categorySize: DEFAULT_CATEGORY_SIZE,\n      width: DEFAULT_SIZE,\n      height: DEFAULT_SIZE,\n      padding: [0, 0, 0, 0],\n      animate: true,\n      style: {},\n    };\n    if (isObject(this.option)) {\n      cfg = { ...cfg, ...this.option };\n    }\n    if (!isObject(this.option) || !this.option.padding) {\n      cfg.padding =\n        cfg.type === 'horizontal' ? [DEFAULT_PADDING, 0, DEFAULT_PADDING, 0] : [0, DEFAULT_PADDING, 0, DEFAULT_PADDING];\n    }\n\n    return cfg;\n  }\n\n  /**\n   * 获取数据\n   */\n  private getScrollbarData(): Data {\n    const coordinate = this.view.getCoordinate();\n    const cfg = this.getValidScrollbarCfg();\n    let data = this.view.getOptions().data || [];\n    // 纵向做了 y 轴镜像之后，数据也需要镜像反转\n    if (coordinate.isReflect('y') && cfg.type === 'vertical') {\n      data = [...data].reverse();\n    }\n\n    return data;\n  }\n}\n","import { deepMix, get, isObject, size, clamp, isNil, noop, throttle, isEmpty, valuesOfKey } from '@antv/util';\nimport { COMPONENT_TYPE, DIRECTION, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\nimport { IGroup, Slider as SliderComponent } from '../../dependents';\nimport { ComponentOption, Datum, Padding } from '../../interface';\nimport { BBox } from '../../util/bbox';\nimport { directionToPosition } from '../../util/direction';\nimport { isBetween } from '../../util/helper';\nimport { Writeable } from '../../util/types';\nimport View from '../view';\nimport { Controller } from './base';\nimport { SliderOption, SliderCfg } from '../../interface';\n\n/**\n * @ignore\n * slider Controller\n */\nexport default class Slider extends Controller<SliderOption> {\n  private slider: ComponentOption;\n  private container: IGroup;\n\n  private width: number;\n  private start: number;\n  private end: number;\n\n  private onChangeFn: (evt: {}) => void = noop;\n\n  constructor(view: View) {\n    super(view);\n\n    this.container = this.view.getLayer(LAYER.FORE).addGroup();\n    this.onChangeFn = throttle(this.onValueChange, 20, {\n      leading: true,\n    }) as (evt: {}) => void;\n\n    this.width = 0;\n    this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.on(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  }\n\n  get name(): string {\n    return 'slider';\n  }\n\n  public destroy() {\n    super.destroy();\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_DATA, this.resetMeasure);\n    this.view.off(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE, this.resetMeasure);\n  }\n\n  /**\n   * 初始化\n   */\n  public init() {}\n\n  /**\n   * 渲染\n   */\n  public render() {\n    this.option = this.view.getOptions().slider;\n    const { start, end } = this.getSliderCfg();\n    if (isNil(this.start)) {\n      this.start = start;\n      this.end = end;\n    }\n\n    const { data: viewData } = this.view.getOptions();\n    if (this.option && !isEmpty(viewData)) {\n      if (this.slider) {\n        // exist, update\n        this.slider = this.updateSlider();\n      } else {\n        // not exist, create\n        this.slider = this.createSlider();\n        // 监听事件，绑定交互\n        this.slider.component.on('sliderchange', this.onChangeFn);\n      }\n    } else {\n      if (this.slider) {\n        // exist, destroy\n        this.slider.component.destroy();\n        this.slider = undefined;\n      } else {\n        // do nothing\n      }\n    }\n  }\n\n  /**\n   * 布局\n   */\n  public layout() {\n    if (this.option && !this.width) {\n      this.measureSlider();\n      setTimeout(() => {\n        // 初始状态下的 view 数据过滤\n        if (!this.view.destroyed) {\n          this.changeViewData(this.start, this.end);\n        }\n      }, 0);\n    }\n    if (this.slider) {\n      const width = this.view.coordinateBBox.width;\n      // 获取组件的 layout bbox\n      const padding: Padding = this.slider.component.get('padding') as Padding;\n      const [paddingTop, paddingRight, paddingBottom, paddingLeft] = padding;\n      const bboxObject = this.slider.component.getLayoutBBox();\n      const bbox = new BBox(bboxObject.x, bboxObject.y, Math.min(bboxObject.width, width), bboxObject.height).expand(\n        padding\n      );\n      const { minText, maxText } = this.getMinMaxText(this.start, this.end);\n\n      const [x1, y1] = directionToPosition(this.view.viewBBox, bbox, DIRECTION.BOTTOM);\n      const [x2, y2] = directionToPosition(this.view.coordinateBBox, bbox, DIRECTION.BOTTOM);\n\n      // 默认放在 bottom\n      this.slider.component.update({\n        ...this.getSliderCfg(),\n        x: x2 + paddingLeft,\n        y: y1 + paddingTop,\n        width: this.width,\n        start: this.start,\n        end: this.end,\n        minText,\n        maxText,\n      });\n\n      this.view.viewBBox = this.view.viewBBox.cut(bbox, DIRECTION.BOTTOM);\n    }\n  }\n\n  /**\n   * 更新\n   */\n  public update() {\n    // 逻辑和 render 保持一致\n    this.render();\n  }\n\n  /**\n   * 创建 slider 组件\n   */\n  private createSlider(): ComponentOption {\n    const cfg: any = this.getSliderCfg();\n    // 添加 slider 组件\n    const component = new SliderComponent({\n      container: this.container,\n      ...cfg,\n    });\n\n    component.init();\n\n    return {\n      component,\n      layer: LAYER.FORE,\n      direction: DIRECTION.BOTTOM,\n      type: COMPONENT_TYPE.SLIDER,\n    };\n  }\n\n  /**\n   * 更新配置\n   */\n  private updateSlider() {\n    let cfg = this.getSliderCfg();\n    if (this.width) {\n      const { minText, maxText } = this.getMinMaxText(this.start, this.end);\n      cfg = { ...cfg, width: this.width, start: this.start, end: this.end, minText, maxText };\n    }\n\n    this.slider.component.update(cfg);\n\n    return this.slider;\n  }\n\n  /**\n   * 进行测量操作\n   */\n  private measureSlider() {\n    const { width } = this.getSliderCfg();\n\n    this.width = width;\n  }\n\n  /**\n   * 清除测量\n   */\n  private resetMeasure = () => {\n    this.clear();\n  };\n\n  /**\n   * 生成 slider 配置\n   */\n  private getSliderCfg() {\n    let cfg: Writeable<SliderCfg> & { x: number; y: number; width: number; minText: string; maxText: string } = {\n      height: 16,\n      start: 0,\n      end: 1,\n      minText: '',\n      maxText: '',\n      x: 0,\n      y: 0,\n      width: this.view.coordinateBBox.width,\n    };\n    if (isObject(this.option)) {\n      // 用户配置的数据，优先级更高\n      const trendCfg = {\n        data: this.getData(),\n        ...get(this.option, 'trendCfg', {}),\n      };\n\n      // 因为有样式，所以深层覆盖\n      cfg = deepMix({}, cfg, this.getThemeOptions(), this.option);\n\n      // trendCfg 因为有数据数组，所以使用浅替换\n      cfg = { ...cfg, trendCfg };\n    }\n\n    cfg.start = clamp(Math.min(isNil(cfg.start) ? 0 : cfg.start, isNil(cfg.end) ? 1 : cfg.end), 0, 1);\n    cfg.end = clamp(Math.max(isNil(cfg.start) ? 0 : cfg.start, isNil(cfg.end) ? 1 : cfg.end), 0, 1);\n\n    return cfg;\n  }\n\n  /**\n   * 从 view 中获取数据，缩略轴使用全量的数据\n   */\n  private getData(): number[] {\n    const data = this.view.getOptions().data;\n    const [yScale] = this.view.getYScales();\n    const groupScales = this.view.getGroupScales();\n    if (groupScales.length) {\n      const { field, ticks } = groupScales[0];\n      return data.reduce((pre, cur) => {\n        if (cur[field] === ticks[0]) {\n          pre.push(cur[yScale.field] as number);\n        }\n        return pre;\n      }, []) as number[];\n    }\n\n    return data.map((datum) => datum[yScale.field] || 0);\n  }\n\n  /**\n   * 获取 slider 的主题配置\n   */\n  private getThemeOptions() {\n    const theme = this.view.getTheme();\n    return get(theme, ['components', 'slider', 'common'], {});\n  }\n\n  /**\n   * 滑块滑动的时候出发\n   * @param v\n   */\n  private onValueChange = (v: any) => {\n    const [min, max] = v;\n\n    this.start = min;\n    this.end = max;\n\n    this.changeViewData(min, max);\n  };\n\n  /**\n   * 根据 start/end 和当前数据计算出当前的 minText/maxText\n   * @param min\n   * @param max\n   */\n  private getMinMaxText(min: number, max: number) {\n    const data = this.view.getOptions().data;\n    const xScale = this.view.getXScale();\n    const isHorizontal = true;\n    let values = valuesOfKey(data, xScale.field);\n\n    // 如果是 xScale 数值类型，则进行排序\n    if (xScale.isLinear) {\n      values = values.sort();\n    }\n\n    const xValues = isHorizontal ? values : values.reverse();\n    const dataSize = size(data);\n\n    if (!xScale || !dataSize) {\n      return {}; // fix: 需要兼容，否则调用方直接取值会报错\n    }\n\n    const xTickCount = size(xValues);\n\n    const minIndex = Math.round(min * (xTickCount - 1));\n    const maxIndex = Math.round(max * (xTickCount - 1));\n\n    let minText = get(xValues, [minIndex]);\n    let maxText = get(xValues, [maxIndex]);\n\n    const formatter = this.getSliderCfg().formatter as SliderCfg['formatter'];\n    if (formatter) {\n      minText = formatter(minText, data[minIndex], minIndex);\n      maxText = formatter(maxText, data[maxIndex], maxIndex);\n    }\n\n    return {\n      minText,\n      maxText,\n    };\n  }\n\n  /**\n   * 更新 view 过滤数据\n   * @param min\n   * @param max\n   */\n  private changeViewData(min: number, max: number) {\n    const data = this.view.getOptions().data;\n    const xScale = this.view.getXScale();\n    const dataSize = size(data);\n    if (!xScale || !dataSize) {\n      return;\n    }\n    const isHorizontal = true;\n    const values = valuesOfKey(data, xScale.field);\n\n    // 如果是 xScale 数值类型，则进行排序\n    const xScaleValues = this.view.getXScale().isLinear ? values.sort((a, b) => Number(a) - Number(b)) : values;\n\n    const xValues = isHorizontal ? xScaleValues : xScaleValues.reverse();\n    const xTickCount = size(xValues);\n\n    const minIndex = Math.round(min * (xTickCount - 1));\n    const maxIndex = Math.round(max * (xTickCount - 1));\n\n    // 增加 x 轴的过滤器\n    this.view.filter(xScale.field, (value: any, datum: Datum) => {\n      const idx: number = xValues.indexOf(value);\n      return idx > -1 ? isBetween(idx, minIndex, maxIndex) : true;\n    });\n    this.view.render(true);\n  }\n\n  /**\n   * 覆写父类方法\n   */\n  public getComponents() {\n    return this.slider ? [this.slider] : [];\n  }\n\n  /**\n   * 覆盖父类\n   */\n  public clear() {\n    if (this.slider) {\n      this.slider.component.destroy();\n      this.slider = undefined;\n    }\n    this.width = 0;\n    this.start = undefined;\n    this.end = undefined;\n  }\n}\n","import { deepMix, find, get, isEqual, isFunction, mix, isString, isBoolean, flatten, isArray } from '@antv/util';\nimport { Crosshair, HtmlTooltip, IGroup } from '../../dependents';\nimport { Point, TooltipItem, TooltipOption } from '../../interface';\nimport { getAngleByPoint, getDistanceToCenter, getCoordinateClipCfg } from '../../util/coordinate';\nimport { polarToCartesian } from '../../util/graphics';\nimport { findItemsFromView } from '../../util/tooltip';\nimport { BBox } from '../../util/bbox';\nimport { Controller } from './base';\nimport Event from '../event';\nimport View from '../view';\n\n// Filter duplicates, use `name`, `color`, `value` and `title` property values as condition\nfunction uniq(items) {\n  const uniqItems = [];\n  for (let index = 0; index < items.length; index++) {\n    const item = items[index];\n    const result = find(uniqItems, (subItem) => {\n      return (\n        subItem.color === item.color &&\n        subItem.name === item.name &&\n        subItem.value === item.value &&\n        subItem.title === item.title\n      );\n    });\n    if (!result) {\n      uniqItems.push(item);\n    }\n  }\n  return uniqItems;\n}\n\n/** @ignore */\nexport default class Tooltip extends Controller<TooltipOption> {\n  private tooltip;\n  private tooltipMarkersGroup: IGroup;\n  private tooltipCrosshairsGroup: IGroup;\n  private xCrosshair;\n  private yCrosshair;\n  private guideGroup: IGroup;\n\n  private isLocked: boolean = false;\n  private items;\n  private title: string;\n  private point: Point;\n\n  public get name(): string {\n    return 'tooltip';\n  }\n\n  public init() { }\n\n  private isVisible() {\n    const option = this.view.getOptions().tooltip;\n    return option !== false;\n  }\n\n  public render() { }\n\n  /**\n   * Shows tooltip\n   * @param point\n   */\n  public showTooltip(point: Point) {\n    this.point = point;\n    if (!this.isVisible()) {\n      // 如果设置 tooltip(false) 则始终不显示\n      return;\n    }\n    const view = this.view;\n    const items = this.getTooltipItems(point);\n    if (!items.length) {\n      // 无内容则不展示，同时 tooltip 需要隐藏\n      this.hideTooltip();\n      return;\n    }\n    const title = this.getTitle(items);\n    const dataPoint = {\n      x: items[0].x,\n      y: items[0].y,\n    }; // 数据点位置\n\n    view.emit(\n      'tooltip:show',\n      Event.fromData(view, 'tooltip:show', {\n        items,\n        title,\n        ...point,\n      })\n    );\n\n    const cfg = this.getTooltipCfg();\n    const { follow, showMarkers, showCrosshairs, showContent, marker } = cfg;\n    const lastItems = this.items;\n    const lastTitle = this.title;\n    if (!isEqual(lastTitle, title) || !isEqual(lastItems, items)) {\n      // 内容发生变化了更新 tooltip\n      view.emit(\n        'tooltip:change',\n        Event.fromData(view, 'tooltip:change', {\n          items,\n          title,\n          ...point,\n        })\n      );\n\n      if (isFunction(showContent) ? showContent(items) : showContent) {\n        // 展示 tooltip 内容框才渲染 tooltip\n        if (!this.tooltip) {\n          // 延迟生成\n          this.renderTooltip();\n        }\n        this.tooltip.update(\n          mix(\n            {},\n            cfg,\n            {\n              items: this.getItemsAfterProcess(items),\n              title,\n            },\n            follow ? point : {}\n          )\n        );\n        this.tooltip.show();\n      }\n\n      if (showMarkers) {\n        // 展示 tooltipMarkers，tooltipMarkers 跟随数据\n        this.renderTooltipMarkers(items, marker);\n      }\n    } else {\n      // 内容未发生变化，则更新位置\n      if (this.tooltip && follow) {\n        this.tooltip.update(point);\n        this.tooltip.show(); // tooltip 有可能被隐藏，需要保证显示状态\n      }\n\n      if (this.tooltipMarkersGroup) {\n        this.tooltipMarkersGroup.show();\n      }\n    }\n\n    this.items = items;\n    this.title = title;\n\n    if (showCrosshairs) {\n      // 展示 tooltip 辅助线\n      const isCrosshairsFollowCursor = get(cfg, ['crosshairs', 'follow'], false); // 辅助线是否要跟随鼠标\n      this.renderCrosshairs(isCrosshairsFollowCursor ? point : dataPoint, cfg);\n    }\n  }\n\n  public hideTooltip() {\n    const { follow } = this.getTooltipCfg();\n    if (!follow) {\n      this.point = null;\n      return;\n    }\n    // hide the tooltipMarkers\n    const tooltipMarkersGroup = this.tooltipMarkersGroup;\n    if (tooltipMarkersGroup) {\n      tooltipMarkersGroup.hide();\n    }\n\n    // hide crosshairs\n    const xCrosshair = this.xCrosshair;\n    const yCrosshair = this.yCrosshair;\n    if (xCrosshair) {\n      xCrosshair.hide();\n    }\n    if (yCrosshair) {\n      yCrosshair.hide();\n    }\n\n    const tooltip = this.tooltip;\n    if (tooltip) {\n      tooltip.hide();\n    }\n\n    this.view.emit('tooltip:hide', Event.fromData(this.view, 'tooltip:hide', {}));\n\n    this.point = null;\n  }\n\n  /**\n   * lockTooltip\n   */\n  public lockTooltip() {\n    this.isLocked = true;\n    if (this.tooltip) {\n      // tooltip contianer 可捕获事件\n      this.tooltip.setCapture(true);\n    }\n  }\n\n  /**\n   * unlockTooltip\n   */\n  public unlockTooltip() {\n    this.isLocked = false;\n    const cfg = this.getTooltipCfg();\n    if (this.tooltip) {\n      // 重置 capture 属性\n      this.tooltip.setCapture(cfg.capture);\n    }\n  }\n\n  /**\n   * isTooltipLocked\n   */\n  public isTooltipLocked() {\n    return this.isLocked;\n  }\n\n  public clear() {\n    const { tooltip, xCrosshair, yCrosshair, tooltipMarkersGroup } = this;\n    if (tooltip) {\n      tooltip.hide();\n      tooltip.clear();\n    }\n\n    if (xCrosshair) {\n      xCrosshair.clear();\n    }\n\n    if (yCrosshair) {\n      yCrosshair.clear();\n    }\n\n    if (tooltipMarkersGroup) {\n      tooltipMarkersGroup.clear();\n    }\n\n    // 如果 customContent 不为空，就重新生成 tooltip\n    if (tooltip?.get('customContent')) {\n      this.tooltip.destroy();\n      this.tooltip = null;\n    }\n\n    // title 和 items 需要清空, 否则 tooltip 内容会出现置空的情况\n    // 即：需要走进 !isEqual(lastTitle, title) || !isEqual(lastItems, items) 的逻辑，更新 tooltip 的内容\n    this.title = null;\n    this.items = null;\n  }\n\n  public destroy() {\n    if (this.tooltip) {\n      this.tooltip.destroy();\n    }\n    if (this.xCrosshair) {\n      this.xCrosshair.destroy();\n    }\n    if (this.yCrosshair) {\n      this.yCrosshair.destroy();\n    }\n\n    if (this.guideGroup) {\n      this.guideGroup.remove(true);\n    }\n\n    this.reset();\n  }\n\n  public reset() {\n    this.items = null;\n    this.title = null;\n    this.tooltipMarkersGroup = null;\n    this.tooltipCrosshairsGroup = null;\n    this.xCrosshair = null;\n    this.yCrosshair = null;\n    this.tooltip = null;\n    this.guideGroup = null;\n    this.isLocked = false;\n    this.point = null;\n  }\n\n  public changeVisible(visible: boolean) {\n    if (this.visible === visible) {\n      return;\n    }\n    const { tooltip, tooltipMarkersGroup, xCrosshair, yCrosshair } = this;\n    if (visible) {\n      if (tooltip) {\n        tooltip.show();\n      }\n      if (tooltipMarkersGroup) {\n        tooltipMarkersGroup.show();\n      }\n      if (xCrosshair) {\n        xCrosshair.show();\n      }\n      if (yCrosshair) {\n        yCrosshair.show();\n      }\n    } else {\n      if (tooltip) {\n        tooltip.hide();\n      }\n      if (tooltipMarkersGroup) {\n        tooltipMarkersGroup.hide();\n      }\n      if (xCrosshair) {\n        xCrosshair.hide();\n      }\n      if (yCrosshair) {\n        yCrosshair.hide();\n      }\n    }\n    this.visible = visible;\n  }\n\n  public getTooltipItems(point: Point) {\n    let items = this.findItemsFromView(this.view, point);\n    if (items.length) {\n      // 三层\n      items = flatten(items);\n      for (const itemArr of items) {\n        for (const item of itemArr) {\n          const { x, y } = item.mappingData;\n          item.x = isArray(x) ? x[x.length - 1] : x;\n          item.y = isArray(y) ? y[y.length - 1] : y;\n        }\n      }\n\n      const { shared } = this.getTooltipCfg();\n      // shared: false 代表只显示当前拾取到的 shape 的数据，但是一个 view 会有多个 Geometry，所以有可能会拾取到多个 shape\n      if (shared === false && items.length > 1) {\n        let snapItem = items[0];\n        let min = Math.abs(point.y - snapItem[0].y);\n        for (const aItem of items) {\n          const yDistance = Math.abs(point.y - aItem[0].y);\n          if (yDistance <= min) {\n            snapItem = aItem;\n            min = yDistance;\n          }\n        }\n        items = [snapItem];\n      }\n\n      return uniq(flatten(items));\n    }\n\n    return [];\n  }\n\n  public layout() { }\n\n  public update() {\n    if (this.point) {\n      this.showTooltip(this.point);\n    }\n\n    if (this.tooltip) {\n      // #2279 修复resize之后tooltip越界的问题\n      // 确保tooltip已经创建的情况下\n      const canvas = this.view.getCanvas();\n      // TODO 逍为 tooltip 的区域不应该是 canvas，而应该是整个 特别是在图比较小的时候\n      // 更新 region\n      this.tooltip.set('region', {\n        start: { x: 0, y: 0 },\n        end: { x: canvas.get('width'), y: canvas.get('height') },\n      });\n    }\n  }\n\n  /**\n   * 当前鼠标点是在 enter tooltip 中\n   * @param point\n   */\n  public isCursorEntered(point: Point) {\n    // 是可捕获的，并且点在 tooltip dom 上\n    if (this.tooltip) {\n      const el: HTMLElement = this.tooltip.getContainer();\n      const capture = this.tooltip.get('capture');\n\n      if (el && capture) {\n        const { x, y, width, height } = el.getBoundingClientRect();\n        return new BBox(x, y, width, height).isPointIn(point);\n      }\n    }\n\n    return false;\n  }\n\n  // 获取 tooltip 配置，因为用户可能会通过 view.tooltip() 重新配置 tooltip，所以就不做缓存，每次直接读取\n  public getTooltipCfg() {\n    const view = this.view;\n    const option = view.getOptions().tooltip;\n    const processOption = this.processCustomContent(option);\n    const theme = view.getTheme();\n    const defaultCfg = get(theme, ['components', 'tooltip'], {});\n    const enterable = get(processOption, 'enterable', defaultCfg.enterable);\n    return deepMix({}, defaultCfg, processOption, {\n      capture: enterable || this.isLocked ? true : false,\n    });\n  }\n\n  // process customContent\n  protected processCustomContent(option: TooltipOption) {\n    if (isBoolean(option) || !get(option, 'customContent')) {\n      return option;\n    }\n    const currentCustomContent = option.customContent;\n    const customContent = (title: string, items: any[]) => {\n      const content = currentCustomContent(title, items) || '';\n      return isString(content) ? '<div class=\"g2-tooltip\">' + content + '</div>' : content;\n    };\n    return {\n      ...option,\n      customContent,\n    };\n  }\n\n  private getTitle(items) {\n    const title = items[0].title || items[0].name;\n    this.title = title;\n\n    return title;\n  }\n\n  private renderTooltip() {\n    const canvas = this.view.getCanvas();\n    const region = {\n      start: { x: 0, y: 0 },\n      end: { x: canvas.get('width'), y: canvas.get('height') },\n    };\n\n    const cfg = this.getTooltipCfg();\n    const tooltip = new HtmlTooltip({\n      parent: canvas.get('el').parentNode,\n      region,\n      ...cfg,\n      visible: false,\n      crosshairs: null,\n    });\n\n    tooltip.init();\n    this.tooltip = tooltip;\n  }\n\n  private renderTooltipMarkers(items, marker) {\n    const tooltipMarkersGroup = this.getTooltipMarkersGroup();\n    const rootView = this.view.getRootView();\n    const { limitInPlot } = rootView;\n    for (const item of items) {\n      const { x, y } = item;\n\n      // 有裁剪就剪切\n      if (limitInPlot || tooltipMarkersGroup?.getClip()) {\n        const { type, attrs } = getCoordinateClipCfg(rootView.getCoordinate());\n        tooltipMarkersGroup?.setClip({\n          type,\n          attrs,\n        });\n      } else {\n        // 清除已有的 clip\n        tooltipMarkersGroup?.setClip(undefined);\n      }\n\n      const theme = this.view.getTheme();\n      const markerDefaultCfg = get(theme, ['components', 'tooltip', 'marker'], {});\n\n      const attrs = {\n        fill: item.color,\n        symbol: 'circle',\n        shadowColor: item.color,\n        ...(isFunction(marker) ? { ...markerDefaultCfg, ...marker(item) } : marker),\n        x,\n        y,\n      };\n\n      tooltipMarkersGroup.addShape('marker', {\n        attrs,\n      });\n    }\n  }\n\n  private renderCrosshairs(point: Point, cfg) {\n    const crosshairsType = get(cfg, ['crosshairs', 'type'], 'x'); // 默认展示 x 轴上的辅助线\n    if (crosshairsType === 'x') {\n      if (this.yCrosshair) {\n        this.yCrosshair.hide();\n      }\n      this.renderXCrosshairs(point, cfg);\n    } else if (crosshairsType === 'y') {\n      if (this.xCrosshair) {\n        this.xCrosshair.hide();\n      }\n      this.renderYCrosshairs(point, cfg);\n    } else if (crosshairsType === 'xy') {\n      this.renderXCrosshairs(point, cfg);\n      this.renderYCrosshairs(point, cfg);\n    }\n  }\n\n  // 渲染 x 轴上的 tooltip 辅助线\n  private renderXCrosshairs(point: Point, tooltipCfg) {\n    const coordinate = this.getViewWithGeometry(this.view).getCoordinate();\n    let start;\n    let end;\n    if (coordinate.isRect) {\n      if (coordinate.isTransposed) {\n        start = {\n          x: coordinate.start.x,\n          y: point.y,\n        };\n        end = {\n          x: coordinate.end.x,\n          y: point.y,\n        };\n      } else {\n        start = {\n          x: point.x,\n          y: coordinate.end.y,\n        };\n        end = {\n          x: point.x,\n          y: coordinate.start.y,\n        };\n      }\n    } else {\n      // 极坐标下 x 轴上的 crosshairs 表现为半径\n      const angle = getAngleByPoint(coordinate, point);\n      const center = coordinate.getCenter();\n      const radius = coordinate.getRadius();\n      end = polarToCartesian(center.x, center.y, radius, angle);\n      start = center;\n    }\n\n    const cfg = deepMix(\n      {\n        start,\n        end,\n        container: this.getTooltipCrosshairsGroup(),\n      },\n      get(tooltipCfg, 'crosshairs', {}),\n      this.getCrosshairsText('x', point, tooltipCfg)\n    );\n    delete cfg.type; // 与 Crosshairs 组件的 type 冲突故删除\n\n    let xCrosshair = this.xCrosshair;\n    if (xCrosshair) {\n      xCrosshair.update(cfg);\n    } else {\n      xCrosshair = new Crosshair.Line(cfg);\n      xCrosshair.init();\n    }\n    xCrosshair.render();\n    xCrosshair.show();\n    this.xCrosshair = xCrosshair;\n  }\n\n  // 渲染 y 轴上的辅助线\n  private renderYCrosshairs(point: Point, tooltipCfg) {\n    const coordinate = this.getViewWithGeometry(this.view).getCoordinate();\n    let cfg;\n    let type;\n    if (coordinate.isRect) {\n      let start;\n      let end;\n      if (coordinate.isTransposed) {\n        start = {\n          x: point.x,\n          y: coordinate.end.y,\n        };\n        end = {\n          x: point.x,\n          y: coordinate.start.y,\n        };\n      } else {\n        start = {\n          x: coordinate.start.x,\n          y: point.y,\n        };\n        end = {\n          x: coordinate.end.x,\n          y: point.y,\n        };\n      }\n      cfg = {\n        start,\n        end,\n      };\n      type = 'Line';\n    } else {\n      // 极坐标下 y 轴上的 crosshairs 表现为圆弧\n      cfg = {\n        center: coordinate.getCenter(),\n        // @ts-ignore\n        radius: getDistanceToCenter(coordinate, point),\n        startAngle: coordinate.startAngle,\n        endAngle: coordinate.endAngle,\n      };\n      type = 'Circle';\n    }\n\n    cfg = deepMix(\n      {\n        container: this.getTooltipCrosshairsGroup(),\n      },\n      cfg,\n      get(tooltipCfg, 'crosshairs', {}),\n      this.getCrosshairsText('y', point, tooltipCfg)\n    );\n    delete cfg.type; // 与 Crosshairs 组件的 type 冲突故删除\n\n    let yCrosshair = this.yCrosshair;\n    if (yCrosshair) {\n      // 如果坐标系发生直角坐标系与极坐标的切换操作\n      if (\n        (coordinate.isRect && yCrosshair.get('type') === 'circle') ||\n        (!coordinate.isRect && yCrosshair.get('type') === 'line')\n      ) {\n        yCrosshair = new Crosshair[type](cfg);\n        yCrosshair.init();\n      } else {\n        yCrosshair.update(cfg);\n      }\n    } else {\n      yCrosshair = new Crosshair[type](cfg);\n      yCrosshair.init();\n    }\n    yCrosshair.render();\n    yCrosshair.show();\n    this.yCrosshair = yCrosshair;\n  }\n\n  private getCrosshairsText(type, point: Point, tooltipCfg) {\n    let textCfg = get(tooltipCfg, ['crosshairs', 'text']);\n    const follow = get(tooltipCfg, ['crosshairs', 'follow']);\n    const items = this.items;\n\n    if (textCfg) {\n      const view = this.getViewWithGeometry(this.view);\n      // 需要展示文本\n      const firstItem = items[0];\n      const xScale = view.getXScale();\n      const yScale = view.getYScales()[0];\n      let xValue;\n      let yValue;\n      if (follow) {\n        // 如果需要跟随鼠标移动，就需要将当前鼠标坐标点转换为对应的数值\n        const invertPoint = this.view.getCoordinate().invert(point);\n        xValue = xScale.invert(invertPoint.x); // 转换为原始值\n        yValue = yScale.invert(invertPoint.y); // 转换为原始值\n      } else {\n        xValue = firstItem.data[xScale.field];\n        yValue = firstItem.data[yScale.field];\n      }\n\n      const content = type === 'x' ? xValue : yValue;\n      if (isFunction(textCfg)) {\n        textCfg = textCfg(type, content, items, point);\n      } else {\n        textCfg.content = content;\n      }\n\n      return {\n        text: textCfg,\n      };\n    }\n  }\n\n  // 获取存储 tooltipMarkers 和 crosshairs 的容器\n  private getGuideGroup() {\n    if (!this.guideGroup) {\n      const foregroundGroup = this.view.foregroundGroup;\n      this.guideGroup = foregroundGroup.addGroup({\n        name: 'tooltipGuide',\n        capture: false,\n      });\n    }\n\n    return this.guideGroup;\n  }\n\n  // 获取 tooltipMarkers 存储的容器\n  private getTooltipMarkersGroup() {\n    let tooltipMarkersGroup = this.tooltipMarkersGroup;\n    if (tooltipMarkersGroup && !tooltipMarkersGroup.destroyed) {\n      tooltipMarkersGroup.clear();\n      tooltipMarkersGroup.show();\n    } else {\n      tooltipMarkersGroup = this.getGuideGroup().addGroup({\n        name: 'tooltipMarkersGroup',\n      });\n      tooltipMarkersGroup.toFront();\n      this.tooltipMarkersGroup = tooltipMarkersGroup;\n    }\n    return tooltipMarkersGroup;\n  }\n\n  // 获取 tooltip crosshairs 存储的容器\n  private getTooltipCrosshairsGroup() {\n    let tooltipCrosshairsGroup = this.tooltipCrosshairsGroup;\n    if (!tooltipCrosshairsGroup) {\n      tooltipCrosshairsGroup = this.getGuideGroup().addGroup({\n        name: 'tooltipCrosshairsGroup',\n        capture: false,\n      });\n      tooltipCrosshairsGroup.toBack();\n      this.tooltipCrosshairsGroup = tooltipCrosshairsGroup;\n    }\n    return tooltipCrosshairsGroup;\n  }\n\n  private findItemsFromView(view: View, point: Point) {\n    if (view.getOptions().tooltip === false) {\n      // 如果 view 关闭了 tooltip\n      return [];\n    }\n\n    const tooltipCfg = this.getTooltipCfg();\n    let result = findItemsFromView(view, point, tooltipCfg);\n    // 递归查找，并合并结果\n    for (const childView of view.views) {\n      result = result.concat(this.findItemsFromView(childView, point));\n    }\n\n    return result;\n  }\n\n  // FIXME: hack 方法\n  // 因为 tooltip 的交互是挂载在 Chart 上，所以当chart 上没有绘制 Geometry 的时候，就查找不到数据，并且绘图区域同子 View 的区域不同\n  private getViewWithGeometry(view) {\n    if (view.geometries.length) {\n      return view;\n    }\n\n    return find(view.views, (childView) => this.getViewWithGeometry(childView));\n  }\n\n  /**\n   * 根据用户配置的 items 配置，来进行用户自定义的处理，并返回最终的 items\n   * 默认不做任何处理\n   */\n  private getItemsAfterProcess(originalItems: TooltipItem[]): TooltipItem[] {\n    const { customItems } = this.getTooltipCfg();\n    const fn = customItems ? customItems : (v) => v;\n\n    return fn(originalItems);\n  }\n}\n","import { Event as GEvent, IShape } from '../dependents';\nimport { Datum } from '../interface';\nimport View from './view';\n\n/**\n * @todo Whether it can(or necessary to) keep consistent with the structure of G.Event or directly use the structure of G.Event\n * G2 事件的事件包装类，基于 G.Event\n */\nexport default class Event {\n  /** 当前 target 归属的 view 实例 */\n  public view: View;\n  /** 被包装的原生 G 事件 */\n  public gEvent: GEvent;\n  /** 原始数据 */\n  public data?: Datum;\n  /** 事件类型 */\n  public type: string;\n\n  constructor(view: View, gEvent: GEvent, data?: Datum) {\n    this.view = view;\n    this.gEvent = gEvent;\n    this.data = data;\n    this.type = gEvent.type;\n  }\n\n  /**\n   * 非交互产生的事件\n   * @param view\n   * @param type\n   * @param data\n   */\n  public static fromData(view: View, type: string, data: Datum) {\n    return new Event(view, new GEvent(type, {}), data);\n  }\n\n  // below props are proxy props of G.event convenient\n\n  /** the real trigger shape of the event */\n  public get target(): IShape {\n    // @todo G 中事件定义为 object 不正确，这里先 ignore\n    // @ts-ignore\n    return this.gEvent.target;\n  }\n\n  /** 获取对应的 dom 原生时间 */\n  public get event(): any {\n    return this.gEvent.originalEvent;\n  }\n\n  /** x 画布坐标 */\n  public get x(): number {\n    return this.gEvent.x;\n  }\n\n  /** y 画布坐标 */\n  public get y(): number {\n    return this.gEvent.y;\n  }\n\n  /** x 窗口坐标 */\n  public get clientX(): number {\n    return this.gEvent.clientX;\n  }\n\n  /** y 窗口坐标 */\n  public get clientY(): number {\n    return this.gEvent.clientY;\n  }\n  // end for proxy events\n\n  /**\n   * event string\n   * @returns string\n   */\n  public toString(): string {\n    return `[Event (type=${this.type})]`;\n  }\n\n  /**\n   * clone a new event with same attributes\n   * @returns [[Event]]\n   */\n  public clone(): Event {\n    return new Event(this.view, this.gEvent, this.data);\n  }\n}\n"],"names":["LOAD_COMPONENT_CONTROLLERS","registerComponentController","name","plugin","getComponentControllerNames","Object","keys","getComponentController","getLegendOption","legends","field","isBoolean","get","getDirection","legendOption","DIRECTION","view","_super","_this","container","getLayer","LAYER","addGroup","__extends","Legend","this","update","layoutBBox","viewBBox","each","components","co","component","direction","layout","getLegendLayout","maxWidthRatio","maxHeightRatio","maxSize","getCategoryLegendSizeCfg","maxWidth","maxHeight","Math","min","padding","bboxObject","getLayoutBBox","bbox","BBox","x","y","width","height","expand","directionToPosition","x1","y1","x2","y2","startsWith","setLocation","cut","option","getOptions","updated","id","existCo","getComponentById","customCfg","getCategoryCfg","undefined","omit","createCustomLegend","init","layer","push","type","COMPONENT_TYPE","extra","loopLegends","geometry","attr","scale","getId","cfg","isLinear","getContinuousCfg","isCategory","legend","createFieldLegend","getComponents","destroy","clear","call","remove","geometries","views","v","concat","getGeometries","doEach","getRootView","looped","attributes","getGroupAttributes","getScale","createContinuousLegend","createCategoryLegend","set","CategoryLegend","ContinuousLegend","ticks","getTicks","containMin","find","tick","value","containMax","items","map","tickValue","attrValue","mapping","invert","join","color","scaleValue","max","sort","a","b","attrLegendCfg","head","last","colors","rail","track","style","fill","getTheme","defaultColor","item","title","deepMix","text","getName","animateOption","DEFAULT_ANIMATE_CFG","mergeLegendCfg","custom","legendTheme","getLegendThemeCfg","themeMarker","userMarker","themePageNavigator","userPageNavigator","getCustomLegendItems","getLegendItems","baseCfg","pageNavigator","categoryCfg","reversed","reverse","maxItemWidth","position","split","themeObject","key","vw","vh","Controller","noop","_a","ratio","animate","getValidScrollbarCfg","clamp","originalAnimate","changeViewData","getScrollRange","onChangeFn","throttle","onValueChange","leading","trackLen","thumbLen","on","VIEW_LIFE_CIRCLE","resetMeasure","Scrollbar","off","scrollbar","updateScrollbar","createScrollbar","measureScrollbar","setTimeout","destroyed","coordinateBBox","getScrollbarComponentCfg","isHorizontal","__assign","thumbOffset","render","cnt","step","data","xScaleCfg","yScalesCfg","theme","thumbHighlightColor","restStyles","default","hover","thumbColor","xScale","getXScale","yScales","getYScales","slice","getScrollbarData","getStep","getCnt","values","startIdx","floor","_b","endIdx","valuesOfKey","xScaleValues","Number","xValues","forEach","formatter","tickMethod","filter","val","idx","indexOf","isBetween","ScrollbarComponent","config","realConfig","categorySize","size","paddingTop","paddingRight","paddingBottom","paddingLeft","minX","maxY","maxX","minY","getThemeOptions","getScrollbarTheme","isObject","coordinate","getCoordinate","isReflect","__spreadArray","start","end","Slider","slider","getSliderCfg","isNil","viewData","isEmpty","updateSlider","createSlider","measureSlider","getMinMaxText","minText","maxText","SliderComponent","trendCfg","getData","yScale","groupScales","getGroupScales","length","field_1","ticks_1","reduce","pre","cur","datum","dataSize","xTickCount","minIndex","round","maxIndex","Tooltip","tooltip","point","isVisible","getTooltipItems","getTitle","dataPoint","emit","Event","getTooltipCfg","follow","showMarkers","showCrosshairs","showContent","marker","lastItems","lastTitle","isEqual","show","tooltipMarkersGroup","isFunction","renderTooltip","mix","getItemsAfterProcess","renderTooltipMarkers","isCrosshairsFollowCursor","renderCrosshairs","hideTooltip","hide","xCrosshair","yCrosshair","isLocked","setCapture","capture","guideGroup","reset","tooltipCrosshairsGroup","visible","findItemsFromView","flatten","items_1_1","itemArr","itemArr_1_1","mappingData","isArray","shared","snapItem","abs","items_2_1","aItem","yDistance","uniqItems","index","subItem","uniq","showTooltip","canvas","getCanvas","el","getContainer","getBoundingClientRect","isPointIn","processOption","processCustomContent","defaultCfg","enterable","currentCustomContent","customContent","content","isString","region","HtmlTooltip","parent","parentNode","crosshairs","getTooltipMarkersGroup","rootView","limitInPlot","items_3_1","getClip","getCoordinateClipCfg","attrs_1","setClip","attrs","markerDefaultCfg","symbol","shadowColor","addShape","crosshairsType","renderXCrosshairs","renderYCrosshairs","tooltipCfg","getViewWithGeometry","isRect","isTransposed","angle","getAngleByPoint","center","getCenter","radius","getRadius","polarToCartesian","getTooltipCrosshairsGroup","getCrosshairsText","Crosshair","getDistanceToCenter","startAngle","endAngle","textCfg","firstItem","xValue","yValue","invertPoint","foregroundGroup","getGuideGroup","toFront","toBack","result","_c","childView","originalItems","customItems","gEvent","GEvent","target","originalEvent","clientX","clientY"],"sourceRoot":""}