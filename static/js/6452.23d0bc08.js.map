{"version":3,"file":"static/js/6452.23d0bc08.js","mappings":"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","sources":["../node_modules/@antv/component/src/legend/continuous.ts","../node_modules/@antv/component/src/scrollbar/scrollbar.ts","../node_modules/@antv/component/src/slider/handler.ts","../node_modules/@antv/component/src/slider/constant.ts","../node_modules/@antv/component/src/slider/slider.ts"],"sourcesContent":["import { IElement, IGroup } from '@antv/g-base';\nimport { clone, isFunction, mix, upperFirst } from '@antv/util';\nimport { ISlider } from '../interfaces';\nimport { BBox, ContinueLegendCfg } from '../types';\nimport Theme from '../util/theme';\nimport { getValueByPercent } from '../util/util';\nimport LegendBase from './base';\nconst HANDLER_HEIGHT_RATIO = 1.4;\nconst HANDLER_TRIANGLE_RATIO = 0.4;\n\nclass ContinueLegend extends LegendBase<ContinueLegendCfg> implements ISlider {\n  public getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    return {\n      ...cfg,\n      type: 'continue',\n      min: 0,\n      max: 100,\n      value: null,\n      colors: [],\n      track: {},\n      rail: {},\n      label: {},\n      handler: {},\n      slidable: true,\n      tip: null,\n      step: null,\n      maxWidth: null,\n      maxHeight: null,\n      defaultCfg: {\n        label: {\n          align: 'rail',\n          spacing: 5, // 文本和 rail 的间距\n          formatter: null,\n          style: {\n            fontSize: 12,\n            fill: Theme.textColor,\n            textBaseline: 'middle',\n            fontFamily: Theme.fontFamily,\n          },\n        },\n        handler: {\n          size: 10, // handler 的默认宽度\n          style: {\n            fill: '#fff',\n            stroke: '#333',\n          },\n        },\n        track: {},\n        rail: {\n          type: 'color',\n          size: 20,\n          defaultLength: 100,\n          style: {\n            fill: '#DCDEE2',\n          },\n        },\n        title: {\n          spacing: 5,\n          style: {\n            fill: Theme.textColor,\n            fontSize: 12,\n            textAlign: 'start',\n            textBaseline: 'top',\n          },\n        },\n      },\n    };\n  }\n\n  public isSlider() {\n    return true;\n  }\n\n  // 实现 IList 接口\n  public getValue() {\n    return this.getCurrentValue();\n  }\n\n  public getRange() {\n    return {\n      min: this.get('min'),\n      max: this.get('max'),\n    };\n  }\n\n  // 改变 range\n  public setRange(min, max) {\n    this.update({\n      min,\n      max,\n    });\n  }\n\n  public setValue(value: number[]) {\n    const originValue = this.getValue();\n    this.set('value', value);\n    const group = this.get('group');\n    this.resetTrackClip();\n    if (this.get('slidable')) {\n      this.resetHandlers(group);\n    }\n    this.delegateEmit('valuechanged', {\n      originValue,\n      value,\n    });\n  }\n\n  protected initEvent() {\n    const group = this.get('group');\n    this.bindSliderEvent(group);\n    this.bindRailEvent(group);\n    this.bindTrackEvent(group);\n  }\n\n  protected drawLegendContent(group: IGroup) {\n    this.drawRail(group);\n    this.drawLabels(group);\n    this.fixedElements(group); // 调整各个图形位置，适应宽高的限制\n    this.resetTrack(group);\n    this.resetTrackClip(group);\n    if (this.get('slidable')) {\n      this.resetHandlers(group);\n    }\n  }\n\n  private bindSliderEvent(group) {\n    this.bindHandlersEvent(group);\n  }\n\n  private bindHandlersEvent(group) {\n    group.on('legend-handler-min:drag', (ev) => {\n      const minValue = this.getValueByCanvasPoint(ev.x, ev.y);\n      const currentValue = this.getCurrentValue();\n      let maxValue = currentValue[1];\n      if (maxValue < minValue) {\n        // 如果小于最小值，则调整最小值\n        maxValue = minValue;\n      }\n      this.setValue([minValue, maxValue]);\n    });\n    group.on('legend-handler-max:drag', (ev) => {\n      const maxValue = this.getValueByCanvasPoint(ev.x, ev.y);\n      const currentValue = this.getCurrentValue();\n      let minValue = currentValue[0];\n      if (minValue > maxValue) {\n        // 如果小于最小值，则调整最小值\n        minValue = maxValue;\n      }\n      this.setValue([minValue, maxValue]);\n    });\n  }\n\n  private bindRailEvent(group) {}\n\n  private bindTrackEvent(group) {\n    let prePoint = null;\n    group.on('legend-track:dragstart', (ev) => {\n      prePoint = {\n        x: ev.x,\n        y: ev.y,\n      };\n    });\n    group.on('legend-track:drag', (ev) => {\n      if (!prePoint) {\n        return;\n      }\n      const preValue = this.getValueByCanvasPoint(prePoint.x, prePoint.y);\n      const curValue = this.getValueByCanvasPoint(ev.x, ev.y);\n      const currentValue = this.getCurrentValue();\n      const curDiff = currentValue[1] - currentValue[0];\n      const range = this.getRange();\n      const dValue = curValue - preValue;\n      if (dValue < 0) {\n        // 减小, 同时未出边界\n        if (currentValue[0] + dValue > range.min) {\n          this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n        } else {\n          this.setValue([range.min, range.min + curDiff]);\n        }\n        //  && ||\n      } else if (dValue > 0) {\n        if (dValue > 0 && currentValue[1] + dValue < range.max) {\n          this.setValue([currentValue[0] + dValue, currentValue[1] + dValue]);\n        } else {\n          this.setValue([range.max - curDiff, range.max]);\n        }\n      }\n      prePoint = {\n        x: ev.x,\n        y: ev.y,\n      };\n    });\n    group.on('legend-track:dragend', (ev) => {\n      prePoint = null;\n    });\n  }\n\n  private drawLabels(group: IGroup) {\n    this.drawLabel('min', group);\n    this.drawLabel('max', group);\n  }\n\n  private drawLabel(name, group: IGroup) {\n    const labelCfg = this.get('label');\n    const style = labelCfg.style;\n    const labelAlign = labelCfg.align;\n    const labelFormatter = labelCfg.formatter;\n    const value = this.get(name);\n    const alignAttrs = this.getLabelAlignAttrs(name, labelAlign);\n    const localId = `label-${name}`;\n    this.addShape(group, {\n      type: 'text',\n      id: this.getElementId(localId),\n      name: `legend-label-${name}`,\n      attrs: {\n        x: 0,\n        y: 0,\n        text: isFunction(labelFormatter) ? labelFormatter(value) : value,\n        ...style,\n        ...alignAttrs,\n      },\n    });\n  }\n\n  // 获取文本的对齐方式，为了自适应真实操碎了心\n  private getLabelAlignAttrs(name, align) {\n    const isVertical = this.isVertical();\n    let textAlign = 'center';\n    let textBaseline = 'middle';\n    if (isVertical) {\n      // 垂直布局的所有的文本都左对齐\n      textAlign = 'start';\n      if (align !== 'rail') {\n        if (name === 'min') {\n          textBaseline = 'top';\n        } else {\n          textBaseline = 'bottom';\n        }\n      } else {\n        textBaseline = 'top';\n      }\n    } else {\n      if (align !== 'rail') {\n        textBaseline = 'top';\n        if (name === 'min') {\n          textAlign = 'start';\n        } else {\n          textAlign = 'end';\n        }\n      } else {\n        textAlign = 'start';\n        textBaseline = 'middle';\n      }\n    }\n    return {\n      textAlign,\n      textBaseline,\n    };\n  }\n\n  private getRailPath(x: number, y: number, w?: number, h?: number) {\n    const railCfg = this.get('rail');\n    const { size, defaultLength, type } = railCfg;\n    const isVertical = this.isVertical();\n    const length = defaultLength;\n    let width = w;\n    let height = h;\n    if (!width) {\n      width = isVertical ? size : length;\n    }\n    if (!height) {\n      height = isVertical ? length : size;\n    }\n    const path = [];\n    if (type === 'color') {\n      path.push(['M', x, y]);\n      path.push(['L', x + width, y]);\n      path.push(['L', x + width, y + height]);\n      path.push(['L', x, y + height]);\n      path.push(['Z']);\n    } else {\n      path.push(['M', x + width, y]);\n      path.push(['L', x + width, y + height]);\n      path.push(['L', x, y + height]);\n      path.push(['Z']);\n    }\n    return path;\n  }\n\n  private drawRail(group: IGroup) {\n    const railCfg = this.get('rail');\n    const style = railCfg.style;\n    this.addShape(group, {\n      type: 'path',\n      id: this.getElementId('rail'),\n      name: 'legend-rail',\n      attrs: {\n        path: this.getRailPath(0, 0),\n        ...style,\n      },\n    });\n  }\n\n  // 将传入的颜色转换成渐变色\n  private getTrackColor(colors) {\n    const count = colors.length;\n    if (!count) {\n      return null;\n    }\n    if (count === 1) {\n      return colors[0];\n    }\n    let color; // 最终形态 l(0) 0:colors[0] 0.5:colors[1] 1:colors[2];\n    if (this.isVertical()) {\n      // 根据方向设置渐变方向\n      color = 'l(90)';\n    } else {\n      color = 'l(0)';\n    }\n    for (let i = 0; i < count; i++) {\n      const percent = i / (count - 1);\n      color += ` ${percent}:${colors[i]}`;\n    }\n    return color;\n  }\n\n  private getTrackPath(group?: IGroup) {\n    const railShape = this.getRailShape(group);\n    const path = railShape.attr('path');\n    return clone(path);\n  }\n\n  private getClipTrackAttrs(group?: IGroup) {\n    const value = this.getCurrentValue();\n    const [min, max] = value;\n    const railBBox = this.getRailBBox(group);\n    const startPoint = this.getPointByValue(min, group);\n    const endPoint = this.getPointByValue(max, group);\n    const isVertical = this.isVertical();\n    let x;\n    let y;\n    let width;\n    let height;\n    if (isVertical) {\n      x = railBBox.minX;\n      y = startPoint.y;\n      width = railBBox.width;\n      height = endPoint.y - startPoint.y;\n    } else {\n      x = startPoint.x;\n      y = railBBox.minY;\n      width = endPoint.x - startPoint.x;\n      height = railBBox.height;\n    }\n    return {\n      x,\n      y,\n      width,\n      height,\n    };\n  }\n\n  // 获取 track 的属性，由 path 和 颜色构成\n  private getTrackAttrs(group?: IGroup) {\n    const trackCfg = this.get('track');\n    const colors = this.get('colors');\n    const path = this.getTrackPath(group);\n    return mix(\n      {\n        path,\n        fill: this.getTrackColor(colors),\n      },\n      trackCfg.style\n    );\n  }\n\n  private resetTrackClip(group?: IGroup) {\n    const container = group || (this.get('group') as IGroup);\n    const trackId = this.getElementId('track');\n    const trackShape = container.findById(trackId);\n    const clipShape = trackShape.getClip();\n    const attrs = this.getClipTrackAttrs(group);\n    if (!clipShape) {\n      trackShape.setClip({\n        type: 'rect',\n        attrs,\n      });\n    } else {\n      clipShape.attr(attrs);\n    }\n  }\n\n  private resetTrack(group: IGroup) {\n    const trackId = this.getElementId('track');\n    const trackShape = group.findById(trackId);\n    const trackAttrs = this.getTrackAttrs(group);\n    if (trackShape) {\n      trackShape.attr(trackAttrs);\n    } else {\n      this.addShape(group, {\n        type: 'path',\n        id: trackId,\n        draggable: this.get('slidable'),\n        name: 'legend-track',\n        attrs: trackAttrs,\n      });\n    }\n  }\n\n  private getPointByValue(value, group?: IGroup) {\n    const { min, max } = this.getRange();\n    const percent = (value - min) / (max - min);\n    const bbox = this.getRailBBox(group);\n    const isVertcal = this.isVertical();\n    const point = { x: 0, y: 0 };\n    if (isVertcal) {\n      point.x = bbox.minX + bbox.width / 2;\n      point.y = getValueByPercent(bbox.minY, bbox.maxY, percent);\n    } else {\n      point.x = getValueByPercent(bbox.minX, bbox.maxX, percent);\n      point.y = bbox.minY + bbox.height / 2;\n    }\n    return point;\n  }\n\n  private getRailShape(group?: IGroup) {\n    const container = group || (this.get('group') as IGroup);\n    return container.findById(this.getElementId('rail'));\n  }\n\n  // 获取滑轨的宽高信息\n  private getRailBBox(group?: IGroup): BBox {\n    const railShape = this.getRailShape(group);\n    const bbox = railShape.getBBox();\n    return bbox;\n  }\n\n  private getRailCanvasBBox(): BBox {\n    const container = this.get('group');\n    const railShape = container.findById(this.getElementId('rail'));\n    const bbox = railShape.getCanvasBBox();\n    return bbox;\n  }\n\n  // 是否垂直\n  private isVertical(): boolean {\n    return this.get('layout') === 'vertical';\n  }\n\n  // 用于交互时\n  private getValueByCanvasPoint(x, y) {\n    const { min, max } = this.getRange();\n    const bbox = this.getRailCanvasBBox(); // 因为 x, y 是画布坐标\n    const isVertcal = this.isVertical();\n    const step = this.get('step');\n    let percent;\n    if (isVertcal) {\n      // 垂直时计算 y\n      percent = (y - bbox.minY) / bbox.height;\n    } else {\n      // 水平时计算 x\n      percent = (x - bbox.minX) / bbox.width;\n    }\n    let value = getValueByPercent(min, max, percent);\n    if (step) {\n      const count = Math.round((value - min) / step);\n      value = min + count * step; // 移动到最近的\n    }\n    if (value > max) {\n      value = max;\n    }\n    if (value < min) {\n      value = min;\n    }\n    return value;\n  }\n\n  // 当前选中的范围\n  private getCurrentValue(): number[] {\n    const value = this.get('value');\n    if (!value) {\n      const values = this.get('values');\n      if (!values) {\n        return [this.get('min'), this.get('max')];\n      }\n      // 如果没有定义，取最大范围  最小值 为 values 中的最小值， 如果最小值 超过了 定义的最大值 则 做限制  最大值 反之\n      return [Math.max(Math.min(...values, this.get('max')), this.get('min')), Math.min(Math.max(...values, this.get('min')), this.get('max'))];\n    }\n    return value;\n  }\n\n  // 重置滑块 handler\n  private resetHandlers(group: IGroup) {\n    const currentValue = this.getCurrentValue();\n    const [min, max] = currentValue;\n    this.resetHandler(group, 'min', min);\n    this.resetHandler(group, 'max', max);\n  }\n  // 获取滑块的 path\n  private getHandlerPath(handlerCfg, point) {\n    const isVertical = this.isVertical();\n    const path = [];\n    const width = handlerCfg.size;\n    const { x, y } = point;\n    const height = width * HANDLER_HEIGHT_RATIO;\n    const halfWidth = width / 2;\n    const oneSixthWidth = width / 6;\n    if (isVertical) {\n      /**\n       * 竖直情况下的滑块 handler，左侧顶点是 x,y\n       *  /----|\n       *    -- |\n       *    -- |\n       *  \\----|\n       */\n      const triangleX = x + height * HANDLER_TRIANGLE_RATIO;\n      path.push(['M', x, y]);\n      path.push(['L', triangleX, y + halfWidth]);\n      path.push(['L', x + height, y + halfWidth]);\n      path.push(['L', x + height, y - halfWidth]);\n      path.push(['L', triangleX, y - halfWidth]);\n      path.push(['Z']);\n      // 绘制两条横线\n      path.push(['M', triangleX, y + oneSixthWidth]);\n      path.push(['L', x + height - 2, y + oneSixthWidth]);\n      path.push(['M', triangleX, y - oneSixthWidth]);\n      path.push(['L', x + height - 2, y - oneSixthWidth]);\n    } else {\n      /**\n       * 水平情况下的滑块，上面顶点处是 x,y\n       *  /   \\\n       * | | | |\n       * | | | |\n       *  -----\n       */\n      const triangleY = y + height * HANDLER_TRIANGLE_RATIO;\n      path.push(['M', x, y]);\n      path.push(['L', x - halfWidth, triangleY]);\n      path.push(['L', x - halfWidth, y + height]);\n      path.push(['L', x + halfWidth, y + height]);\n      path.push(['L', x + halfWidth, triangleY]);\n      path.push(['Z']);\n      // 绘制两条竖线\n      path.push(['M', x - oneSixthWidth, triangleY]);\n      path.push(['L', x - oneSixthWidth, y + height - 2]);\n      path.push(['M', x + oneSixthWidth, triangleY]);\n      path.push(['L', x + oneSixthWidth, y + height - 2]);\n    }\n    return path;\n  }\n\n  // 调整 handler 的位置，如果未存在则绘制\n  private resetHandler(group: IGroup, name, value) {\n    const point = this.getPointByValue(value, group);\n    const handlerCfg = this.get('handler');\n    const path = this.getHandlerPath(handlerCfg, point);\n    const id = this.getElementId(`handler-${name}`);\n    const handlerShape = group.findById(id);\n    const isVertical = this.isVertical();\n    if (handlerShape) {\n      handlerShape.attr('path', path);\n    } else {\n      this.addShape(group, {\n        type: 'path',\n        name: `legend-handler-${name}`,\n        draggable: true, // 可拖拽\n        id,\n        attrs: {\n          path,\n          ...handlerCfg.style,\n          cursor: isVertical ? 'ns-resize' : 'ew-resize',\n        },\n      });\n    }\n  }\n\n  // 当设置了 maxWidth, maxHeight 时调整 rail 的宽度，\n  // 文本的位置\n  private fixedElements(group: IGroup) {\n    const railShape = group.findById(this.getElementId('rail'));\n    const minLabel = group.findById(this.getElementId('label-min'));\n    const maxLabel = group.findById(this.getElementId('label-max'));\n    const startPoint = this.getDrawPoint();\n    if (this.isVertical()) {\n      // 横向布局\n      this.fixedVertail(minLabel, maxLabel, railShape, startPoint);\n    } else {\n      // 水平布局\n      this.fixedHorizontal(minLabel, maxLabel, railShape, startPoint);\n    }\n  }\n\n  private fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape) {\n    const isVertical = this.isVertical();\n    const lengthField = isVertical ? 'height' : 'width';\n    const labelCfg = this.get('label');\n    const labelAlign = labelCfg.align;\n    const spacing = labelCfg.spacing;\n    const maxLength = this.get(`max${upperFirst(lengthField)}`); // get('maxWidth')\n    if (maxLength) {\n      const elementsLength =\n        labelAlign === 'rail'\n          ? railBBox[lengthField] + minLabelBBox[lengthField] + maxLabelBBox[lengthField] + spacing * 2\n          : railBBox[lengthField];\n      const diff = elementsLength - maxLength;\n      if (diff > 0) {\n        // 大于限制的长度\n        this.changeRailLength(railShape, lengthField, railBBox[lengthField] - diff);\n      }\n    }\n  }\n\n  private changeRailLength(railShape, lengthField, length) {\n    const bbox = railShape.getBBox();\n    let path;\n    if (lengthField === 'height') {\n      path = this.getRailPath(bbox.x, bbox.y, bbox.width, length);\n    } else {\n      path = this.getRailPath(bbox.x, bbox.y, length, bbox.height);\n    }\n    railShape.attr('path', path);\n  }\n\n  private changeRailPosition(railShape, x, y) {\n    const bbox = railShape.getBBox();\n    const path = this.getRailPath(x, y, bbox.width, bbox.height);\n    railShape.attr('path', path);\n  }\n\n  private fixedHorizontal(minLabel: IElement, maxLabel: IElement, railShape: IElement, startPoint) {\n    const labelCfg = this.get('label');\n    const labelAlign = labelCfg.align;\n    const spacing = labelCfg.spacing;\n    let railBBox = railShape.getBBox();\n    const minLabelBBox = minLabel.getBBox();\n    const maxLabelBBox = maxLabel.getBBox();\n    const railHeight = railBBox.height; // 取 rail 的高度，作为高度\n    this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n    railBBox = railShape.getBBox();\n    if (labelAlign === 'rail') {\n      // 沿着 rail 方向\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railHeight / 2,\n      });\n      this.changeRailPosition(railShape, startPoint.x + minLabelBBox.width + spacing, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x + minLabelBBox.width + railBBox.width + spacing * 2,\n        y: startPoint.y + railHeight / 2,\n      });\n    } else if (labelAlign === 'top') {\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y,\n      });\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width,\n        y: startPoint.y,\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n    } else {\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railBBox.height + spacing,\n      });\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width,\n        y: startPoint.y + railBBox.height + spacing,\n      });\n    }\n  }\n\n  private fixedVertail(minLabel: IElement, maxLabel: IElement, railShape: IElement, startPoint) {\n    const labelCfg = this.get('label');\n    const labelAlign = labelCfg.align;\n    const spacing = labelCfg.spacing;\n    let railBBox = railShape.getBBox();\n    const minLabelBBox = minLabel.getBBox();\n    const maxLabelBBox = maxLabel.getBBox();\n    this.fitRailLength(minLabelBBox, maxLabelBBox, railBBox, railShape);\n    railBBox = railShape.getBBox();\n\n    if (labelAlign === 'rail') {\n      // 沿着 rail 方向\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y,\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y + minLabelBBox.height + spacing);\n      maxLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + minLabelBBox.height + railBBox.height + spacing * 2,\n      });\n    } else if (labelAlign === 'right') {\n      minLabel.attr({\n        x: startPoint.x + railBBox.width + spacing,\n        y: startPoint.y,\n      });\n      this.changeRailPosition(railShape, startPoint.x, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x + railBBox.width + spacing,\n        y: startPoint.y + railBBox.height,\n      });\n    } else {\n      // left\n      const maxLabelWidth = Math.max(minLabelBBox.width, maxLabelBBox.width);\n      minLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y,\n      });\n      this.changeRailPosition(railShape, startPoint.x + maxLabelWidth + spacing, startPoint.y);\n      maxLabel.attr({\n        x: startPoint.x,\n        y: startPoint.y + railBBox.height,\n      });\n    }\n  }\n}\n\nexport default ContinueLegend;\n","import { addEventListener } from '@antv/dom-util';\nimport { Event, IGroup } from '@antv/g-base';\nimport { clamp, deepMix, get, noop } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { ISlider } from '../interfaces';\nimport { GroupComponentCfg, Range } from '../types';\n\nexport interface ScrollbarStyle {\n  trackColor: string;\n  thumbColor: string;\n  size: number;\n  lineCap: string;\n}\n\nexport interface ScrollbarTheme {\n  default?: Partial<Readonly<ScrollbarStyle>>;\n  hover?: Pick<Readonly<ScrollbarStyle>, 'thumbColor'>;\n}\n\nconst DEFAULT_STYLE: ScrollbarStyle = {\n  trackColor: 'rgba(0,0,0,0)',\n  thumbColor: 'rgba(0,0,0,0.15)',\n  size: 8,\n  lineCap: 'round',\n};\n\nexport const DEFAULT_THEME: ScrollbarTheme = {\n  // 默认样式\n  default: DEFAULT_STYLE,\n  // 鼠标 hover 的样式\n  hover: {\n    thumbColor: 'rgba(0,0,0,0.2)',\n  },\n};\n\nexport interface ScrollbarCfg extends GroupComponentCfg {\n  // scrollBar 的位置\n  x: number;\n  y: number;\n  // 滚动条的布局，横向 | 纵向, 非必传，默认为 false(纵向)\n  isHorizontal?: boolean;\n  // 滑道长度，必传\n  trackLen: number;\n  // 滑块长度，必传\n  thumbLen: number;\n  // 滑块的最小长度，非必传，默认值为 20\n  minThumbLen?: number;\n  // 滑块相对滑道的偏移, 非必传，默认值为 0\n  thumbOffset?: number;\n  // 滚动条大小（横向代表高度，纵向代表宽度），优先级大于 theme\n  size?: number;\n  // 滚动条样式，非必传\n  theme?: ScrollbarTheme;\n\n  minLimit?: number;\n  maxLimit?: number;\n}\n\nexport class Scrollbar extends GroupComponent<ScrollbarCfg> implements ISlider {\n  public cfg: ScrollbarCfg;\n  // 通过拖拽开始的事件是 mousedown 还是 touchstart 来决定是移动端还是 pc 端\n  private isMobile: boolean;\n  private clearEvents = noop;\n  private startPos: number;\n\n  public setRange(min: number, max: number) {\n    this.set('minLimit', min);\n    this.set('maxLimit', max);\n    const curValue = this.getValue();\n    const newValue = clamp(curValue, min, max);\n    if (curValue !== newValue && !this.get('isInit')) {\n      this.setValue(newValue);\n    }\n  }\n\n  public getRange(): Range {\n    const min: number = this.get('minLimit') || 0;\n    const max: number = this.get('maxLimit') || 1;\n\n    return { min, max };\n  }\n\n  public setValue(value: number) {\n    const range = this.getRange();\n    const originalValue = this.getValue();\n    this.update({\n      thumbOffset: (this.get('trackLen') - this.get('thumbLen')) * clamp(value, range.min, range.max),\n    });\n    this.delegateEmit('valuechange', {\n      originalValue,\n      value: this.getValue(),\n    });\n  }\n\n  public getValue(): number {\n    return clamp(this.get('thumbOffset') / (this.get('trackLen') - this.get('thumbLen')), 0, 1);\n  }\n\n  public getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    return {\n      ...cfg,\n      name: 'scrollbar',\n      isHorizontal: true,\n      minThumbLen: 20,\n      thumbOffset: 0,\n      theme: DEFAULT_THEME,\n    };\n  }\n\n  protected renderInner(group: IGroup) {\n    this.renderTrackShape(group);\n    this.renderThumbShape(group);\n  }\n\n  protected applyOffset() {\n    this.moveElementTo(this.get('group'), {\n      x: this.get('x'),\n      y: this.get('y'),\n    });\n  }\n\n  protected initEvent() {\n    this.bindEvents();\n  }\n\n  // 创建滑道的 shape\n  private renderTrackShape(group: IGroup) {\n    const { trackLen, theme = { default: {} } } = this.cfg;\n    const { lineCap, trackColor, size: themeSize } = deepMix({}, DEFAULT_THEME, theme).default;\n    const size = get(this.cfg, 'size', themeSize);\n\n    const attrs = this.get('isHorizontal')\n      ? {\n          x1: 0 + size / 2,\n          y1: size / 2,\n          x2: trackLen - size / 2,\n          y2: size / 2,\n          lineWidth: size,\n          stroke: trackColor,\n          lineCap,\n        }\n      : {\n          x1: size / 2,\n          y1: 0 + size / 2,\n          x2: size / 2,\n          y2: trackLen - size / 2,\n          lineWidth: size,\n          stroke: trackColor,\n          lineCap,\n        };\n    return this.addShape(group, {\n      id: this.getElementId('track'),\n      name: 'track',\n      type: 'line',\n      attrs,\n    });\n  }\n\n  // 创建滑块的 shape\n  private renderThumbShape(group: IGroup) {\n    const { thumbOffset, thumbLen, theme } = this.cfg;\n    const { size: themeSize, lineCap, thumbColor } = deepMix({}, DEFAULT_THEME, theme).default;\n    const size = get(this.cfg, 'size', themeSize);\n\n    const attrs = this.get('isHorizontal')\n      ? {\n          x1: thumbOffset + size / 2,\n          y1: size / 2,\n          x2: thumbOffset + thumbLen - size / 2,\n          y2: size / 2,\n          lineWidth: size,\n          stroke: thumbColor,\n          lineCap,\n          cursor: 'default',\n        }\n      : {\n          x1: size / 2,\n          y1: thumbOffset + size / 2,\n          x2: size / 2,\n          y2: thumbOffset + thumbLen - size / 2,\n          lineWidth: size,\n          stroke: thumbColor,\n          lineCap,\n          cursor: 'default',\n        };\n    return this.addShape(group, {\n      id: this.getElementId('thumb'),\n      name: 'thumb',\n      type: 'line',\n      attrs,\n    });\n  }\n\n  private bindEvents() {\n    const group: IGroup = this.get('group');\n    group.on('mousedown', this.onStartEvent(false));\n    group.on('mouseup', this.onMouseUp);\n\n    group.on('touchstart', this.onStartEvent(true));\n    group.on('touchend', this.onMouseUp);\n\n    const trackShape = group.findById(this.getElementId('track'));\n    trackShape.on('click', this.onTrackClick);\n    const thumbShape = group.findById(this.getElementId('thumb'));\n    thumbShape.on('mouseover', this.onThumbMouseOver);\n    thumbShape.on('mouseout', this.onThumbMouseOut);\n  }\n\n  private onStartEvent = (isMobile: boolean) => (e: Event) => {\n    this.isMobile = isMobile;\n    e.originalEvent.preventDefault();\n    const clientX = isMobile ? get(e.originalEvent, 'touches.0.clientX') : e.clientX;\n    const clientY = isMobile ? get(e.originalEvent, 'touches.0.clientY') : e.clientY;\n\n    // 将开始的点记录下来\n    this.startPos = this.cfg.isHorizontal ? clientX : clientY;\n\n    this.bindLaterEvent();\n  };\n\n  private bindLaterEvent = () => {\n    const containerDOM = this.getContainerDOM();\n    let events = [];\n\n    if (this.isMobile) {\n      events = [\n        addEventListener(containerDOM, 'touchmove', this.onMouseMove),\n        addEventListener(containerDOM, 'touchend', this.onMouseUp),\n        addEventListener(containerDOM, 'touchcancel', this.onMouseUp),\n      ];\n    } else {\n      events = [\n        addEventListener(containerDOM, 'mousemove', this.onMouseMove),\n        addEventListener(containerDOM, 'mouseup', this.onMouseUp),\n        // 为了保证划出 canvas containerDom 时还没触发 mouseup\n        addEventListener(containerDOM, 'mouseleave', this.onMouseUp),\n      ];\n    }\n    this.clearEvents = () => {\n      events.forEach((e) => {\n        e.remove();\n      });\n    };\n  };\n\n  // 拖拽滑块的事件回调\n  // 这里是 dom 原生事件，绑定在 dom 元素上的\n  private onMouseMove = (e: MouseEvent) => {\n    const { isHorizontal, thumbOffset } = this.cfg;\n    e.preventDefault();\n    const clientX = this.isMobile ? get(e, 'touches.0.clientX') : e.clientX;\n    const clientY = this.isMobile ? get(e, 'touches.0.clientY') : e.clientY;\n    // 鼠标松开的位置\n    const endPos = isHorizontal ? clientX : clientY;\n    // 滑块需要移动的距离, 由于这里是对滑块监听，所以移动的距离就是 diffDis, 如果监听对象是 container dom，则需要算比例\n    const diff = endPos - this.startPos;\n    // 更新 _startPos\n    this.startPos = endPos;\n\n    this.updateThumbOffset(thumbOffset + diff);\n  };\n\n  private onMouseUp = (e: Event) => {\n    e.preventDefault();\n    this.clearEvents();\n  };\n\n  // 点击滑道的事件回调,移动滑块位置\n  private onTrackClick = (e: Event) => {\n    const { isHorizontal, x, y, thumbLen } = this.cfg;\n    const containerDOM = this.getContainerDOM();\n    const rect = containerDOM.getBoundingClientRect();\n    const { clientX, clientY } = e;\n    const offset = isHorizontal ? clientX - rect.left - x - thumbLen / 2 : clientY - rect.top - y - thumbLen / 2;\n\n    const newOffset = this.validateRange(offset);\n    this.updateThumbOffset(newOffset);\n  };\n\n  private onThumbMouseOver = () => {\n    const { thumbColor } = this.cfg.theme.hover;\n    this.getElementByLocalId('thumb').attr('stroke', thumbColor);\n    this.draw();\n  };\n\n  private onThumbMouseOut = () => {\n    const { thumbColor } = this.cfg.theme.default;\n    this.getElementByLocalId('thumb').attr('stroke', thumbColor);\n    this.draw();\n  };\n\n  private getContainerDOM() {\n    const container = this.get('container');\n    const canvas = container && container.get('canvas');\n\n    return canvas && canvas.get('container');\n  }\n\n  private validateRange(offset: number) {\n    const { thumbLen, trackLen } = this.cfg;\n    let newOffset = offset;\n    if (offset + thumbLen > trackLen) {\n      newOffset = trackLen - thumbLen;\n    } else if (offset + thumbLen < thumbLen) {\n      newOffset = 0;\n    }\n    return newOffset;\n  }\n\n  private draw() {\n    const container = this.get('container');\n    const canvas = container && container.get('canvas');\n\n    if (canvas) {\n      canvas.draw();\n    }\n  }\n\n  private updateThumbOffset(offset: number) {\n    const { thumbOffset, isHorizontal, thumbLen, size } = this.cfg;\n    const newOffset = this.validateRange(offset);\n    if (newOffset === thumbOffset) {\n      // 如果更新后的 offset 与原值相同，则不改变\n      return;\n    }\n    const thumbShape = this.getElementByLocalId('thumb');\n\n    if (isHorizontal) {\n      thumbShape.attr({\n        x1: newOffset + size / 2,\n        x2: newOffset + thumbLen - size / 2,\n      });\n    } else {\n      thumbShape.attr({\n        y1: newOffset + size / 2,\n        y2: newOffset + thumbLen - size / 2,\n      });\n    }\n    this.emitOffsetChange(newOffset);\n  }\n\n  private emitOffsetChange(offset: number) {\n    const { thumbOffset: originalValue, trackLen, thumbLen } = this.cfg;\n    this.cfg.thumbOffset = offset;\n    // 发送事件\n    this.emit('scrollchange', {\n      thumbOffset: offset,\n      ratio: clamp(offset / (trackLen - thumbLen), 0, 1),\n    });\n    this.delegateEmit('valuechange', {\n      originalValue,\n      value: offset,\n    });\n  }\n}\n","import { IGroup } from '@antv/g-base';\nimport GroupComponent from '../abstract/group-component';\nimport { GroupComponentCfg } from '../types';\n\ninterface IStyle {\n  fill?: string;\n  stroke?: string;\n  radius?: number;\n  opacity?: number;\n  cursor?: string;\n  highLightFill?: string;\n}\n\nexport interface HandlerCfg extends GroupComponentCfg {\n  // position size\n  readonly x: number;\n  readonly y: number;\n  readonly width: number;\n  readonly height: number;\n  // style\n  readonly style?: IStyle;\n}\n\nexport const DEFAULT_HANDLER_STYLE = {\n  fill: '#F7F7F7',\n  stroke: '#BFBFBF',\n  radius: 2,\n  opacity: 1,\n  cursor: 'ew-resize',\n  // 高亮的颜色\n  highLightFill: '#FFF',\n};\n\nexport class Handler extends GroupComponent<HandlerCfg> {\n  public getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    return {\n      ...cfg,\n      name: 'handler',\n      x: 0,\n      y: 0,\n      width: 10,\n      height: 24,\n      style: DEFAULT_HANDLER_STYLE,\n    };\n  }\n  protected renderInner(group: IGroup) {\n    const { width, height, style } = this.cfg as HandlerCfg;\n    const { fill, stroke, radius, opacity, cursor } = style;\n\n    // 按钮框框\n    this.addShape(group, {\n      type: 'rect',\n      id: this.getElementId('background'),\n      attrs: {\n        x: 0,\n        y: 0,\n        width,\n        height,\n        fill,\n        stroke,\n        radius,\n        opacity,\n        cursor,\n      },\n    });\n\n    // 两根竖线\n    const x1 = (1 / 3) * width;\n    const x2 = (2 / 3) * width;\n\n    const y1 = (1 / 4) * height;\n    const y2 = (3 / 4) * height;\n\n    this.addShape(group, {\n      id: this.getElementId('line-left'),\n      type: 'line',\n      attrs: {\n        x1,\n        y1,\n        x2: x1,\n        y2,\n        stroke,\n        cursor,\n      },\n    });\n\n    this.addShape(group, {\n      id: this.getElementId('line-right'),\n      type: 'line',\n      attrs: {\n        x1: x2,\n        y1,\n        x2,\n        y2,\n        stroke,\n        cursor,\n      },\n    });\n  }\n\n  protected applyOffset() {\n    this.moveElementTo(this.get('group'), {\n      x: this.get('x'),\n      y: this.get('y'),\n    });\n  }\n\n  protected initEvent() {\n    this.bindEvents();\n  }\n\n  private bindEvents() {\n    this.get('group').on('mouseenter', () => {\n      const { highLightFill } = this.get('style');\n      this.getElementByLocalId('background').attr('fill', highLightFill);\n\n      this.draw();\n    });\n\n    this.get('group').on('mouseleave', () => {\n      const { fill } = this.get('style');\n      this.getElementByLocalId('background').attr('fill', fill);\n\n      this.draw();\n    });\n  }\n\n  private draw() {\n    const canvas = this.get('container').get('canvas');\n    if (canvas) {\n      canvas.draw();\n    }\n  }\n}\n\nexport default Handler;\n","/**\n * 一些默认的样式配置\n */\n\nexport const BACKGROUND_STYLE = {\n  fill: '#416180',\n  opacity: 0.05,\n};\n\nexport const FOREGROUND_STYLE = {\n  fill: '#5B8FF9',\n  opacity: 0.15,\n  cursor: 'move',\n};\n\nexport const DEFAULT_HANDLER_WIDTH = 10;\n\nexport const HANDLER_STYLE = {\n  width: DEFAULT_HANDLER_WIDTH,\n  height: 24,\n};\n\nexport const TEXT_STYLE = {\n  textBaseline: 'middle',\n  fill: '#000',\n  opacity: 0.45,\n};\n\nexport const SLIDER_CHANGE = 'sliderchange';\n","import { Event, IGroup, IShape } from '@antv/g-base';\nimport { clamp, deepMix, each, get, isArray, isNil, size } from '@antv/util';\nimport GroupComponent from '../abstract/group-component';\nimport { ISlider } from '../interfaces';\nimport { Trend } from '../trend/trend';\nimport { DEFAULT_HANDLER_STYLE, Handler, HandlerCfg } from './handler';\nimport { GroupComponentCfg, Range } from '../types';\nimport {\n  BACKGROUND_STYLE,\n  DEFAULT_HANDLER_WIDTH,\n  FOREGROUND_STYLE,\n  HANDLER_STYLE,\n  SLIDER_CHANGE,\n  TEXT_STYLE,\n} from './constant';\n\nexport interface TrendCfg {\n  // 数据\n  readonly data: number[];\n  // 样式\n  readonly smooth?: boolean;\n  readonly isArea?: boolean;\n  readonly backgroundStyle?: object;\n  readonly lineStyle?: object;\n  readonly areaStyle?: object;\n}\n\n/**\n * slider handler style 设置\n */\ntype HandlerStyle = HandlerCfg['style'] & {\n  readonly width?: number;\n  readonly height?: number;\n};\n\nexport interface SliderCfg extends GroupComponentCfg {\n  // position size\n  readonly x: number;\n  readonly y: number;\n  readonly width: number;\n  readonly height: number;\n\n  // style\n  readonly trendCfg?: TrendCfg;\n  readonly backgroundStyle?: any;\n  readonly foregroundStyle?: any;\n  readonly handlerStyle?: HandlerStyle;\n  readonly textStyle?: any;\n  // 允许滑动位置\n  readonly minLimit?: number;\n  readonly maxLimit?: number;\n  // 初始位置\n  readonly start?: number;\n  readonly end?: number;\n  // 滑块文本\n  readonly minText?: string;\n  readonly maxText?: string;\n}\n\nexport class Slider extends GroupComponent<SliderCfg> implements ISlider {\n  public cfg: SliderCfg;\n\n  private minHandler: Handler;\n  private maxHandler: Handler;\n  private trend: Trend;\n  private currentTarget: string;\n  private prevX: number;\n  private prevY: number;\n\n  public setRange(min: number, max: number) {\n    this.set('minLimit', min);\n    this.set('maxLimit', max);\n    const oldStart = this.get('start');\n    const oldEnd = this.get('end');\n    const newStart = clamp(oldStart, min, max);\n    const newEnd = clamp(oldEnd, min, max);\n    if (!this.get('isInit') && (oldStart !== newStart || oldEnd !== newEnd)) {\n      this.setValue([newStart, newEnd]);\n    }\n  }\n\n  public getRange(): Range {\n    return {\n      min: this.get('minLimit') || 0,\n      max: this.get('maxLimit') || 1,\n    };\n  }\n\n  public setValue(value: number | number[]) {\n    const range = this.getRange();\n    if (isArray(value) && value.length === 2) {\n      const originValue = [this.get('start'), this.get('end')];\n      this.update({\n        start: clamp(value[0], range.min, range.max),\n        end: clamp(value[1], range.min, range.max),\n      });\n      if (!this.get('updateAutoRender')) {\n        this.render();\n      }\n      this.delegateEmit('valuechanged', {\n        originValue,\n        value,\n      });\n    }\n  }\n\n  public getValue(): number | number[] {\n    return [this.get('start'), this.get('end')];\n  }\n\n  public getDefaultCfg() {\n    const cfg = super.getDefaultCfg();\n    return {\n      ...cfg,\n      name: 'slider',\n      x: 0,\n      y: 0,\n      width: 100,\n      height: 16,\n      backgroundStyle: {},\n      foregroundStyle: {},\n      handlerStyle: {},\n      textStyle: {},\n      defaultCfg: {\n        backgroundStyle: BACKGROUND_STYLE,\n        foregroundStyle: FOREGROUND_STYLE,\n        handlerStyle: HANDLER_STYLE,\n        textStyle: TEXT_STYLE,\n      },\n    };\n  }\n\n  public update(cfg: Partial<SliderCfg>) {\n    const { start, end } = cfg;\n    const validCfg = { ...cfg };\n    if (!isNil(start)) {\n      validCfg.start = clamp(start, 0, 1);\n    }\n    if (!isNil(end)) {\n      validCfg.end = clamp(end, 0, 1);\n    }\n    super.update(validCfg);\n    this.minHandler = this.getChildComponentById(this.getElementId('minHandler'));\n    this.maxHandler = this.getChildComponentById(this.getElementId('maxHandler'));\n    this.trend = this.getChildComponentById(this.getElementId('trend'));\n  }\n\n  public init() {\n    this.set('start', clamp(this.get('start'), 0, 1));\n    this.set('end', clamp(this.get('end'), 0, 1));\n    super.init();\n  }\n\n  public render() {\n    super.render();\n\n    this.updateUI(\n      this.getElementByLocalId('foreground'),\n      this.getElementByLocalId('minText'),\n      this.getElementByLocalId('maxText')\n    );\n  }\n\n  protected renderInner(group: IGroup) {\n    const {\n      start,\n      end,\n      width,\n      height,\n      trendCfg = {},\n      minText,\n      maxText,\n      backgroundStyle = {},\n      foregroundStyle = {},\n      textStyle = {},\n    } = this.cfg;\n\n    const handlerStyle = deepMix({}, DEFAULT_HANDLER_STYLE, this.cfg.handlerStyle);\n\n    const min = start * width;\n    const max = end * width;\n\n    // 趋势图数据\n    if (size(get(trendCfg, 'data'))) {\n      this.trend = this.addComponent(group, {\n        component: Trend,\n        id: this.getElementId('trend'),\n        x: 0,\n        y: 0,\n        width,\n        height,\n        ...trendCfg,\n      });\n    }\n\n    // 1. 背景\n    this.addShape(group, {\n      id: this.getElementId('background'),\n      type: 'rect',\n      attrs: {\n        x: 0,\n        y: 0,\n        width,\n        height,\n        ...backgroundStyle,\n      },\n    });\n\n    // 2. 左右文字\n    const minTextShape = this.addShape(group, {\n      id: this.getElementId('minText'),\n      type: 'text',\n      attrs: {\n        // x: 0,\n        y: height / 2,\n        textAlign: 'right',\n        text: minText,\n        silent: false,\n        ...textStyle,\n      },\n    });\n\n    const maxTextShape = this.addShape(group, {\n      id: this.getElementId('maxText'),\n      type: 'text',\n      attrs: {\n        // x: 0,\n        y: height / 2,\n        textAlign: 'left',\n        text: maxText,\n        silent: false,\n        ...textStyle,\n      },\n    });\n\n    // 3. 前景 选中背景框\n    const foregroundShape = this.addShape(group, {\n      id: this.getElementId('foreground'),\n      name: 'foreground',\n      type: 'rect',\n      attrs: {\n        // x: 0,\n        y: 0,\n        // width: 0,\n        height,\n        ...foregroundStyle,\n      },\n    });\n\n    // 滑块相关的大小信息\n    const handlerWidth = get(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n    const handlerHeight = get(handlerStyle, 'height', 24);\n\n    // 4. 左右滑块\n    this.minHandler = this.addComponent(group, {\n      component: Handler,\n      id: this.getElementId('minHandler'),\n      name: 'handler-min',\n      x: 0,\n      y: (height - handlerHeight) / 2,\n      width: handlerWidth,\n      height: handlerHeight,\n      cursor: 'ew-resize',\n      style: handlerStyle,\n    });\n\n    this.maxHandler = this.addComponent(group, {\n      component: Handler,\n      id: this.getElementId('maxHandler'),\n      name: 'handler-max',\n      x: 0,\n      y: (height - handlerHeight) / 2,\n      width: handlerWidth,\n      height: handlerHeight,\n      cursor: 'ew-resize',\n      style: handlerStyle,\n    });\n  }\n\n  protected applyOffset() {\n    this.moveElementTo(this.get('group'), {\n      x: this.get('x'),\n      y: this.get('y'),\n    });\n  }\n\n  protected initEvent() {\n    this.bindEvents();\n  }\n\n  private updateUI(foregroundShape: IShape, minTextShape: IShape, maxTextShape: IShape) {\n    const { start, end, width, minText, maxText, handlerStyle, height } = this.cfg as SliderCfg;\n    const min = start * width;\n    const max = end * width;\n\n    if (this.trend) {\n      this.trend.update({\n        width,\n        height,\n      });\n      if (!this.get('updateAutoRender')) {\n        this.trend.render();\n      }\n    }\n\n    // 1. foreground\n    foregroundShape.attr('x', min);\n    foregroundShape.attr('width', max - min);\n\n    // 滑块相关的大小信息\n    const handlerWidth = get(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n\n    // 设置文本\n    minTextShape.attr('text', minText);\n    maxTextShape.attr('text', maxText);\n\n    const [minAttrs, maxAttrs] = this._dodgeText([min, max], minTextShape, maxTextShape);\n    // 2. 左侧滑块和文字位置\n    if (this.minHandler) {\n      this.minHandler.update({\n        x: min - handlerWidth / 2,\n      });\n      if (!this.get('updateAutoRender')) {\n        this.minHandler.render();\n      }\n    }\n    each(minAttrs, (v, k) => minTextShape.attr(k, v));\n\n    // 3. 右侧滑块和文字位置\n    if (this.maxHandler) {\n      this.maxHandler.update({\n        x: max - handlerWidth / 2,\n      });\n      if (!this.get('updateAutoRender')) {\n        this.maxHandler.render();\n      }\n    }\n    each(maxAttrs, (v, k) => maxTextShape.attr(k, v));\n  }\n\n  private bindEvents() {\n    const group: IGroup = this.get('group');\n\n    group.on('handler-min:mousedown', this.onMouseDown('minHandler'));\n    group.on('handler-min:touchstart', this.onMouseDown('minHandler'));\n\n    // 2. 右滑块的滑动\n    group.on('handler-max:mousedown', this.onMouseDown('maxHandler'));\n    group.on('handler-max:touchstart', this.onMouseDown('maxHandler'));\n\n    // 3. 前景选中区域\n    const foreground = group.findById(this.getElementId('foreground'));\n    foreground.on('mousedown', this.onMouseDown('foreground'));\n    foreground.on('touchstart', this.onMouseDown('foreground'));\n  }\n\n  private onMouseDown = (target: string) => (e: Event) => {\n    this.currentTarget = target;\n    // 取出原生事件\n    const event = e.originalEvent as MouseEvent;\n\n    // 2. 存储当前点击位置\n    event.stopPropagation();\n    event.preventDefault();\n\n    // 兼容移动端获取数据\n    this.prevX = get(event, 'touches.0.pageX', event.pageX);\n    this.prevY = get(event, 'touches.0.pageY', event.pageY);\n\n    // 3. 开始滑动的时候，绑定 move 和 up 事件\n    const containerDOM = this.getContainerDOM();\n\n    containerDOM.addEventListener('mousemove', this.onMouseMove);\n    containerDOM.addEventListener('mouseup', this.onMouseUp);\n    containerDOM.addEventListener('mouseleave', this.onMouseUp);\n\n    // 移动端事件\n    containerDOM.addEventListener('touchmove', this.onMouseMove);\n    containerDOM.addEventListener('touchend', this.onMouseUp);\n    containerDOM.addEventListener('touchcancel', this.onMouseUp);\n  };\n\n  private onMouseMove = (event: MouseEvent) => {\n    const { width } = this.cfg as SliderCfg;\n    const originValue = [this.get('start'), this.get('end')];\n    // 滑动过程中，计算偏移，更新滑块，然后 emit 数据出去\n    event.stopPropagation();\n    event.preventDefault();\n\n    const x = get(event, 'touches.0.pageX', event.pageX);\n    const y = get(event, 'touches.0.pageY', event.pageY);\n\n    // 横向的 slider 只处理 x\n    const offsetX = x - this.prevX;\n\n    const offsetXRange = this.adjustOffsetRange(offsetX / width);\n\n    // 更新 start end range 范围\n    this.updateStartEnd(offsetXRange);\n    // 更新 ui\n    this.updateUI(\n      this.getElementByLocalId('foreground'),\n      this.getElementByLocalId('minText'),\n      this.getElementByLocalId('maxText')\n    );\n\n    this.prevX = x;\n    this.prevY = y;\n\n    this.draw();\n\n    // 因为存储的 start、end 可能不一定是按大小存储的，所以排序一下，对外是 end >= start\n    this.emit(SLIDER_CHANGE, [this.get('start'), this.get('end')].sort());\n    this.delegateEmit('valuechanged', {\n      originValue,\n      value: [this.get('start'), this.get('end')],\n    });\n  };\n\n  private onMouseUp = () => {\n    // 结束之后，取消绑定的事件\n    if (this.currentTarget) {\n      this.currentTarget = undefined;\n    }\n\n    const containerDOM = this.getContainerDOM();\n    if (containerDOM) {\n      containerDOM.removeEventListener('mousemove', this.onMouseMove);\n      containerDOM.removeEventListener('mouseup', this.onMouseUp);\n      // 防止滑动到 canvas 外部之后，状态丢失\n      containerDOM.removeEventListener('mouseleave', this.onMouseUp);\n\n      // 移动端事件\n      containerDOM.removeEventListener('touchmove', this.onMouseMove);\n      containerDOM.removeEventListener('touchend', this.onMouseUp);\n      containerDOM.removeEventListener('touchcancel', this.onMouseUp);\n    }\n  };\n\n  /**\n   * 调整 offsetRange，因为一些范围的限制\n   * @param offsetRange\n   */\n  private adjustOffsetRange(offsetRange: number): number {\n    const { start, end } = this.cfg as SliderCfg;\n    // 针对不同的滑动组件，处理的方式不同\n    switch (this.currentTarget) {\n      case 'minHandler': {\n        const min = 0 - start;\n        const max = 1 - start;\n\n        return Math.min(max, Math.max(min, offsetRange));\n      }\n      case 'maxHandler': {\n        const min = 0 - end;\n        const max = 1 - end;\n\n        return Math.min(max, Math.max(min, offsetRange));\n      }\n      case 'foreground': {\n        const min = 0 - start;\n        const max = 1 - end;\n\n        return Math.min(max, Math.max(min, offsetRange));\n      }\n    }\n  }\n\n  private updateStartEnd(offsetRange: number) {\n    let { start, end } = this.cfg as SliderCfg;\n    // 操作不同的组件，反馈不一样\n    switch (this.currentTarget) {\n      case 'minHandler':\n        start += offsetRange;\n        break;\n      case 'maxHandler':\n        end += offsetRange;\n        break;\n      case 'foreground':\n        start += offsetRange;\n        end += offsetRange;\n        break;\n    }\n    this.set('start', start);\n    this.set('end', end);\n  }\n\n  /**\n   * 调整 text 的位置，自动躲避\n   * 根据位置，调整返回新的位置\n   * @param range\n   */\n  private _dodgeText(range: [number, number], minTextShape, maxTextShape): [object, object] {\n    const { handlerStyle, width } = this.cfg as SliderCfg;\n    const PADDING = 2;\n    const handlerWidth = get(handlerStyle, 'width', DEFAULT_HANDLER_WIDTH);\n\n    let [min, max] = range;\n    let sorted = false;\n\n    // 如果交换了位置，则对应的 min max 也交互\n    if (min > max) {\n      [min, max] = [max, min];\n      [minTextShape, maxTextShape] = [maxTextShape, minTextShape];\n      sorted = true;\n    }\n\n    // 避让规则，优先显示在两侧，只有显示不下的时候，才显示在中间\n    const minBBox = minTextShape.getBBox();\n    const maxBBox = maxTextShape.getBBox();\n\n    const minAttrs =\n      minBBox.width > min - PADDING\n        ? { x: min + handlerWidth / 2 + PADDING, textAlign: 'left' }\n        : { x: min - handlerWidth / 2 - PADDING, textAlign: 'right' };\n\n    const maxAttrs =\n      maxBBox.width > width - max - PADDING\n        ? { x: max - handlerWidth / 2 - PADDING, textAlign: 'right' }\n        : { x: max + handlerWidth / 2 + PADDING, textAlign: 'left' };\n\n    return !sorted ? [minAttrs, maxAttrs] : [maxAttrs, minAttrs];\n  }\n\n  public draw() {\n    const container = this.get('container');\n    const canvas = container && container.get('canvas');\n    if (canvas) {\n      canvas.draw();\n    }\n  }\n\n  private getContainerDOM() {\n    const container = this.get('container');\n    const canvas = container && container.get('canvas');\n\n    return canvas && canvas.get('container');\n  }\n}\n\nexport default Slider;\n"],"names":["__extends","ContinueLegend","cfg","_super","getDefaultCfg","call","type","min","max","value","colors","track","rail","label","handler","slidable","tip","step","maxWidth","maxHeight","defaultCfg","align","spacing","formatter","style","fontSize","fill","Theme","textBaseline","fontFamily","size","stroke","defaultLength","title","textAlign","this","getCurrentValue","get","update","originValue","getValue","set","group","resetTrackClip","resetHandlers","delegateEmit","bindSliderEvent","bindRailEvent","bindTrackEvent","drawRail","drawLabels","fixedElements","resetTrack","bindHandlersEvent","on","ev","minValue","_this","getValueByCanvasPoint","x","y","maxValue","setValue","prePoint","preValue","curValue","currentValue","curDiff","range","getRange","dValue","drawLabel","name","labelCfg","labelAlign","labelFormatter","alignAttrs","getLabelAlignAttrs","localId","addShape","id","getElementId","attrs","text","isFunction","isVertical","w","h","railCfg","width","height","path","push","getRailPath","color","count","length","i","getRailShape","attr","clone","railBBox","getRailBBox","startPoint","getPointByValue","endPoint","minX","minY","trackCfg","getTrackPath","mix","getTrackColor","container","trackId","trackShape","findById","clipShape","getClip","getClipTrackAttrs","setClip","trackAttrs","getTrackAttrs","draggable","percent","bbox","point","getValueByPercent","maxY","maxX","getBBox","getCanvasBBox","getRailCanvasBBox","isVertcal","Math","round","values","apply","__spreadArrays","resetHandler","handlerCfg","halfWidth","oneSixthWidth","triangleX","triangleY","getHandlerPath","handlerShape","cursor","railShape","minLabel","maxLabel","getDrawPoint","fixedVertail","fixedHorizontal","minLabelBBox","maxLabelBBox","lengthField","maxLength","upperFirst","diff","changeRailLength","railHeight","fitRailLength","changeRailPosition","maxLabelWidth","LegendBase","DEFAULT_THEME","default","trackColor","thumbColor","lineCap","hover","noop","isMobile","e","originalEvent","preventDefault","clientX","clientY","startPos","isHorizontal","bindLaterEvent","containerDOM","getContainerDOM","events","addEventListener","onMouseMove","onMouseUp","clearEvents","forEach","remove","thumbOffset","endPos","updateThumbOffset","thumbLen","rect","getBoundingClientRect","offset","left","top","newOffset","validateRange","theme","getElementByLocalId","draw","Scrollbar","newValue","clamp","originalValue","minThumbLen","renderTrackShape","renderThumbShape","moveElementTo","bindEvents","trackLen","_b","deepMix","themeSize","x1","y1","x2","y2","lineWidth","onStartEvent","onTrackClick","thumbShape","onThumbMouseOver","onThumbMouseOut","canvas","emitOffsetChange","emit","ratio","GroupComponent","DEFAULT_HANDLER_STYLE","radius","opacity","highLightFill","Handler","BACKGROUND_STYLE","FOREGROUND_STYLE","HANDLER_STYLE","TEXT_STYLE","SLIDER_CHANGE","target","currentTarget","event","stopPropagation","prevX","pageX","prevY","pageY","offsetX","offsetXRange","adjustOffsetRange","updateStartEnd","updateUI","sort","undefined","removeEventListener","Slider","oldStart","oldEnd","newStart","newEnd","isArray","start","end","render","backgroundStyle","foregroundStyle","handlerStyle","textStyle","validCfg","isNil","minHandler","getChildComponentById","maxHandler","trend","init","trendCfg","minText","maxText","_c","_d","_e","addComponent","__assign","component","Trend","silent","handlerWidth","handlerHeight","foregroundShape","minTextShape","maxTextShape","_dodgeText","minAttrs","maxAttrs","each","v","k","onMouseDown","foreground","offsetRange","sorted","_a","minBBox","maxBBox"],"sourceRoot":""}