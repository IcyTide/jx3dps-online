{"version":3,"file":"static/js/main~c7818f00.c85ac56f.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/dpsRes/components/BuffCountModal/util.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/titai/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/ruiyi/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/dpsRes/components/SkillCountModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/dpsRes/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/components/StatusBar/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/StatusBar/dpsRes/components/BuffCountModal/util.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/StatusBar/jian/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/StatusBar/dpsRes/components/SkillCountModal.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/StatusBar/dpsRes/index.tsx","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/components/StatusBar/index.tsx"],"sourcesContent":["import { 循环日志数据类型 } from '../../../../../simulator/type'\n\nconst 过滤的buff列表 = ['长溯']\n\nexport const 获取Buff覆盖率 = (日志: 循环日志数据类型[], 总战斗用时: number) => {\n  // 以buff个体分类，组成数字数组代表buff持续时间段\n  const Buff枚举: {\n    [key: string]: number[][]\n  } = {}\n  const 覆盖率 = {}\n\n  // 遍历日志塞入数组\n  for (let i = 0; i < 日志.length; i++) {\n    if (\n      (日志[i]?.日志类型 === '目标buff变动' || 日志[i]?.日志类型 === '自身buff变动') &&\n      (日志[i]?.日志?.includes('获得') || 日志[i]?.日志?.includes('失去'))\n    ) {\n      // 当前buff信息\n      const logName = 日志[i]?.日志\n      const type = logName?.includes('获得') ? 'get' : 'lose'\n      const buffName = type === 'get' ? logName?.split('获得')?.[1] : logName?.split('失去')?.[1]\n      const currentTime: number = 日志[i]?.日志时间 || 0\n      if (buffName && !过滤的buff列表?.includes(buffName)) {\n        if (type === 'get') {\n          if (Buff枚举?.[buffName]) {\n            // 判断当前最后一个数组的长度，如果为1代表还没结束，不处理。为2再塞入新的起始时间\n            if (Buff枚举[buffName][Buff枚举[buffName].length - 1]?.length > 1) {\n              Buff枚举[buffName].push([currentTime])\n            }\n          } else {\n            Buff枚举[buffName] = [[currentTime]]\n          }\n        } else if (type === 'lose') {\n          if (Buff枚举?.[buffName]) {\n            if (Buff枚举?.[buffName]?.[Buff枚举?.[buffName]?.length - 1]) {\n              Buff枚举[buffName][Buff枚举[buffName].length - 1].push(currentTime)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // 循环结束，对没有结束时间的buff做补充，塞入总战斗用时作为结束时间\n  // 同时，计算各buff的覆盖率\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      if (\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1] &&\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1]?.length < 2\n      ) {\n        Buff枚举[key][Buff枚举[key].length - 1].push(总战斗用时)\n      }\n\n      let 总持续时间 = 0\n      for (let i = 0; i < Buff枚举[key].length; i++) {\n        if (Buff枚举[key][i] && Buff枚举[key][i].length === 2) {\n          总持续时间 = 总持续时间 + Buff枚举[key][i][1] - Buff枚举[key][i][0]\n        }\n      }\n      覆盖率[key] = ((总持续时间 / 总战斗用时) * 100)?.toFixed(3)\n    }\n  })\n\n  return {\n    Buff枚举,\n    覆盖率,\n  }\n}\n\nexport const 格式化buff覆盖数组 = (Buff枚举) => {\n  const res: any[] = []\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      Buff枚举[key].forEach((range) => {\n        res.push({ type: key, range: range })\n      })\n    }\n  })\n  return res\n}\n","import React from 'react'\nimport { 角色状态信息类型 } from '../../../simulator/type'\n\nimport Img_Dandao from '../../../assets/dandao.png'\nimport Img_Shuangdao from '../../../assets/canglang.png'\nimport { Tooltip } from 'antd'\nimport './index.css'\n\ninterface TitaiProps {\n  角色状态信息: 角色状态信息类型\n}\n\nfunction Titai(props: TitaiProps) {\n  const { 角色状态信息 } = props\n\n  return (\n    <div className={'cycle-status-bar-content'}>\n      <div className={'cycle-status-bar-title'}>体态</div>\n      <Tooltip title={角色状态信息?.体态}>\n        <img\n          className={'cycle-status-bar-titai-img'}\n          src={角色状态信息?.体态 === '单刀' ? Img_Dandao : Img_Shuangdao}\n          alt=\"\"\n        />\n      </Tooltip>\n    </div>\n  )\n}\n\nexport default Titai\n","import React from 'react'\nimport { 角色状态信息类型 } from '../../../simulator/type'\n\nimport { Progress } from 'antd'\nimport './index.css'\n\ninterface RuiyiProps {\n  角色状态信息: 角色状态信息类型\n}\n\nfunction Ruiyi(props: RuiyiProps) {\n  const { 角色状态信息 } = props\n\n  return (\n    <div className={'cycle-status-bar-content'}>\n      <div className={'cycle-status-bar-title'}>锐意</div>\n      <div className={'cycle-status-bar-body'}>\n        <Progress\n          className={'cycle-status-bar-ruiyi'}\n          percent={角色状态信息?.锐意}\n          format={(percent) => `${percent}`}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Ruiyi\n","import React from 'react'\nimport 结果统计 from '@/功能模块/计算结果/结果统计'\nimport { 计算结果技能列表类型 } from '@/@types/输出'\nimport '../../../../index.css'\n\ninterface SkillCountModalProps {\n  open: boolean\n  onCancel: () => void\n  dpsList: 计算结果技能列表类型[]\n  total: number\n}\n\nconst SkillCountModal: React.FC<SkillCountModalProps> = (props) => {\n  const { open, onCancel, total, dpsList } = props\n\n  return (\n    <结果统计\n      计算结果={{\n        总伤: total,\n        计算结果技能列表: dpsList,\n      }}\n      visible={open}\n      onClose={() => onCancel()}\n    />\n  )\n}\n\nexport default SkillCountModal\n","import React, { useState } from 'react'\nimport { Alert, Tooltip } from 'antd'\nimport { PieChartOutlined, CalendarOutlined, AlignLeftOutlined } from '@ant-design/icons'\nimport { 当前计算结果类型 } from '@/@types/输出'\n\nimport { 循环日志数据类型, 模拟信息类型 } from '../../../simulator/type'\n// import DpsResModal from './components/DpsResModal'\nimport BattleLogModal from './components/BattleLogModal'\nimport SkillCountModal from './components/SkillCountModal'\nimport BuffCountModal from './components/BuffCountModal'\nimport './index.css'\n\ninterface DpsResProps {\n  日志信息: 循环日志数据类型[]\n  模拟信息: 模拟信息类型\n  模拟DPS结果: 当前计算结果类型\n}\n\nfunction DpsRes(props: DpsResProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果 } = props\n\n  // dps曲线\n  // const [dpsModal, setDpsModal] = useState<boolean>(false)\n\n  // buff分析\n  const [buffCountModalOpen, setBuffCountModalOpen] = useState<boolean>(false)\n  // 日志log\n  const [logModalOpen, setLogModalOpen] = useState<boolean>(false)\n  // 技能统计\n  const [countModal, setCountModal] = useState<boolean>(false)\n\n  // const 开发中 = () => {\n  //   message.success('功能开发中，敬请期待')\n  // }\n\n  return (\n    <div\n      className={`cycle-bar-dps-res ${\n        模拟信息?.循环执行结果 === '异常' ? 'cycle-bar-dps-res-error' : ''\n      }`}\n    >\n      {模拟信息?.循环执行结果 === '异常' ? (\n        <div className={'cycle-dps-res-error'}>\n          <h1 className={'cycle-dps-res-error-title'}>循环异常</h1>\n          <Alert\n            type='error'\n            showIcon\n            message={`异常信息：${模拟信息?.循环异常信息?.异常信息?.信息}`}\n          />\n        </div>\n      ) : 模拟DPS结果?.秒伤 ? (\n        <div className={'cycle-dps-res-success'}>\n          <div className={'cycle-dps-res-success-content'}>\n            <h1 className={'cycle-dps-res-num'}>{模拟DPS结果?.秒伤}</h1>\n            <div className={'cycle-dps-res-success-text-content'}>\n              <div>\n                <span className={'cycle-dps-res-success-text'}>战斗用时</span>\n                <span className={'cycle-dps-res-success-text cycle-dps-res-success-highlight'}>\n                  {模拟DPS结果?.秒伤计算时间}秒\n                </span>\n              </div>\n              <div className={'cycle-dps-res-icons'}>\n                <Tooltip title='Buff分析' placement='left'>\n                  <PieChartOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setBuffCountModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='战斗日志' placement='left'>\n                  <CalendarOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setLogModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='技能统计' placement='left'>\n                  <AlignLeftOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setCountModal(true)}\n                  />\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {/* dps结果 */}\n      {/* <DpsResModal open={dpsModal} onCancel={() => setDpsModal(false)} logData={日志信息} /> */}\n      {/* 战斗日志 */}\n      <BattleLogModal\n        open={logModalOpen}\n        onCancel={() => setLogModalOpen(false)}\n        logData={日志信息}\n      />\n      {/* 技能统计 */}\n      <SkillCountModal\n        open={countModal}\n        onCancel={() => setCountModal(false)}\n        dpsList={模拟DPS结果?.计算结果技能列表}\n        total={模拟DPS结果?.总伤}\n      />\n      {/* Buff分析 */}\n      {buffCountModalOpen && (\n        <BuffCountModal\n          open={buffCountModalOpen}\n          onCancel={() => setBuffCountModalOpen(false)}\n          日志={日志信息}\n          总战斗用时={模拟信息?.当前时间}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default DpsRes\n","// 当前角色状态栏，只用来展示\nimport React from 'react'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport { 循环日志数据类型, ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\n\nimport Titai from './titai'\nimport Ruiyi from './ruiyi'\nimport Buff from './buff'\nimport DpsRes from './dpsRes'\nimport './index.css'\n\ninterface StatusBarProps {\n  模拟信息: 模拟信息类型\n  完整循环: ShowCycleSingleSkill[]\n  日志信息: 循环日志数据类型[]\n  模拟DPS结果: 当前计算结果类型\n}\n\nfunction StatusBar(props: StatusBarProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果 } = props\n\n  return (\n    <div className={'cycle-status-bar'}>\n      <Titai 角色状态信息={模拟信息?.角色状态信息} />\n      <Ruiyi 角色状态信息={模拟信息?.角色状态信息} />\n      <Buff\n        title='自身Buff'\n        buff列表={模拟信息?.当前自身buff列表}\n        当前时间点={模拟信息?.当前时间}\n      />\n      <Buff\n        title='目标Buff'\n        buff列表={模拟信息?.当前目标buff列表}\n        当前时间点={模拟信息?.当前时间}\n      />\n      <DpsRes 模拟信息={模拟信息} 日志信息={日志信息} 模拟DPS结果={模拟DPS结果} />\n    </div>\n  )\n}\n\nexport default StatusBar\n","import { 循环日志数据类型 } from '../../../../../simulator/type'\n\nconst 过滤的buff列表 = ['劲风簇追', '饮羽簇追']\n\nexport const 获取Buff覆盖率 = (日志: 循环日志数据类型[], 总战斗用时: number) => {\n  // 以buff个体分类，组成数字数组代表buff持续时间段\n  const Buff枚举: {\n    [key: string]: number[][]\n  } = {}\n  const 覆盖率 = {}\n\n  // 遍历日志塞入数组\n  for (let i = 0; i < 日志.length; i++) {\n    if (\n      (日志[i]?.日志类型 === '目标buff变动' || 日志[i]?.日志类型 === '自身buff变动') &&\n      (日志[i]?.日志?.includes('获得') || 日志[i]?.日志?.includes('失去'))\n    ) {\n      // 当前buff信息\n      const logName = 日志[i]?.日志\n      const type = logName?.includes('获得') ? 'get' : 'lose'\n      const buffName = type === 'get' ? logName?.split('获得')?.[1] : logName?.split('失去')?.[1]\n      const currentTime: number = 日志[i]?.日志时间 || 0\n      if (buffName && !过滤的buff列表?.includes(buffName)) {\n        if (type === 'get') {\n          if (Buff枚举?.[buffName]) {\n            // 判断当前最后一个数组的长度，如果为1代表还没结束，不处理。为2再塞入新的起始时间\n            if (Buff枚举[buffName][Buff枚举[buffName].length - 1]?.length > 1) {\n              Buff枚举[buffName].push([currentTime])\n            }\n          } else {\n            Buff枚举[buffName] = [[currentTime]]\n          }\n        } else if (type === 'lose') {\n          if (Buff枚举?.[buffName]) {\n            if (Buff枚举?.[buffName]?.[Buff枚举?.[buffName]?.length - 1]) {\n              Buff枚举[buffName][Buff枚举[buffName].length - 1].push(currentTime)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // 循环结束，对没有结束时间的buff做补充，塞入总战斗用时作为结束时间\n  // 同时，计算各buff的覆盖率\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      if (\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1] &&\n        Buff枚举[key]?.[Buff枚举[key]?.length - 1]?.length < 2\n      ) {\n        Buff枚举[key][Buff枚举[key].length - 1].push(总战斗用时)\n      }\n\n      let 总持续时间 = 0\n      for (let i = 0; i < Buff枚举[key].length; i++) {\n        if (Buff枚举[key][i] && Buff枚举[key][i].length === 2) {\n          总持续时间 = 总持续时间 + Buff枚举[key][i][1] - Buff枚举[key][i][0]\n        }\n      }\n      覆盖率[key] = ((总持续时间 / 总战斗用时) * 100)?.toFixed(3)\n    }\n  })\n\n  return {\n    Buff枚举,\n    覆盖率,\n  }\n}\n\nexport const 格式化buff覆盖数组 = (Buff枚举) => {\n  const res: any[] = []\n  Object.keys(Buff枚举).forEach((key) => {\n    if (Buff枚举[key]?.length) {\n      Buff枚举[key].forEach((range) => {\n        res.push({ type: key, range: range })\n      })\n    }\n  })\n  return res\n}\n","import React from 'react'\nimport { ArrowUpOutlined } from '@ant-design/icons'\nimport classnames from 'classnames'\nimport { 角色状态信息类型 } from '../../../simulator/type'\nimport './index.css'\nimport { 箭形态枚举 } from '../../../constant/enum'\n\ninterface TitaiProps {\n  角色状态信息: 角色状态信息类型\n}\n\nfunction Jian(props: TitaiProps) {\n  const { 角色状态信息 } = props\n\n  return (\n    <div className={'cycle-status-bar-content'}>\n      <div className={'cycle-status-bar-title'}>箭袋</div>\n      <div className={'cycle-status-bar-arrow-wrap'}>\n        {Array.from({ length: 8 }, (v, i) => {\n          // const 当前箭显示状态 = i < 角色状态信息.箭数 ? 角色状态信息.箭形态 : ''\n          const 当前箭显示状态 = 角色状态信息?.箭袋信息?.[i]?.箭形态\n          const cls = classnames(\n            'cycle-status-bar-arrow',\n            当前箭显示状态 === 箭形态枚举.黄箭 ? 'cycle-status-bar-arrow-yellow' : undefined,\n            当前箭显示状态 === 箭形态枚举.蓝箭 ? 'cycle-status-bar-arrow-blue' : undefined,\n            当前箭显示状态 === 箭形态枚举.红箭 ? 'cycle-status-bar-arrow-red' : undefined,\n            当前箭显示状态 === 箭形态枚举.紫箭 ? 'cycle-status-bar-arrow-purple' : undefined\n          )\n          return <ArrowUpOutlined key={i} className={cls} />\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default Jian\n","import React, { useMemo } from 'react'\nimport 结果统计 from '@/功能模块/计算结果/结果统计'\nimport { 循环日志数据类型 } from '../../../../simulator/type'\nimport { Divider, Popover } from 'antd'\nimport '../../../../index.css'\nimport { 计算结果技能列表类型 } from '@/@types/输出'\n\ninterface SkillCountModalProps {\n  open: boolean\n  onCancel: () => void\n  dpsList: 计算结果技能列表类型[]\n  total: number\n  logData: 循环日志数据类型[]\n}\n\nconst SkillCountModal: React.FC<SkillCountModalProps> = (props) => {\n  const { open, onCancel, total, dpsList, logData } = props\n\n  const { 引爆次数, 引爆倍率, 总倍率, 贯穿统计数组 } = useMemo(() => {\n    const 引爆贯穿数组 = (logData || [])?.filter((item) => {\n      return item?.日志?.includes('- 引爆') && item?.日志?.includes('贯穿')\n    })\n    const 贯穿数组 = (logData || [])\n      ?.filter((item) => {\n        return (\n          item?.日志?.includes('贯穿') &&\n          (item?.日志类型?.includes('造成伤害') || item?.日志?.includes('- 引爆'))\n        )\n      })\n      .map((item) => item?.日志)\n    const { 引爆倍率, 总倍率, 贯穿统计数组 } = 获取贯穿总倍率(贯穿数组)\n    return {\n      引爆次数: 引爆贯穿数组?.length,\n      引爆倍率,\n      总倍率,\n      贯穿统计数组,\n    }\n  }, [logData])\n\n  return (\n    <结果统计\n      title={\n        <div className={'cycle-simulator-modal-header space-between'}>\n          <h1 className={'cycle-simulator-modal-title'}>技能统计</h1>\n          <Popover\n            content={\n              <div>\n                <p>引爆次数：{引爆次数}</p>\n                <p>引爆倍率：{引爆倍率}</p>\n                <p>总倍率：{总倍率}</p>\n                <Divider style={{ margin: '4px 0' }} />\n                {Object.keys(贯穿统计数组).map((item) => {\n                  return (\n                    <p key={`贯穿统计${item}`}>\n                      贯穿·{item}：{贯穿统计数组[item]}次\n                    </p>\n                  )\n                })}\n              </div>\n            }\n          >\n            <span className={'cycle-simulator-help'}>贯穿细节</span>\n          </Popover>\n        </div>\n      }\n      计算结果={{\n        总伤: total,\n        计算结果技能列表: dpsList,\n      }}\n      visible={open}\n      onClose={() => onCancel()}\n    />\n  )\n}\n\nexport default SkillCountModal\n\nexport const 获取贯穿对应实际倍率 = (日志) => {\n  const 当前层数 = Number(日志?.split('·')?.[1])\n  const 当前引爆跳数 = 日志?.includes('- 引爆') ? Number(日志?.split('【')?.[2]?.[0]) : 0\n  if (当前引爆跳数) {\n    const 层数 = Number(日志?.split('【')?.[1]?.[0])\n    const 当前引爆倍率 = 日志?.includes('- 引爆') ? 当前引爆跳数 : 1\n    return {\n      本次倍率: 层数 * 当前引爆倍率,\n      引爆: true,\n    }\n  } else if (当前层数) {\n    return {\n      本次倍率: 当前层数,\n      引爆: false,\n    }\n  } else {\n    return {\n      本次倍率: 1,\n      引爆: false,\n    }\n  }\n}\n\nconst 获取贯穿总倍率 = (贯穿数组) => {\n  let 倍率 = 0\n  let 引爆倍率 = 0\n\n  const 贯穿统计完整数据 = 贯穿数组\n    .map((item) => {\n      const { 本次倍率, 引爆 } = 获取贯穿对应实际倍率(item)\n      if (引爆) {\n        引爆倍率 = 引爆倍率 + 本次倍率\n        return -1\n      } else {\n        倍率 = 倍率 + 本次倍率\n        return 本次倍率\n      }\n    })\n    .filter((item) => item !== -1)\n\n  const 贯穿统计数组 = 获取贯穿的出现次数(贯穿统计完整数据)\n  return {\n    总倍率: 倍率,\n    引爆倍率: 引爆倍率,\n    贯穿统计数组,\n  }\n}\n\nfunction 获取贯穿的出现次数(arr) {\n  return arr.reduce((acc, curr) => {\n    acc[curr] ? acc[curr]++ : (acc[curr] = 1)\n    return acc\n  }, {})\n}\n","import React, { useState } from 'react'\nimport { Alert, Tooltip } from 'antd'\nimport { PieChartOutlined, CalendarOutlined, AlignLeftOutlined } from '@ant-design/icons'\n\nimport { 循环日志数据类型, 模拟信息类型 } from '../../../simulator/type'\n// import DpsResModal from './components/DpsResModal'\nimport BattleLogModal from './components/BattleLogModal'\nimport SkillCountModal from './components/SkillCountModal'\nimport BuffCountModal from './components/BuffCountModal'\nimport { 当前计算结果类型 } from '@/@types/输出'\nimport './index.css'\n\ninterface DpsResProps {\n  日志信息: 循环日志数据类型[]\n  模拟信息: 模拟信息类型\n  模拟DPS结果: 当前计算结果类型\n}\n\nfunction DpsRes(props: DpsResProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果 } = props\n  // buff分析\n  const [buffCountModalOpen, setBuffCountModalOpen] = useState<boolean>(false)\n\n  // 日志log\n  const [logModalOpen, setLogModalOpen] = useState<boolean>(false)\n  // 技能统计\n  const [countModal, setCountModal] = useState<boolean>(false)\n\n  // const 开发中 = () => {\n  //   message.success('功能开发中，敬请期待')\n  // }\n\n  return (\n    <div\n      className={`cycle-bar-dps-res ${\n        模拟信息?.循环执行结果 === '异常' ? 'cycle-bar-dps-res-error' : ''\n      }`}\n    >\n      {模拟信息?.循环执行结果 === '异常' ? (\n        <div className={'cycle-dps-res-error'}>\n          <h1 className={'cycle-dps-res-error-title'}>循环异常</h1>\n          <Alert\n            type='error'\n            showIcon\n            message={`异常信息：${模拟信息?.循环异常信息?.异常信息?.信息}`}\n          />\n        </div>\n      ) : 模拟DPS结果?.秒伤 ? (\n        <div className={'cycle-dps-res-success'}>\n          <div className={'cycle-dps-res-success-content'}>\n            <h1 className={'cycle-dps-res-num'}>{模拟DPS结果?.秒伤}</h1>\n            <div className={'cycle-dps-res-success-text-content'}>\n              <div>\n                <span className={'cycle-dps-res-success-text'}>战斗用时</span>\n                <span className={'cycle-dps-res-success-text cycle-dps-res-success-highlight'}>\n                  {模拟DPS结果?.秒伤计算时间}秒\n                </span>\n              </div>\n              <div className={'cycle-dps-res-icons'}>\n                <Tooltip title='Buff分析' placement='left'>\n                  <PieChartOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setBuffCountModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='战斗日志' placement='left'>\n                  <CalendarOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setLogModalOpen(true)}\n                  />\n                </Tooltip>\n                <Tooltip title='技能统计' placement='left'>\n                  <AlignLeftOutlined\n                    className={'cycle-dps-res-icon'}\n                    onClick={() => setCountModal(true)}\n                  />\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : null}\n      {/* dps结果 */}\n      {/* <DpsResModal open={dpsModal} onCancel={() => setDpsModal(false)} logData={日志信息} /> */}\n      {/* 战斗日志 */}\n      <BattleLogModal\n        open={logModalOpen}\n        onCancel={() => setLogModalOpen(false)}\n        logData={日志信息}\n      />\n      {/* 技能统计 */}\n      <SkillCountModal\n        open={countModal}\n        onCancel={() => setCountModal(false)}\n        dpsList={模拟DPS结果?.计算结果技能列表}\n        total={模拟DPS结果?.总伤}\n        logData={日志信息}\n      />\n      {/* Buff分析 */}\n      {buffCountModalOpen && (\n        <BuffCountModal\n          open={buffCountModalOpen}\n          onCancel={() => setBuffCountModalOpen(false)}\n          日志={日志信息}\n          总战斗用时={模拟信息?.当前时间}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default DpsRes\n","// 当前角色状态栏，只用来展示\nimport React from 'react'\nimport { 循环日志数据类型, ShowCycleSingleSkill, 模拟信息类型 } from '../../simulator/type'\n\nimport Jian from './jian'\nimport Buff from './buff'\nimport DpsRes from './dpsRes'\nimport Chongwu from './chongwu'\nimport './index.css'\nimport { 当前计算结果类型 } from '@/@types/输出'\n\ninterface StatusBarProps {\n  模拟信息: 模拟信息类型\n  完整循环: ShowCycleSingleSkill[]\n  日志信息: 循环日志数据类型[]\n  模拟DPS结果: 当前计算结果类型\n  奇穴信息: string[]\n}\n\nfunction StatusBar(props: StatusBarProps) {\n  const { 模拟信息, 日志信息, 模拟DPS结果, 奇穴信息 } = props\n\n  return (\n    <div className={'cycle-status-bar'}>\n      <Jian 角色状态信息={模拟信息?.角色状态信息} />\n      <Chongwu 当前宠物数据={模拟信息?.当前宠物数据} 当前时间点={模拟信息?.当前时间} />\n      <Buff\n        title='自身Buff'\n        buff列表={模拟信息?.当前自身buff列表}\n        当前时间点={模拟信息?.当前时间}\n        奇穴信息={奇穴信息 || []}\n      />\n      <Buff\n        title='目标Buff'\n        buff列表={模拟信息?.当前目标buff列表}\n        DOT列表={模拟信息?.当前DOT运行状态}\n        当前时间点={模拟信息?.当前时间}\n      />\n      <DpsRes 模拟信息={模拟信息} 日志信息={日志信息} 模拟DPS结果={模拟DPS结果} />\n    </div>\n  )\n}\n\nexport default StatusBar\n"],"names":["过滤的buff列表","获取Buff覆盖率","日志","总战斗用时","Buff枚举","覆盖率","i","length","日志类型","includes","logName","type","buffName","split","currentTime","日志时间","push","Object","keys","forEach","key","总持续时间","toFixed","格式化buff覆盖数组","res","range","props","角色状态信息","className","title","体态","src","Img_Dandao","Img_Shuangdao","alt","percent","锐意","format","open","onCancel","total","dpsList","总伤","计算结果技能列表","visible","onClose","模拟信息","日志信息","模拟DPS结果","useState","buffCountModalOpen","setBuffCountModalOpen","logModalOpen","setLogModalOpen","countModal","setCountModal","循环执行结果","showIcon","message","循环异常信息","异常信息","信息","秒伤","秒伤计算时间","placement","PieChartOutlined","onClick","CalendarOutlined","AlignLeftOutlined","BattleLogModal","logData","BuffCountModal","当前时间","当前自身buff列表","当前目标buff列表","Array","from","v","当前箭显示状态","箭袋信息","箭形态","cls","classnames","箭形态枚举","undefined","ArrowUpOutlined","useMemo","引爆贯穿数组","filter","item","贯穿数组","map","获取贯穿总倍率","引爆倍率","总倍率","贯穿统计数组","引爆次数","content","style","margin","倍率","贯穿统计完整数据","当前层数","Number","当前引爆跳数","本次倍率","引爆","获取贯穿对应实际倍率","reduce","acc","curr","奇穴信息","当前宠物数据","当前DOT运行状态"],"sourceRoot":""}