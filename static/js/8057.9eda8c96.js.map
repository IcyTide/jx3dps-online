{"version":3,"file":"static/js/8057.9eda8c96.js","mappings":"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","sources":["../node_modules/@antv/g2/src/animate/animation/fade.ts","../node_modules/@antv/g2/src/animate/animation/util.ts","../node_modules/@antv/g2/src/animate/animation/grow-in.ts","../node_modules/@antv/g2/src/animate/animation/index.ts","../node_modules/@antv/g2/src/animate/animation/path-in.ts","../node_modules/@antv/g2/src/animate/animation/position-update.ts","../node_modules/@antv/g2/src/animate/animation/scale-in.ts","../node_modules/@antv/g2/src/animate/animation/sector-path-update.ts","../node_modules/@antv/g2/src/animate/animation/wave-in.ts","../node_modules/@antv/g2/src/animate/animation/zoom.ts","../node_modules/@antv/g2/src/animate/index.ts","../node_modules/@antv/g2/src/base.ts","../node_modules/@antv/g2/src/chart/chart.ts","../node_modules/@antv/g2/src/chart/controller/annotation.ts","../node_modules/@antv/g2/src/chart/controller/axis.ts","../node_modules/@antv/g2/src/chart/controller/base.ts","../node_modules/@antv/g2/src/chart/controller/coordinate.ts"],"sourcesContent":["import { isNil } from '@antv/util';\nimport { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\n/**\n * @ignore\n * 单个 shape 动画\n * 渐现动画\n * @param shape 执行动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function fadeIn(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const endState = {\n    fillOpacity: isNil(shape.attr('fillOpacity')) ? 1 : shape.attr('fillOpacity'),\n    strokeOpacity: isNil(shape.attr('strokeOpacity')) ? 1 : shape.attr('strokeOpacity'),\n    opacity: isNil(shape.attr('opacity')) ? 1 : shape.attr('opacity'),\n  };\n  shape.attr({\n    fillOpacity: 0,\n    strokeOpacity: 0,\n    opacity: 0,\n  });\n  shape.animate(endState, animateCfg);\n}\n\n/**\n * @ignore\n * 单个 shape 动画\n * 渐隐动画\n * @param shape 执行动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function fadeOut(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const endState = {\n    fillOpacity: 0,\n    strokeOpacity: 0,\n    opacity: 0,\n  };\n  const { easing, duration, delay } = animateCfg;\n  shape.animate(\n    endState,\n    duration,\n    easing,\n    () => {\n      shape.remove(true);\n    },\n    delay\n  );\n}\n","import { ext } from '@antv/matrix-util';\nimport { Coordinate, IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg, Point } from '../../interface';\n\n/**\n * @ignore\n * 对图形元素进行矩阵变换，同时返回变换前的图形矩阵\n * @param shape 进行矩阵变换的图形\n * @param vector 矩阵变换的中心点\n * @param direct 矩阵变换的类型\n */\nexport function transformShape(shape: IShape | IGroup, vector: [number, number], direct: string): number[] {\n  let scaledMatrix;\n\n  const [x, y] = vector;\n  shape.applyToMatrix([x, y, 1]);\n  if (direct === 'x') {\n    shape.setMatrix(\n      ext.transform(shape.getMatrix(), [\n        ['t', -x, -y],\n        ['s', 0.01, 1],\n        ['t', x, y],\n      ])\n    );\n    scaledMatrix = ext.transform(shape.getMatrix(), [\n      ['t', -x, -y],\n      ['s', 100, 1],\n      ['t', x, y],\n    ]);\n  } else if (direct === 'y') {\n    shape.setMatrix(\n      ext.transform(shape.getMatrix(), [\n        ['t', -x, -y],\n        ['s', 1, 0.01],\n        ['t', x, y],\n      ])\n    );\n    scaledMatrix = ext.transform(shape.getMatrix(), [\n      ['t', -x, -y],\n      ['s', 1, 100],\n      ['t', x, y],\n    ]);\n  } else if (direct === 'xy') {\n    shape.setMatrix(\n      ext.transform(shape.getMatrix(), [\n        ['t', -x, -y],\n        ['s', 0.01, 0.01],\n        ['t', x, y],\n      ])\n    );\n    scaledMatrix = ext.transform(shape.getMatrix(), [\n      ['t', -x, -y],\n      ['s', 100, 100],\n      ['t', x, y],\n    ]);\n  }\n  return scaledMatrix;\n}\n\n/**\n * 对图形元素进行剪切动画\n * @param element 进行动画的图形元素\n * @param animateCfg 动画配置\n * @param coordinate 当前坐标系\n * @param yMinPoint y 轴的最小值对应的图形坐标点\n * @param type 剪切动画的类型\n */\nexport function doScaleAnimate(\n  element: IGroup | IShape,\n  animateCfg: GAnimateCfg,\n  coordinate: Coordinate,\n  yMinPoint: Point,\n  type: string\n) {\n  const { start, end } = coordinate;\n  const width = coordinate.getWidth();\n  const height = coordinate.getHeight();\n  let x: number;\n  let y: number;\n\n  if (type === 'y') {\n    x = start.x + width / 2;\n    y = yMinPoint.y < start.y ? yMinPoint.y : start.y;\n  } else if (type === 'x') {\n    x = yMinPoint.x > start.x ? yMinPoint.x : start.x;\n    y = start.y + height / 2;\n  } else if (type === 'xy') {\n    if (coordinate.isPolar) {\n      x = coordinate.getCenter().x;\n      y = coordinate.getCenter().y;\n    } else {\n      x = (start.x + end.x) / 2;\n      y = (start.y + end.y) / 2;\n    }\n  }\n\n  const endMatrix = transformShape(element, [x, y], type);\n  element.animate(\n    {\n      matrix: endMatrix,\n    },\n    animateCfg\n  );\n}\n","import { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\nimport { doScaleAnimate } from './util';\n\n/**\n * @ignore\n * 入场动画\n * x 方向的生长\n * @param element 执行动画的元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function growInX(element: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { coordinate, minYPoint } = cfg;\n  doScaleAnimate(element, animateCfg, coordinate, minYPoint, 'x');\n}\n\n/**\n * @ignore\n * 入场动画\n * y 轴方向上的生长\n * @param element 执行动画的元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function growInY(element: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { coordinate, minYPoint } = cfg;\n  doScaleAnimate(element, animateCfg, coordinate, minYPoint, 'y');\n}\n\n/**\n * @ignore\n * 入场\n * 中心点的向四周的生长动画\n * @param element 执行动画的元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function growInXY(element: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { coordinate, minYPoint } = cfg;\n  doScaleAnimate(element, animateCfg, coordinate, minYPoint, 'xy');\n}\n","import { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\n/** @ignore */\ninterface AnimationMap {\n  [key: string]: Animation;\n}\n\ntype Animation = (element: IGroup | IShape, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) => void;\n\nconst ANIMATIONS_MAP: AnimationMap = {};\n\n/**\n * 根据名称获取对应的动画执行函数\n * @param type 动画函数名称\n */\nexport function getAnimation(type: string) {\n  return ANIMATIONS_MAP[type.toLowerCase()];\n}\n\n/**\n * 注册动画执行函数\n * @param type 动画执行函数名称\n * @param animation 动画执行函数\n */\nexport function registerAnimation(type: string, animation: Animation) {\n  ANIMATIONS_MAP[type.toLowerCase()] = animation;\n}\n","import { IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\n/**\n * @ignore\n * 入场动画\n * path 的入场动画\n * @param element 执行动画的元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function pathIn(element: IShape, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  // @ts-ignore\n  const length = element.getTotalLength();\n  // 设置虚线样式\n  element.attr('lineDash', [length]);\n  element.animate((ratio: number) => {\n    return {\n      // 对虚线偏移量做动画\n      lineDashOffset: (1 - ratio) * length,\n    };\n  }, animateCfg);\n}\n","import { IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\n/**\n * @ignore\n * 坐标移动动画\n * @param shape 图形\n * @param animateCfg\n * @param cfg\n */\nexport function positionUpdate(shape: IShape, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { toAttrs } = cfg;\n  // @ts-ignore\n  const x = toAttrs.x;\n  // @ts-ignore\n  const y = toAttrs.y;\n\n  // @ts-ignore\n  delete toAttrs.x;\n  // @ts-ignore\n  delete toAttrs.y;\n\n  shape.attr(toAttrs);\n\n  shape.animate(\n    {\n      x,\n      y,\n    },\n    animateCfg\n  );\n}\n","import { ext } from '@antv/matrix-util';\nimport { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg, Point } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\n/**\n * @ignore\n * 沿着 x 方向放大的动画\n * @param shape\n * @param animateCfg\n * @param shapeModel\n */\nexport function scaleInX(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const box = shape.getBBox();\n  const { mappingData } = shape.get('origin');\n  const points = mappingData.points as Point[];\n  // x 数值如果为负值，那么应该从右往左生长\n  const x = points[0].y - points[1].y > 0 ? box.maxX : box.minX;\n  const y = (box.minY + box.maxY) / 2;\n\n  shape.applyToMatrix([x, y, 1]);\n\n  const matrix = ext.transform(shape.getMatrix(), [\n    ['t', -x, -y],\n    ['s', 0.01, 1],\n    ['t', x, y],\n  ]);\n  shape.setMatrix(matrix);\n\n  shape.animate(\n    {\n      matrix: ext.transform(shape.getMatrix(), [\n        ['t', -x, -y],\n        ['s', 100, 1],\n        ['t', x, y],\n      ]),\n    },\n    animateCfg\n  );\n}\n\n/**\n * @ignore\n * 沿着 y 方向放大的动画\n * @param shape\n * @param animateCfg\n * @param shapeModel\n */\nexport function scaleInY(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const box = shape.getBBox();\n  const { mappingData } = shape.get('origin');\n  const x = (box.minX + box.maxX) / 2;\n  const points = mappingData.points as Point[];\n  // 数值如果为负值，那么应该从上往下生长，通过 shape 的关键点进行判断\n  const y = points[0].y - points[1].y <= 0 ? box.maxY : box.minY;\n\n  shape.applyToMatrix([x, y, 1]);\n  const matrix = ext.transform(shape.getMatrix(), [\n    ['t', -x, -y],\n    ['s', 1, 0.01],\n    ['t', x, y],\n  ]);\n  shape.setMatrix(matrix);\n\n  shape.animate(\n    {\n      matrix: ext.transform(shape.getMatrix(), [\n        ['t', -x, -y],\n        ['s', 1, 100],\n        ['t', x, y],\n      ]),\n    },\n    animateCfg\n  );\n}\n","import { getArcParams } from '@antv/g-canvas';\nimport { isNumberEqual, isEqual, isFunction } from '@antv/util';\n\nimport { IShape, PathCommand } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\nimport { getArcPath, getSectorPath } from '../../util/graphics';\n\nfunction getAngle(startPoint: number[], arcPath: PathCommand) {\n  let { startAngle, endAngle } = getArcParams(startPoint, arcPath);\n\n  if (!isNumberEqual(startAngle, -Math.PI * 0.5) && startAngle < -Math.PI * 0.5) {\n    startAngle += Math.PI * 2;\n  }\n  if (!isNumberEqual(endAngle, -Math.PI * 0.5) && endAngle < -Math.PI * 0.5) {\n    endAngle += Math.PI * 2;\n  }\n\n  if (arcPath[5] === 0) {\n    // 逆时针，需要将 startAngle 和 endAngle 转置，因为 G2 极坐标系为顺时针方向\n    [startAngle, endAngle] = [endAngle, startAngle];\n  }\n\n  if (isNumberEqual(startAngle, Math.PI * 1.5)) {\n    startAngle = Math.PI * -0.5;\n  }\n\n  // 当 startAngle, endAngle 接近相等时，不进行 endAngle = Math.PI * 1.5 防止变化从整个圆开始\n  if (isNumberEqual(endAngle, Math.PI * -0.5) && !isNumberEqual(startAngle, endAngle)) {\n    endAngle = Math.PI * 1.5;\n  }\n\n  return {\n    startAngle,\n    endAngle,\n  };\n}\n\nfunction getArcStartPoint(path: PathCommand) {\n  let startPoint;\n  if (path[0] === 'M' || path[0] === 'L') {\n    startPoint = [path[1], path[2]];\n  } else if (path[0] === 'a' || path[0] === 'A' || path[0] === 'C') {\n    startPoint = [path[path.length - 2], path[path.length - 1]];\n  }\n\n  return startPoint;\n}\n\n/**\n * path 存在以下情况\n * 1. 饼图不为整圆的 path，命令为 M, L, A, L, Z\n * 2. 饼图为整圆的 path，命令为 M, M, A, A, M, Z\n * 3. 环图不为整圆的 path，命令为 M, A, L, A, L, Z\n * 4. 环图为整圆的 path，命令为 M, A, A, M, A, A, M, Z\n * 5. radial-line, 不为整圆时的 path, 命令为 M, A, A, Z\n * 6. radial-line, 为整圆时的 path，命令为 M, A, A, A, A, Z\n * @param path theta 坐标系下圆弧的 path 命令\n */\nexport function getArcInfo(path: PathCommand[]) {\n  let startAngle;\n  let endAngle;\n\n  const arcPaths = path.filter((command) => {\n    return command[0] === 'A' || command[0] === 'a';\n  });\n\n  if (arcPaths.length === 0) {\n    return {\n      startAngle: 0,\n      endAngle: 0,\n      radius: 0,\n      innerRadius: 0,\n    };\n  }\n\n  const firstArcPathCommand = arcPaths[0];\n  const lastArcPathCommand = arcPaths.length > 1 ? arcPaths[1] : arcPaths[0];\n  const firstIndex = path.indexOf(firstArcPathCommand);\n  const lastIndex = path.indexOf(lastArcPathCommand);\n  const firstStartPoint = getArcStartPoint(path[firstIndex - 1]);\n  const lastStartPoint = getArcStartPoint(path[lastIndex - 1]);\n\n  const { startAngle: firstStartAngle, endAngle: firstEndAngle } = getAngle(firstStartPoint, firstArcPathCommand);\n  const { startAngle: lastStartAngle, endAngle: lastEndAngle } = getAngle(lastStartPoint, lastArcPathCommand);\n\n  if (isNumberEqual(firstStartAngle, lastStartAngle) && isNumberEqual(firstEndAngle, lastEndAngle)) {\n    startAngle = firstStartAngle;\n    endAngle = firstEndAngle;\n  } else {\n    startAngle = Math.min(firstStartAngle, lastStartAngle);\n    endAngle = Math.max(firstEndAngle, lastEndAngle);\n  }\n\n  let radius = firstArcPathCommand[1];\n  let innerRadius = arcPaths[arcPaths.length - 1][1];\n  if (radius < innerRadius) {\n    [radius, innerRadius] = [innerRadius, radius];\n  } else if (radius === innerRadius) {\n    innerRadius = 0;\n  }\n\n  return {\n    startAngle,\n    endAngle,\n    radius,\n    innerRadius,\n  };\n}\n\n/**\n * @ignore\n * 饼图更新动画\n * @param shape 文本图形\n * @param animateCfg\n * @param cfg\n */\nexport function sectorPathUpdate(shape: IShape, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { toAttrs, coordinate } = cfg;\n  const path = (toAttrs as { path: PathCommand[] }).path || [];\n  const pathCommands = path.map((command) => command[0]);\n\n  if (path.length < 1) return;\n\n  const { startAngle: curStartAngle, endAngle: curEndAngle, radius, innerRadius } = getArcInfo(path);\n  const { startAngle: preStartAngle, endAngle: preEndAngle } = getArcInfo(shape.attr('path'));\n\n  const center = coordinate.getCenter();\n  const diffStartAngle = curStartAngle - preStartAngle;\n  const diffEndAngle = curEndAngle - preEndAngle;\n  // 没有 diff 时直接返回最终 attrs，不需要额外动画\n  if (diffStartAngle === 0 && diffEndAngle === 0) {\n    shape.attr('path', path);\n    return;\n  }\n\n  shape.animate(\n    (ratio) => {\n      const onFrameStartAngle = preStartAngle + ratio * diffStartAngle;\n      const onFrameEndAngle = preEndAngle + ratio * diffEndAngle;\n      return {\n        ...toAttrs,\n        path:\n          // hack, 兼容 /examples/bar/basic/demo/radial-line.ts 动画\n          isEqual(pathCommands, ['M', 'A', 'A', 'Z'])\n            ? getArcPath(center.x, center.y, radius, onFrameStartAngle, onFrameEndAngle)\n            : getSectorPath(center.x, center.y, radius, onFrameStartAngle, onFrameEndAngle, innerRadius),\n      };\n    },\n    {\n      ...animateCfg,\n      callback: () => {\n        // 将 path 保持原始态，否则会影响 setState() 的动画\n        shape.attr('path', path);\n        isFunction(animateCfg.callback) && animateCfg.callback();\n      },\n    }\n  );\n}\n","import { isFunction } from '@antv/util';\nimport { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { getCoordinateClipCfg } from '../../util/coordinate';\nimport { AnimateExtraCfg } from '../interface';\n\n/**\n * @ignore\n * 整体动画\n * 划入入场动画效果\n * @todo 放两张直角坐标系和极坐标系的图\n * @param element 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function waveIn(element: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  const { type, startState, endState } = getCoordinateClipCfg(cfg.coordinate, 20); // 根据坐标系类型获取整体的剪切区域配置信息\n  const clipShape = element.setClip({\n    type,\n    attrs: startState,\n  }) as IShape; // 为 shape 设置剪切区域\n\n  // 更新 动画 获取了 toAttrs 需要重新更新上去\n  if (cfg.toAttrs) {\n    element.attr(cfg.toAttrs);\n  }\n\n  // 对剪切图形做动画\n  clipShape.animate(endState, {\n    ...animateCfg,\n    callback: () => {\n      if (element && !element.get('destroyed')) {\n        element.set('clipShape', null);\n      }\n      clipShape.remove(true); // 动画结束需要将剪切图形销毁\n      isFunction(animateCfg.callback) && animateCfg.callback();\n    },\n  });\n}\n","import { ext } from '@antv/matrix-util';\nimport { each, isFunction } from '@antv/util';\nimport { IGroup, IShape } from '../../dependents';\nimport { GAnimateCfg } from '../../interface';\nimport { AnimateExtraCfg } from '../interface';\n\nfunction doShapeZoom(shape: IShape | IGroup, animateCfg: GAnimateCfg, type: 'zoomIn' | 'zoomOut') {\n  if (shape.isGroup()) {\n    each((shape as IGroup).getChildren(), (child) => {\n      doShapeZoom(child, animateCfg, type);\n    });\n  } else {\n    const bbox = shape.getBBox();\n    const x = (bbox.minX + bbox.maxX) / 2;\n    const y = (bbox.minY + bbox.maxY) / 2;\n    shape.applyToMatrix([x, y, 1]);\n\n    if (type === 'zoomIn') {\n      // 放大\n      const matrix = ext.transform(shape.getMatrix(), [\n        ['t', -x, -y],\n        ['s', 0.01, 0.01],\n        ['t', x, y],\n      ]);\n      shape.setMatrix(matrix);\n      shape.animate(\n        {\n          matrix: ext.transform(shape.getMatrix(), [\n            ['t', -x, -y],\n            ['s', 100, 100],\n            ['t', x, y],\n          ]),\n        },\n        animateCfg\n      );\n    } else {\n      shape.animate(\n        {\n          matrix: ext.transform(shape.getMatrix(), [\n            ['t', -x, -y],\n            ['s', 0.01, 0.01],\n            ['t', x, y],\n          ]),\n        },\n        {\n          ...animateCfg,\n          callback: () => {\n            shape.remove(true);\n            isFunction(animateCfg.callback) && animateCfg.callback();\n          },\n        }\n      );\n    }\n  }\n}\n\n/**\n * @ignore\n * 单个 shape 动画\n * shape 以自身中心点逐渐放大的进入动画\n * @param shape 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function zoomIn(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  doShapeZoom(shape, animateCfg, 'zoomIn');\n}\n\n/**\n * @ignore\n * 单个 shape 动画\n * 消失动画，shape 以自身为中心点的逐渐缩小\n * @param shape 参与动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外信息\n */\nexport function zoomOut(shape: IShape | IGroup, animateCfg: GAnimateCfg, cfg: AnimateExtraCfg) {\n  doShapeZoom(shape, animateCfg, 'zoomOut');\n}\n","import { deepMix, get, isFunction } from '@antv/util';\nimport { FIELD_ORIGIN } from '../constant';\nimport { Coordinate, IGroup, IShape } from '../dependents';\nimport { AnimateCfg, Data, Datum, GAnimateCfg, Point } from '../interface';\nimport { AnimateExtraCfg } from './interface';\n\nimport { getAnimation } from './animation';\n\n// 默认的动画参数配置\nexport const DEFAULT_ANIMATE_CFG = {\n  appear: {\n    duration: 450,\n    easing: 'easeQuadOut',\n  }, // 初始入场动画配置\n  update: {\n    duration: 400,\n    easing: 'easeQuadInOut',\n  }, // 更新时发生变更的动画配置\n  enter: {\n    duration: 400,\n    easing: 'easeQuadInOut',\n  }, // 更新时新增元素的入场动画配置\n  leave: {\n    duration: 350,\n    easing: 'easeQuadIn',\n  }, // 更新时销毁动画配置\n};\n\n// 各个 Geometry 默认的动画执行函数\nconst GEOMETRY_ANIMATE_CFG = {\n  interval: (coordinate: Coordinate) => {\n    return {\n      enter: {\n        animation: coordinate.isRect ? (coordinate.isTransposed ? 'scale-in-x' : 'scale-in-y') : 'fade-in',\n      },\n      update: {\n        animation: coordinate.isPolar && coordinate.isTransposed ? 'sector-path-update' : null,\n      },\n      leave: {\n        animation: 'fade-out',\n      },\n    };\n  },\n  line: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  path: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  point: {\n    appear: {\n      animation: 'zoom-in',\n    },\n    enter: {\n      animation: 'zoom-in',\n    },\n    leave: {\n      animation: 'zoom-out',\n    },\n  },\n  area: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  polygon: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  schema: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  edge: {\n    enter: {\n      animation: 'fade-in',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n  label: {\n    appear: {\n      animation: 'fade-in',\n      delay: 450,\n    },\n    enter: {\n      animation: 'fade-in',\n    },\n    update: {\n      animation: 'position-update',\n    },\n    leave: {\n      animation: 'fade-out',\n    },\n  },\n};\n\n// 各个 Geometry 默认的群组出场动画\nconst GEOMETRY_GROUP_APPEAR_ANIMATION = {\n  line: () => {\n    return {\n      animation: 'wave-in',\n    };\n  },\n  area: () => {\n    return {\n      animation: 'wave-in',\n    };\n  },\n  path: () => {\n    return {\n      animation: 'fade-in',\n    };\n  },\n  interval(coordinate: Coordinate) {\n    let animation;\n\n    if (coordinate.isRect) {\n      animation = coordinate.isTransposed ? 'grow-in-x' : 'grow-in-y';\n    } else {\n      animation = 'grow-in-xy';\n      if (coordinate.isPolar && coordinate.isTransposed) {\n        // pie chart\n        animation = 'wave-in';\n      }\n    }\n    return {\n      animation,\n    };\n  },\n  schema: (coordinate) => {\n    let animation;\n    if (coordinate.isRect) {\n      animation = coordinate.isTransposed ? 'grow-in-x' : 'grow-in-y';\n    } else {\n      animation = 'grow-in-xy';\n    }\n    return {\n      animation,\n    };\n  },\n  polygon: () => {\n    return {\n      animation: 'fade-in',\n      duration: 500,\n    };\n  },\n  edge: () => {\n    return {\n      animation: 'fade-in',\n    };\n  },\n};\n\n// 解析用户的动画配置\nfunction parseAnimateConfig(animateCfg: AnimateCfg, data: Data | Datum): GAnimateCfg {\n  return {\n    delay: isFunction(animateCfg.delay) ? animateCfg.delay(data) : animateCfg.delay,\n    easing: isFunction(animateCfg.easing) ? animateCfg.easing(data) : animateCfg.easing,\n    duration: isFunction(animateCfg.duration) ? animateCfg.duration(data) : animateCfg.duration,\n    callback: animateCfg.callback,\n    repeat: animateCfg.repeat,\n  };\n}\n\n/**\n * @ignore\n * 获取 elementName 对应的动画配置，当声明了 `animateType`，则返回 `animateType` 对应的动画配置\n * @param elementName 元素名称\n * @param coordinate 做表弟类型\n * @param animateType 可选，动画类型\n */\nexport function getDefaultAnimateCfg(elementName: string, coordinate: Coordinate, animateType?: string) {\n  let animateCfg = GEOMETRY_ANIMATE_CFG[elementName];\n\n  if (animateCfg) {\n    if (isFunction(animateCfg)) {\n      animateCfg = animateCfg(coordinate);\n    }\n    animateCfg = deepMix({}, DEFAULT_ANIMATE_CFG, animateCfg);\n\n    if (animateType) {\n      return animateCfg[animateType];\n    }\n  }\n  return animateCfg;\n}\n\n/**\n * @ignore\n * 工具函数\n * 根据用户传入的配置为 shape 执行动画\n * @param shape 执行动画的图形元素\n * @param animateCfg 动画配置\n * @param cfg 额外的信息\n */\nexport function doAnimate(shape: IGroup | IShape, animateCfg: AnimateCfg, cfg: AnimateExtraCfg) {\n  const data = get(shape.get('origin'), 'data', FIELD_ORIGIN);\n  const animation = animateCfg.animation; // 获取动画执行函数\n  const parsedAnimateCfg = parseAnimateConfig(animateCfg, data);\n  if (animation) {\n    // 用户声明了动画执行函数\n    const animateFunction = getAnimation(animation);\n    if (animateFunction) {\n      animateFunction(shape, parsedAnimateCfg, cfg);\n    }\n  } else {\n    // 没有声明，则根据 toAttrs 做差值动画\n    shape.animate(cfg.toAttrs, parsedAnimateCfg);\n  }\n}\n\n/**\n * @ignore\n * 执行 Geometry 群组入场动画\n * @param container 执行群组动画的图形元素\n * @param animateCfg 动画配置\n * @param geometryType geometry 类型\n * @param coordinate 坐标系对象\n * @param minYPoint y 轴最小值对应的画布坐标点\n */\nexport function doGroupAppearAnimate(\n  container: IGroup,\n  animateCfg: AnimateCfg,\n  geometryType: string,\n  coordinate: Coordinate,\n  minYPoint: Point\n) {\n  if (GEOMETRY_GROUP_APPEAR_ANIMATION[geometryType]) {\n    const defaultCfg = GEOMETRY_GROUP_APPEAR_ANIMATION[geometryType](coordinate);\n    const animation = getAnimation(get(defaultCfg, 'animation', ''));\n    if (animation) {\n      const cfg = {\n        ...DEFAULT_ANIMATE_CFG.appear,\n        ...defaultCfg,\n        ...animateCfg,\n      };\n      container.stopAnimate(); // 先结束当前 container 动画\n      animation(container, cfg, {\n        coordinate,\n        minYPoint,\n        toAttrs: null,\n      });\n    }\n  }\n}\n","import EE from '@antv/event-emitter';\n\ninterface BaseCfg {\n  visible?: boolean;\n}\n\n/**\n * G2 Chart、View、Geometry 以及 Element 等的基类，提供事件以及一些通用的方法。\n */\nexport default class Base extends EE {\n  /** 是否可见 */\n  public visible: boolean;\n  /** 标识对象是否已销毁 */\n  public destroyed: boolean = false;\n\n  constructor(cfg: BaseCfg) {\n    super();\n    const { visible = true } = cfg;\n    this.visible = visible;\n  }\n\n  /**\n   * 显示。\n   */\n  public show() {\n    const visible = this.visible;\n    if (!visible) {\n      this.changeVisible(true);\n    }\n  }\n\n  /**\n   * 隐藏。\n   */\n  public hide() {\n    const visible = this.visible;\n    if (visible) {\n      this.changeVisible(false);\n    }\n  }\n\n  /**\n   * 销毁。\n   */\n  public destroy() {\n    this.off();\n    this.destroyed = true;\n  }\n\n  /**\n   * 显示或者隐藏。\n   * @param visible\n   * @returns\n   */\n  public changeVisible(visible: boolean) {\n    if (this.visible === visible) {\n      return;\n    }\n    this.visible = visible;\n  }\n}\n","import { debounce, each, isString } from '@antv/util';\nimport { ChartCfg } from '../interface';\nimport { GROUP_Z_INDEX, VIEW_LIFE_CIRCLE } from '../constant';\nimport { getEngine } from '../engine';\nimport { createDom, getChartSize, removeDom, modifyCSS } from '../util/dom';\nimport View from './view';\nimport { AriaOption } from '../interface';\n\n/**\n * Chart 类，是使用 G2 进行绘图的入口。\n */\nexport default class Chart extends View {\n  /** Chart 的 DOM 容器 */\n  public ele: HTMLElement;\n\n  /** 图表宽度 */\n  public width: number;\n  /** 图表高度 */\n  public height: number;\n  /** 是否开启局部刷新 */\n  public localRefresh: boolean;\n  /** 是否自适应 DOM 容器宽高，默认为 false，需要用户手动指定宽高 */\n  public autoFit: boolean;\n  /** 图表渲染引擎 */\n  public renderer: 'canvas' | 'svg';\n\n  private wrapperElement: HTMLElement;\n\n  // @ts-ignore\n  constructor(props: ChartCfg) {\n    const {\n      container,\n      width,\n      height,\n      autoFit = false,\n      padding,\n      appendPadding,\n      renderer = 'canvas',\n      pixelRatio,\n      localRefresh = true,\n      visible = true,\n      supportCSSTransform = false,\n      defaultInteractions = ['tooltip', 'legend-filter', 'legend-active', 'continuous-filter', 'ellipsis-text', 'axis-description'],\n      options,\n      limitInPlot,\n      theme,\n      syncViewPadding,\n    } = props;\n\n    const ele: HTMLElement = isString(container) ? document.getElementById(container) : container;\n\n    // 生成内部正式绘制的 div 元素\n    const wrapperElement = createDom('<div style=\"position:relative;\"></div>');\n    ele.appendChild(wrapperElement);\n\n    // if autoFit, use the container size, to avoid the graph render twice.\n    const size = getChartSize(ele, autoFit, width, height);\n\n    const G = getEngine(renderer);\n\n    const canvas = new G.Canvas({\n      container: wrapperElement,\n      pixelRatio,\n      localRefresh,\n      supportCSSTransform,\n      ...size,\n    });\n\n    // 调用 view 的创建\n    super({\n      parent: null,\n      canvas,\n      // create 3 group layers for views.\n      backgroundGroup: canvas.addGroup({ zIndex: GROUP_Z_INDEX.BG }),\n      middleGroup: canvas.addGroup({ zIndex: GROUP_Z_INDEX.MID }),\n      foregroundGroup: canvas.addGroup({ zIndex: GROUP_Z_INDEX.FORE }),\n      padding,\n      appendPadding,\n      visible,\n      options,\n      limitInPlot,\n      theme,\n      syncViewPadding,\n    });\n\n    this.ele = ele;\n    this.canvas = canvas;\n    this.width = size.width;\n    this.height = size.height;\n    this.autoFit = autoFit;\n    this.localRefresh = localRefresh;\n    this.renderer = renderer;\n    this.wrapperElement = wrapperElement;\n\n    // 自适应大小\n    this.updateCanvasStyle();\n    this.bindAutoFit();\n    this.initDefaultInteractions(defaultInteractions);\n  }\n\n  private initDefaultInteractions(interactions) {\n    each(interactions, (interaction) => {\n      this.interaction(interaction);\n    });\n  }\n\n  /**\n   * 设置 WAI-ARIA 无障碍标签。如何根据图形语法自动生成 arial 内容？\n   * @param ariaOption\n   */\n  public aria(ariaOption: AriaOption) {\n    const ATTR = 'aria-label';\n    if (ariaOption === false) {\n      this.ele.removeAttribute(ATTR);\n    } else {\n      this.ele.setAttribute(ATTR, ariaOption.label);\n    }\n  }\n\n  /**\n   * 改变图表大小，同时重新渲染。\n   * @param width 图表宽度\n   * @param height 图表高度\n   * @returns\n   */\n  public changeSize(width: number, height: number) {\n    // 如果宽高一致，那么 changeSize 不执行任何操作\n    if (this.width === width && this.height === height) {\n      return this;\n    }\n\n    this.emit(VIEW_LIFE_CIRCLE.BEFORE_CHANGE_SIZE);\n\n    this.width = width;\n    this.height = height;\n    this.canvas.changeSize(width, height);\n\n    // 重新渲染\n    this.render(true);\n\n    this.emit(VIEW_LIFE_CIRCLE.AFTER_CHANGE_SIZE);\n\n    return this;\n  }\n\n  /**\n   * 清空图表，同时清除掉 aria 配置\n   */\n  public clear() {\n    super.clear();\n\n    this.aria(false);\n  }\n\n  /**\n   * 销毁图表，同时解绑事件，销毁创建的 G.Canvas 实例。\n   * @returns void\n   */\n  public destroy() {\n    super.destroy();\n\n    this.unbindAutoFit();\n    this.canvas.destroy();\n\n    removeDom(this.wrapperElement);\n    this.wrapperElement = null;\n  }\n\n  /**\n   * 显示或隐藏图表\n   * @param visible 是否可见，true 表示显示，false 表示隐藏\n   * @returns\n   */\n  public changeVisible(visible: boolean) {\n    super.changeVisible(visible); // 需要更新 visible 变量\n    this.wrapperElement.style.display = visible ? '' : 'none';\n\n    return this;\n  }\n\n  /**\n   * 自动根据容器大小 resize 画布\n   */\n  public forceFit() {\n    // skip if already destroyed\n    if (!this.destroyed) {\n      // 注意第二参数用 true，意思是即时 autoFit = false，forceFit() 调用之后一样是适配容器\n      const { width, height } = getChartSize(this.ele, true, this.width, this.height);\n      this.changeSize(width, height);\n    }\n  }\n\n  private updateCanvasStyle() {\n    modifyCSS(this.canvas.get('el'), {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n    });\n  }\n\n  private bindAutoFit() {\n    if (this.autoFit) {\n      window.addEventListener('resize', this.onResize);\n    }\n  }\n\n  private unbindAutoFit() {\n    if (this.autoFit) {\n      window.removeEventListener('resize', this.onResize);\n    }\n  }\n\n  /**\n   * when container size changed, change chart size props, and re-render.\n   */\n  private onResize = debounce(() => {\n    this.forceFit();\n  }, 300);\n}\n","import {\n  contains,\n  deepMix,\n  each,\n  get,\n  isArray,\n  isFunction,\n  isNil,\n  isString,\n  keys,\n  upperFirst,\n  find,\n  includes,\n} from '@antv/util';\nimport { Annotation as AnnotationComponent, IElement, IGroup } from '../../dependents';\nimport {\n  AnnotationBaseOption as BaseOption,\n  AnnotationPosition as Position,\n  ArcOption,\n  ComponentOption,\n  ShapeAnnotationOption,\n  Data,\n  DataMarkerOption,\n  DataRegionOption,\n  Datum,\n  HtmlAnnotationOption,\n  ImageOption,\n  LineOption,\n  Point,\n  RegionFilterOption,\n  RegionOption,\n  RegionPositionBaseOption,\n  TextOption,\n} from '../../interface';\n\nimport { DEFAULT_ANIMATE_CFG } from '../../animate/';\nimport { COMPONENT_TYPE, DIRECTION, GEOMETRY_LIFE_CIRCLE, LAYER, VIEW_LIFE_CIRCLE } from '../../constant';\n\nimport Geometry from '../../geometry/base';\nimport Element from '../../geometry/element';\nimport { getAngleByPoint, getDistanceToCenter } from '../../util/coordinate';\nimport { omit } from '../../util/helper';\nimport { getNormalizedValue } from '../../util/annotation';\nimport View from '../view';\nimport { Controller } from './base';\nimport { Scale } from '@antv/attr';\n\n/** 需要在图形绘制完成后才渲染的辅助组件类型列表 */\nconst ANNOTATIONS_AFTER_RENDER = ['regionFilter', 'shape'];\n\n/**\n * Annotation controller, 主要作用:\n * 1. 创建 Annotation: line、text、arc ...\n * 2. 生命周期: init、layout、render、clear、destroy\n */\nexport default class Annotation extends Controller<BaseOption[]> {\n  private foregroundContainer: IGroup;\n  private backgroundContainer: IGroup;\n\n  /* 组件更新的 cache，组件配置 object : 组件 */\n  private cache = new Map<BaseOption, ComponentOption>();\n\n  constructor(view: View) {\n    super(view);\n\n    this.foregroundContainer = this.view.getLayer(LAYER.FORE).addGroup();\n    this.backgroundContainer = this.view.getLayer(LAYER.BG).addGroup();\n\n    this.option = [];\n  }\n\n  public get name(): string {\n    return 'annotation';\n  }\n\n  public init() { }\n\n  /**\n   * 因为 annotation 需要依赖坐标系信息，所以 render 阶段为空方法，实际的创建逻辑都在 layout 中\n   */\n  public layout() {\n    this.update();\n  }\n\n  // 因为 Annotation 不参与布局，但是渲染的位置依赖于坐标系，所以可以将绘制阶段延迟到 layout() 进行\n  public render() { }\n\n  /**\n   * 更新\n   */\n  public update() {\n    // 1. 先处理需要在图形渲染之后的辅助组件 需要在 Geometry 完成之后，拿到图形信息\n    this.onAfterRender(() => {\n      const updated = new Map<BaseOption, ComponentOption>();\n      // 先看是否有 regionFilter/shape 要更新\n      each(this.option, (option: BaseOption) => {\n        if (includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n          const co = this.updateOrCreate(option);\n          // 存储已经处理过的\n          if (co) {\n            updated.set(this.getCacheKey(option), co);\n          }\n        }\n      });\n\n      // 处理完成之后，更新 cache\n      // 处理完成之后，销毁删除的\n      this.cache = this.syncCache(updated);\n    });\n\n    // 2. 处理非 regionFilter\n    const updateCache = new Map<BaseOption, ComponentOption>();\n    each(this.option, (option: BaseOption) => {\n      if (!includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n        const co = this.updateOrCreate(option);\n        // 存储已经处理过的\n        if (co) {\n          updateCache.set(this.getCacheKey(option), co);\n        }\n      }\n    });\n    this.cache = this.syncCache(updateCache);\n  }\n\n  /**\n   * 清空\n   * @param includeOption 是否清空 option 配置项\n   */\n  public clear(includeOption = false) {\n    super.clear();\n\n    this.clearComponents();\n    this.foregroundContainer.clear();\n    this.backgroundContainer.clear();\n\n    // clear all option\n    if (includeOption) {\n      this.option = [];\n    }\n  }\n\n  public destroy() {\n    this.clear(true);\n\n    this.foregroundContainer.remove(true);\n    this.backgroundContainer.remove(true);\n  }\n\n  /**\n   * 复写基类的方法\n   */\n  public getComponents(): ComponentOption[] {\n    const co = [];\n\n    this.cache.forEach((value: ComponentOption) => {\n      co.push(value);\n    });\n\n    return co;\n  }\n\n  /**\n   * 清除当前的组件\n   */\n  private clearComponents() {\n    this.getComponents().forEach((co) => {\n      co.component.destroy();\n    });\n\n    this.cache.clear();\n  }\n\n  /**\n   * region filter 比较特殊的渲染时机\n   * @param doWhat\n   */\n  private onAfterRender(doWhat: () => void) {\n    let done = false;\n    if (this.view.getOptions().animate) {\n      this.view.geometries.forEach((g: Geometry) => {\n        // 如果 geometry 开启，则监听\n        if (g.animateOption) {\n          g.once(GEOMETRY_LIFE_CIRCLE.AFTER_DRAW_ANIMATE, () => {\n          doWhat();\n          });\n          done = true;\n        }\n      });\n    }\n\n    if (!done) {\n      this.view.getRootView().once(VIEW_LIFE_CIRCLE.AFTER_RENDER, () => {\n        doWhat();\n      });\n    }\n  }\n\n  private createAnnotation(option: BaseOption) {\n    const { type } = option;\n\n    const Ctor = AnnotationComponent[upperFirst(type)];\n    if (Ctor) {\n      const theme = this.getAnnotationTheme(type);\n      const cfg = this.getAnnotationCfg(type, option, theme);\n      // 不创建\n      if (!cfg) {\n        return null;\n      }\n      const annotation = new Ctor(cfg);\n\n      return {\n        component: annotation,\n        layer: this.isTop(cfg) ? LAYER.FORE : LAYER.BG,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.ANNOTATION,\n        extra: option,\n      };\n    }\n  }\n\n  // APIs for creating annotation component\n  public annotation(option: any) {\n    this.option.push(option);\n  }\n\n  /**\n   * 创建 Arc\n   * @param option\n   * @returns AnnotationController\n   */\n  public arc(option: ArcOption) {\n    this.annotation({\n      type: 'arc',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 image\n   * @param option\n   * @returns AnnotationController\n   */\n  public image(option: ImageOption) {\n    this.annotation({\n      type: 'image',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 Line\n   * @param option\n   * @returns AnnotationController\n   */\n  public line(option: LineOption) {\n    this.annotation({\n      type: 'line',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 Region\n   * @param option\n   * @returns AnnotationController\n   */\n  public region(option: RegionOption) {\n    this.annotation({\n      type: 'region',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 Text\n   * @param option\n   * @returns AnnotationController\n   */\n  public text(option: TextOption) {\n    this.annotation({\n      type: 'text',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 DataMarker\n   * @param option\n   * @returns AnnotationController\n   */\n  public dataMarker(option: DataMarkerOption) {\n    this.annotation({\n      type: 'dataMarker',\n      ...option,\n    });\n\n    return this;\n  }\n\n  /**\n   * 创建 DataRegion\n   * @param option\n   * @returns AnnotationController\n   */\n  public dataRegion(option: DataRegionOption) {\n    this.annotation({\n      type: 'dataRegion',\n      ...option,\n    });\n  }\n\n  /**\n   * 创建 RegionFilter\n   * @param option\n   * @returns AnnotationController\n   */\n  public regionFilter(option: RegionFilterOption) {\n    this.annotation({\n      type: 'regionFilter',\n      ...option,\n    });\n  }\n\n  /**\n   * 创建 ShapeAnnotation\n   * @param option\n   */\n  public shape(option: ShapeAnnotationOption) {\n    this.annotation({\n      type: 'shape',\n      ...option,\n    });\n  }\n\n  /**\n   * 创建 HtmlAnnotation\n   * @param option\n   */\n  public html(option: HtmlAnnotationOption) {\n    this.annotation({\n      type: 'html',\n      ...option,\n    });\n  }\n  // end API\n\n  /**\n   * parse the point position to [x, y]\n   * @param p Position\n   * @returns { x, y }\n   */\n  private parsePosition(\n    p:\n      | [string | number, string | number]\n      | Datum\n      | ((xScale: Scale, yScale: Scale) => [string | number, string | number] | number | Datum)\n  ): Point {\n    const xScale = this.view.getXScale();\n    // 转成 object\n    const yScales = this.view.getScalesByDim('y');\n\n    const position: Position = isFunction(p) ? p.call(null, xScale, yScales) : p;\n\n    let x = 0;\n    let y = 0;\n\n    // 入参是 [24, 24] 这类时\n    if (isArray(position)) {\n      const [xPos, yPos] = position;\n      // 如果数据格式是 ['50%', '50%'] 的格式\n      // fix: 原始数据中可能会包含 'xxx5%xxx' 这样的数据，需要判断下 https://github.com/antvis/f2/issues/590\n      // @ts-ignore\n      if (isString(xPos) && xPos.indexOf('%') !== -1 && !isNaN(xPos.slice(0, -1))) {\n        return this.parsePercentPosition(position as [string, string]);\n      }\n\n      x = getNormalizedValue(xPos, xScale);\n      y = getNormalizedValue(yPos, Object.values(yScales)[0]);\n    } else if (!isNil(position)) {\n      // 入参是 object 结构，数据点\n      for (const key of keys(position)) {\n        const value = position[key];\n        if (key === xScale.field) {\n          x = getNormalizedValue(value, xScale);\n        }\n        if (yScales[key]) {\n          y = getNormalizedValue(value, yScales[key]);\n        }\n      }\n    }\n\n    if (isNaN(x) || isNaN(y)) {\n      return null;\n    }\n\n    return this.view.getCoordinate().convert({ x, y });\n  }\n\n  /**\n   * parse all the points between start and end\n   * @param start\n   * @param end\n   * @return Point[]\n   */\n  private getRegionPoints(start: Position | Data, end: Position | Data): Point[] {\n    const xScale = this.view.getXScale();\n    const yScales = this.view.getScalesByDim('y');\n    const yScale = Object.values(yScales)[0];\n    const xField = xScale.field;\n    const viewData = this.view.getData();\n    const startXValue = isArray(start) ? start[0] : start[xField];\n    const endXValue = isArray(end) ? end[0] : end[xField];\n    const arr = [];\n\n    let startIndex;\n    each(viewData, (item, idx) => {\n      if (item[xField] === startXValue) {\n        startIndex = idx;\n      }\n      if (idx >= startIndex) {\n        const point = this.parsePosition([item[xField], item[yScale.field]]);\n        if (point) {\n          arr.push(point);\n        }\n      }\n      if (item[xField] === endXValue) {\n        return false;\n      }\n    });\n\n    return arr;\n  }\n\n  /**\n   * parse percent position\n   * @param position\n   */\n  private parsePercentPosition(position: [string, string]): Point {\n    const xPercent = parseFloat(position[0]) / 100;\n    const yPercent = parseFloat(position[1]) / 100;\n    const coordinate = this.view.getCoordinate();\n    const { start, end } = coordinate;\n\n    const topLeft = {\n      x: Math.min(start.x, end.x),\n      y: Math.min(start.y, end.y),\n    };\n    const x = coordinate.getWidth() * xPercent + topLeft.x;\n    const y = coordinate.getHeight() * yPercent + topLeft.y;\n    return { x, y };\n  }\n\n  /**\n   * get coordinate bbox\n   */\n  private getCoordinateBBox() {\n    const coordinate = this.view.getCoordinate();\n    const { start, end } = coordinate;\n\n    const width = coordinate.getWidth();\n    const height = coordinate.getHeight();\n    const topLeft = {\n      x: Math.min(start.x, end.x),\n      y: Math.min(start.y, end.y),\n    };\n\n    return {\n      x: topLeft.x,\n      y: topLeft.y,\n      minX: topLeft.x,\n      minY: topLeft.y,\n      maxX: topLeft.x + width,\n      maxY: topLeft.y + height,\n      width,\n      height,\n    };\n  }\n\n  /**\n   * get annotation component config by different type\n   * @param type\n   * @param option 用户的配置\n   * @param theme\n   */\n  private getAnnotationCfg(type: string, option: any, theme: object): object | null {\n    const coordinate = this.view.getCoordinate();\n    const canvas = this.view.getCanvas();\n    let o = {};\n\n    if (isNil(option)) {\n      return null;\n    }\n    const { start, end, position } = option;\n    const sp = this.parsePosition(start);\n    const ep = this.parsePosition(end);\n    const textPoint = this.parsePosition(position);\n    if (['arc', 'image', 'line', 'region', 'regionFilter'].includes(type) && (!sp || !ep)) {\n      return null;\n    } else if (['text', 'dataMarker', 'html'].includes(type) && !textPoint) {\n      return null;\n    }\n\n    if (type === 'arc') {\n      const { start, end, ...rest } = option as ArcOption;\n      const startAngle = getAngleByPoint(coordinate, sp);\n      let endAngle = getAngleByPoint(coordinate, ep);\n      if (startAngle > endAngle) {\n        endAngle = Math.PI * 2 + endAngle;\n      }\n\n      o = {\n        ...rest,\n        center: coordinate.getCenter(),\n        radius: getDistanceToCenter(coordinate, sp),\n        startAngle,\n        endAngle,\n      };\n    } else if (type === 'image') {\n      const { start, end, ...rest } = option as ImageOption;\n      o = {\n        ...rest,\n        start: sp,\n        end: ep,\n        src: option.src,\n      };\n    } else if (type === 'line') {\n      const { start, end, ...rest } = option as LineOption;\n      o = {\n        ...rest,\n        start: sp,\n        end: ep,\n        text: get(option, 'text', null),\n      };\n    } else if (type === 'region') {\n      const { start, end, ...rest } = option as RegionPositionBaseOption;\n      o = {\n        ...rest,\n        start: sp,\n        end: ep,\n      };\n    } else if (type === 'text') {\n      const filteredData = this.view.getData();\n      const { position, content, ...rest } = option as TextOption;\n      let textContent = content;\n      if (isFunction(content)) {\n        textContent = content(filteredData);\n      }\n      o = {\n        ...textPoint,\n        ...rest,\n        content: textContent,\n      };\n    } else if (type === 'dataMarker') {\n      const { position, point, line, text, autoAdjust, direction, ...rest } = option as DataMarkerOption;\n      o = {\n        ...rest,\n        ...textPoint,\n        coordinateBBox: this.getCoordinateBBox(),\n        point,\n        line,\n        text,\n        autoAdjust,\n        direction,\n      };\n    } else if (type === 'dataRegion') {\n      const { start, end, region, text, lineLength, ...rest } = option as DataRegionOption;\n      o = {\n        ...rest,\n        points: this.getRegionPoints(start, end),\n        region,\n        text,\n        lineLength,\n      };\n    } else if (type === 'regionFilter') {\n      const { start, end, apply, color, ...rest } = option as RegionFilterOption;\n      const geometries: Geometry[] = this.view.geometries;\n      const shapes = [];\n      const addShapes = (item?: IElement) => {\n        if (!item) {\n          return;\n        }\n        if (item.isGroup()) {\n          (item as IGroup).getChildren().forEach((child) => addShapes(child));\n        } else {\n          shapes.push(item);\n        }\n      };\n      each(geometries, (geom: Geometry) => {\n        if (apply) {\n          if (contains(apply, geom.type)) {\n            each(geom.elements, (elem: Element) => {\n              addShapes(elem.shape);\n            });\n          }\n        } else {\n          each(geom.elements, (elem: Element) => {\n            addShapes(elem.shape);\n          });\n        }\n      });\n      o = {\n        ...rest,\n        color,\n        shapes,\n        start: sp,\n        end: ep,\n      };\n    } else if (type === 'shape') {\n      const { render, ...restOptions } = option as ShapeAnnotationOption;\n      const wrappedRender = (container: IGroup) => {\n        if (isFunction(option.render)) {\n          return render(container, this.view, { parsePosition: this.parsePosition.bind(this) });\n        }\n      };\n      o = {\n        ...restOptions,\n        render: wrappedRender,\n      };\n    } else if (type === 'html') {\n      const { html, position, ...restOptions } = option as HtmlAnnotationOption;\n      const wrappedHtml = (container: HTMLElement) => {\n        if (isFunction(html)) {\n          return html(container, this.view);\n        }\n        return html;\n      };\n      o = {\n        ...restOptions,\n        ...textPoint,\n        // html 组件需要指定 parent\n        parent: canvas.get('el').parentNode,\n        html: wrappedHtml,\n      };\n    }\n    // 合并主题，用户配置优先级高于默认主题\n    const cfg = deepMix({}, theme, {\n      ...o,\n      top: option.top,\n      style: option.style,\n      offsetX: option.offsetX,\n      offsetY: option.offsetY,\n    });\n    if (type !== 'html') {\n      // html 类型不使用 G container\n      cfg.container = this.getComponentContainer(cfg);\n    }\n    cfg.animate = this.view.getOptions().animate && cfg.animate && get(option, 'animate', cfg.animate); // 如果 view 关闭动画，则不执行\n    cfg.animateOption = deepMix({}, DEFAULT_ANIMATE_CFG, cfg.animateOption, option.animateOption);\n\n    return cfg;\n  }\n\n  /**\n   * is annotation render on top\n   * @param option\n   * @return whethe on top\n   */\n  private isTop(option: any): boolean {\n    return get(option, 'top', true);\n  }\n\n  /**\n   * get the container by option.top\n   * default is on top\n   * @param option\n   * @returns the container\n   */\n  private getComponentContainer(option: any) {\n    return this.isTop(option) ? this.foregroundContainer : this.backgroundContainer;\n  }\n\n  private getAnnotationTheme(type: string) {\n    return get(this.view.getTheme(), ['components', 'annotation', type], {});\n  }\n\n  /**\n   * 创建或者更新 annotation\n   * @param option\n   */\n  private updateOrCreate(option: BaseOption) {\n    // 拿到缓存的内容\n    let co = this.cache.get(this.getCacheKey(option));\n\n    // 存在则更新，不存在在创建\n    if (co) {\n      const { type } = option;\n      const theme = this.getAnnotationTheme(type);\n      const cfg = this.getAnnotationCfg(type, option, theme);\n\n      // 忽略掉一些配置\n      if (cfg) {\n        omit(cfg, ['container']);\n      }\n      co.component.update({ ...(cfg || {}), visible: !!cfg });\n      // 对于 regionFilter/shape，因为生命周期的原因，需要额外 render\n      if (includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n        co.component.render();\n      }\n    } else {\n      // 不存在，创建\n      co = this.createAnnotation(option);\n      if (co) {\n        co.component.init();\n        // Note：regionFilter/shape 特殊处理，regionFilter/shape 需要取到 Geometry 中的 Shape，需要在 view render 之后处理\n        // 其他组件使用外层的统一 render 逻辑\n        if (includes(ANNOTATIONS_AFTER_RENDER, option.type)) {\n          co.component.render();\n        }\n      }\n    }\n    return co;\n  }\n\n  /**\n   * 更新缓存，以及销毁组件\n   * @param updated 更新或者创建的组件\n   */\n  private syncCache(updated: Map<BaseOption, ComponentOption>) {\n    const newCache = new Map(this.cache); // clone 一份\n\n    // 将 update 更新到 cache\n    updated.forEach((co: ComponentOption, key: BaseOption) => {\n      newCache.set(key, co);\n    });\n\n    // 另外和 options 进行对比，删除\n    newCache.forEach((co: ComponentOption, key: BaseOption) => {\n      // option 中已经找不到，那么就是删除的\n      if (\n        !find(this.option, (option: BaseOption) => {\n          return key === this.getCacheKey(option);\n        })\n      ) {\n        co.component.destroy();\n        newCache.delete(key);\n      }\n    });\n\n    return newCache;\n  }\n\n  /**\n   * 获得缓存组件的 key\n   * @param option\n   */\n  private getCacheKey(option: BaseOption) {\n    // 如果存在 id，则使用 id string，否则直接使用 option 引用作为 key\n    return option;\n    // 后续扩展 id 用\n    // const id = get(option, 'id');\n    // return id ? id : option;\n  }\n}\n","import { deepMix, each, get, isUndefined } from '@antv/util';\nimport { DIRECTION, COMPONENT_TYPE, LAYER } from '../../constant';\nimport { CircleAxis, CircleGrid, IGroup, LineAxis, LineGrid, Scale } from '../../dependents';\nimport { AxisCfg, AxisOption, ComponentOption } from '../../interface';\n\nimport { DEFAULT_ANIMATE_CFG } from '../../animate/';\n\nimport {\n  getAxisDirection,\n  getAxisFactorByRegion,\n  getAxisRegion,\n  getAxisThemeCfg,\n  getAxisTitleOptions,\n  getAxisTitleText,\n  getCircleAxisCenterRadius,\n  isVertical,\n} from '../../util/axis';\nimport { getAxisOption } from '../../util/axis';\nimport { getCircleGridItems, getGridThemeCfg, getLineGridItems, showGrid } from '../../util/grid';\nimport { omit } from '../../util/helper';\nimport View from '../view';\nimport { Controller } from './base';\n\ntype Option = Record<string, AxisOption> | boolean;\n\ntype Cache = Map<string, ComponentOption>;\n\n// update 组件的时候，忽略的数据更新\nconst OMIT_CFG = ['container'];\n\n// 坐标轴默认动画配置\nconst AXIS_DEFAULT_ANIMATE_CFG = {\n  ...DEFAULT_ANIMATE_CFG,\n  appear: null,\n};\n\n/**\n * @ignore\n * G2 Axis controller, will:\n *  - create component\n *    - axis\n *    - grid\n *  - life circle\n */\nexport default class Axis extends Controller<Option> {\n  /** the draw group of axis */\n  private axisContainer: IGroup;\n  private axisForeContainer: IGroup;\n  private gridContainer: IGroup;\n  private gridForeContainer: IGroup;\n\n  /** 使用 object 存储组件 */\n  private cache: Cache = new Map<string, ComponentOption>();\n\n  constructor(view: View) {\n    super(view);\n\n    // 先创建 gridContainer，将 grid 放到 axis 底层\n    this.gridContainer = this.view.getLayer(LAYER.BG).addGroup();\n    this.gridForeContainer = this.view.getLayer(LAYER.FORE).addGroup();\n    this.axisContainer = this.view.getLayer(LAYER.BG).addGroup();\n    this.axisForeContainer = this.view.getLayer(LAYER.FORE).addGroup();\n  }\n\n  public get name(): string {\n    return 'axis';\n  }\n\n  public init() {}\n\n  public render() {\n    this.update();\n  }\n\n  /**\n   * 更新组件布局，位置大小\n   */\n  public layout() {\n    const coordinate = this.view.getCoordinate();\n\n    each(this.getComponents(), (co: ComponentOption) => {\n      const { component, direction, type, extra } = co;\n      const { dim, scale, alignTick } = extra;\n\n      let updated;\n\n      if (type === COMPONENT_TYPE.AXIS) {\n        if (coordinate.isPolar) {\n          if (dim === 'x') {\n            updated = coordinate.isTransposed\n              ? getAxisRegion(coordinate, direction)\n              : getCircleAxisCenterRadius(coordinate);\n          } else if (dim === 'y') {\n            updated = coordinate.isTransposed\n              ? getCircleAxisCenterRadius(coordinate)\n              : getAxisRegion(coordinate, direction);\n          }\n        } else {\n          updated = getAxisRegion(coordinate, direction);\n        }\n      } else if (type === COMPONENT_TYPE.GRID) {\n        if (coordinate.isPolar) {\n          let items;\n          if (coordinate.isTransposed) {\n            items =\n              dim === 'x'\n                ? getCircleGridItems(coordinate, this.view.getYScales()[0], scale, alignTick, dim)\n                : getLineGridItems(coordinate, scale, dim, alignTick);\n          } else {\n            items =\n              dim === 'x'\n                ? getLineGridItems(coordinate, scale, dim, alignTick)\n                : getCircleGridItems(coordinate, this.view.getXScale(), scale, alignTick, dim);\n          }\n          updated = {\n            items,\n            // coordinate 更新之后，center 也变化了\n            center: this.view.getCoordinate().getCenter(),\n          };\n        } else {\n          updated = { items: getLineGridItems(coordinate, scale, dim, alignTick) };\n        }\n      }\n      component.update(updated);\n    });\n  }\n\n  /**\n   * 更新 axis 组件\n   */\n  public update() {\n    this.option = this.view.getOptions().axes;\n\n    const updatedCache = new Map<string, ComponentOption>();\n\n    this.updateXAxes(updatedCache);\n    this.updateYAxes(updatedCache);\n\n    // 处理完成之后，销毁删除的\n    // 不在处理中的\n    const newCache = new Map<string, ComponentOption>();\n\n    this.cache.forEach((co: ComponentOption, key: string) => {\n      if (updatedCache.has(key)) {\n        newCache.set(key, co);\n      } else {\n        // 不存在，则是所有需要被销毁的组件\n        co.component.destroy();\n      }\n    });\n\n    // 更新缓存\n    this.cache = newCache;\n  }\n\n  public clear() {\n    super.clear();\n\n    this.cache.clear();\n    this.gridContainer.clear();\n    this.gridForeContainer.clear();\n    this.axisContainer.clear();\n    this.axisForeContainer.clear();\n  }\n\n  public destroy() {\n    super.destroy();\n\n    this.gridContainer.remove(true);\n    this.gridForeContainer.remove(true);\n    this.axisContainer.remove(true);\n    this.axisForeContainer.remove(true);\n  }\n\n  /**\n   * @override\n   */\n  public getComponents(): ComponentOption[] {\n    const co = [];\n\n    this.cache.forEach((value: ComponentOption) => {\n      co.push(value);\n    });\n\n    return co;\n  }\n\n  /**\n   * 更新 x axis\n   * @param updatedCache\n   */\n  private updateXAxes(updatedCache: Cache) {\n    // x axis\n    const scale = this.view.getXScale();\n\n    if (!scale || scale.isIdentity) {\n      return;\n    }\n\n    const xAxisOption = getAxisOption(this.option, scale.field);\n    if (xAxisOption === false) {\n      return;\n    }\n\n    const direction = getAxisDirection(xAxisOption, DIRECTION.BOTTOM);\n    const layer = LAYER.BG;\n    const dim = 'x';\n\n    const coordinate = this.view.getCoordinate();\n\n    const axisId = this.getId('axis', scale.field);\n    const gridId = this.getId('grid', scale.field);\n\n    if (coordinate.isRect) {\n      // 1. do axis update\n      let axis = this.cache.get(axisId);\n      // 存在则更新\n      if (axis) {\n        const cfg = this.getLineAxisCfg(scale, xAxisOption, direction);\n        omit(cfg, OMIT_CFG);\n        axis.component.update(cfg);\n        updatedCache.set(axisId, axis);\n      } else {\n        // 不存在，则创建\n        axis = this.createLineAxis(scale, xAxisOption, layer, direction, dim);\n        this.cache.set(axisId, axis);\n        updatedCache.set(axisId, axis);\n      }\n\n      // 2. do grid update\n      let grid = this.cache.get(gridId);\n      // 存在则更新\n      if (grid) {\n        const cfg = this.getLineGridCfg(scale, xAxisOption, direction, dim);\n        omit(cfg, OMIT_CFG);\n        grid.component.update(cfg);\n        updatedCache.set(gridId, grid);\n      } else {\n        // 不存在则创建\n        grid = this.createLineGrid(scale, xAxisOption, layer, direction, dim);\n        if (grid) {\n          this.cache.set(gridId, grid);\n          updatedCache.set(gridId, grid);\n        }\n      }\n    } else if (coordinate.isPolar) {\n      // 1. do axis update\n      let axis = this.cache.get(axisId);\n      // 存在则更新\n      if (axis) {\n        const cfg = coordinate.isTransposed\n          ? this.getLineAxisCfg(scale, xAxisOption, DIRECTION.RADIUS)\n          : this.getCircleAxisCfg(scale, xAxisOption, direction);\n\n        omit(cfg, OMIT_CFG);\n        axis.component.update(cfg);\n        updatedCache.set(axisId, axis);\n      } else {\n        // 不存在，则创建\n        if (coordinate.isTransposed) {\n          if (isUndefined(xAxisOption)) {\n            // 默认不渲染转置极坐标下的坐标轴\n            return;\n          } else {\n            // 如果用户打开了隐藏的坐标轴 chart.axis(true)/chart.axis('x', true)\n            // 那么对于转置了的极坐标，半径轴显示的是 x 轴对应的数据\n            axis = this.createLineAxis(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n          }\n        } else {\n          axis = this.createCircleAxis(scale, xAxisOption, layer, direction, dim);\n        }\n        this.cache.set(axisId, axis);\n        updatedCache.set(axisId, axis);\n      }\n\n      // 2. do grid update\n      let grid = this.cache.get(gridId);\n      // 存在则更新\n      if (grid) {\n        const cfg = coordinate.isTransposed\n          ? this.getCircleGridCfg(scale, xAxisOption, DIRECTION.RADIUS, dim)\n          : this.getLineGridCfg(scale, xAxisOption, DIRECTION.CIRCLE, dim);\n        omit(cfg, OMIT_CFG);\n        grid.component.update(cfg);\n        updatedCache.set(gridId, grid);\n      } else {\n        // 不存在则创建\n        if (coordinate.isTransposed) {\n          if (isUndefined(xAxisOption)) {\n            return;\n          } else {\n            grid = this.createCircleGrid(scale, xAxisOption, layer, DIRECTION.RADIUS, dim);\n          }\n        } else {\n          // grid，极坐标下的 x 轴网格线沿着半径方向绘制\n          grid = this.createLineGrid(scale, xAxisOption, layer, DIRECTION.CIRCLE, dim);\n        }\n\n        if (grid) {\n          this.cache.set(gridId, grid);\n          updatedCache.set(gridId, grid);\n        }\n      }\n    } else {\n      // helix and other, do not draw axis\n    }\n  }\n\n  private updateYAxes(updatedCache: Cache) {\n    // y axes\n    const yScales = this.view.getYScales();\n\n    each(yScales, (scale: Scale, idx: number) => {\n      // @ts-ignore\n      if (!scale || scale.isIdentity) {\n        return;\n      }\n      const { field } = scale;\n      const yAxisOption = getAxisOption(this.option, field);\n\n      if (yAxisOption !== false) {\n        const layer = LAYER.BG;\n        const dim = 'y';\n        const axisId = this.getId('axis', field);\n        const gridId = this.getId('grid', field);\n\n        const coordinate = this.view.getCoordinate();\n\n        if (coordinate.isRect) {\n          const direction = getAxisDirection(yAxisOption, idx === 0 ? DIRECTION.LEFT : DIRECTION.RIGHT);\n\n          // 1. do axis update\n          let axis = this.cache.get(axisId);\n          // 存在则更新\n          if (axis) {\n            const cfg = this.getLineAxisCfg(scale, yAxisOption, direction);\n            omit(cfg, OMIT_CFG);\n            axis.component.update(cfg);\n            updatedCache.set(axisId, axis);\n          } else {\n            // 不存在，则创建\n            axis = this.createLineAxis(scale, yAxisOption, layer, direction, dim);\n            this.cache.set(axisId, axis);\n            updatedCache.set(axisId, axis);\n          }\n\n          // 2. do grid update\n          let grid = this.cache.get(gridId);\n          // 存在则更新\n          if (grid) {\n            const cfg = this.getLineGridCfg(scale, yAxisOption, direction, dim);\n            omit(cfg, OMIT_CFG);\n            grid.component.update(cfg);\n            updatedCache.set(gridId, grid);\n          } else {\n            // 不存在则创建\n            grid = this.createLineGrid(scale, yAxisOption, layer, direction, dim);\n            if (grid) {\n              this.cache.set(gridId, grid);\n              updatedCache.set(gridId, grid);\n            }\n          }\n        } else if (coordinate.isPolar) {\n          // 1. do axis update\n          let axis = this.cache.get(axisId);\n          // 存在则更新\n          if (axis) {\n            const cfg = coordinate.isTransposed\n              ? this.getCircleAxisCfg(scale, yAxisOption, DIRECTION.CIRCLE)\n              : this.getLineAxisCfg(scale, yAxisOption, DIRECTION.RADIUS);\n\n            // @ts-ignore\n            omit(cfg, OMIT_CFG);\n            axis.component.update(cfg);\n            updatedCache.set(axisId, axis);\n          } else {\n            // 不存在，则创建\n            if (coordinate.isTransposed) {\n              if (isUndefined(yAxisOption)) {\n                return;\n              } else {\n                axis = this.createCircleAxis(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n              }\n            } else {\n              axis = this.createLineAxis(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n            }\n\n            this.cache.set(axisId, axis);\n            updatedCache.set(axisId, axis);\n          }\n\n          // 2. do grid update\n          let grid = this.cache.get(gridId);\n          // 存在则更新\n          if (grid) {\n            const cfg = coordinate.isTransposed\n              ? this.getLineGridCfg(scale, yAxisOption, DIRECTION.CIRCLE, dim)\n              : this.getCircleGridCfg(scale, yAxisOption, DIRECTION.RADIUS, dim);\n            omit(cfg, OMIT_CFG);\n            grid.component.update(cfg);\n            updatedCache.set(gridId, grid);\n          } else {\n            // 不存在则创建\n            if (coordinate.isTransposed) {\n              if (isUndefined(yAxisOption)) {\n                return;\n              } else {\n                grid = this.createLineGrid(scale, yAxisOption, layer, DIRECTION.CIRCLE, dim);\n              }\n            } else {\n              grid = this.createCircleGrid(scale, yAxisOption, layer, DIRECTION.RADIUS, dim);\n            }\n\n            if (grid) {\n              this.cache.set(gridId, grid);\n              updatedCache.set(gridId, grid);\n            }\n          }\n        } else {\n          // helix and other, do not draw axis\n        }\n      }\n    });\n  }\n\n  /**\n   * 创建 line axis\n   * @param scale\n   * @param option\n   * @param layer\n   * @param direction\n   * @param dim\n   */\n  private createLineAxis(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    // axis\n    const axis = {\n      component: new LineAxis(this.getLineAxisCfg(scale, option, direction)),\n      layer,\n      direction: direction === DIRECTION.RADIUS ? DIRECTION.NONE : direction,\n      type: COMPONENT_TYPE.AXIS,\n      extra: { dim, scale },\n    };\n    axis.component.set('field', scale.field);\n    axis.component.init();\n\n    return axis;\n  }\n\n  private createLineGrid(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    const cfg = this.getLineGridCfg(scale, option, direction, dim);\n    if (cfg) {\n      const grid = {\n        component: new LineGrid(cfg),\n        layer,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.GRID,\n        extra: {\n          dim,\n          scale,\n          alignTick: get(cfg, 'alignTick', true),\n        },\n      };\n      grid.component.init();\n\n      return grid;\n    }\n  }\n\n  private createCircleAxis(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    const axis = {\n      component: new CircleAxis(this.getCircleAxisCfg(scale, option, direction)),\n      layer,\n      direction,\n      type: COMPONENT_TYPE.AXIS,\n      extra: { dim, scale },\n    };\n    axis.component.set('field', scale.field);\n\n    axis.component.init();\n\n    return axis;\n  }\n\n  private createCircleGrid(\n    scale: Scale,\n    option: AxisCfg,\n    layer: LAYER,\n    direction: DIRECTION,\n    dim: string\n  ): ComponentOption {\n    const cfg = this.getCircleGridCfg(scale, option, direction, dim);\n    if (cfg) {\n      const grid = {\n        component: new CircleGrid(cfg),\n        layer,\n        direction: DIRECTION.NONE,\n        type: COMPONENT_TYPE.GRID,\n        extra: {\n          dim,\n          scale,\n          alignTick: get(cfg, 'alignTick', true),\n        },\n      };\n\n      grid.component.init();\n      return grid;\n    }\n  }\n\n  /**\n   * generate line axis cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return line axis cfg\n   */\n  private getLineAxisCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION) {\n    const container = get(axisOption, ['top']) ? this.axisForeContainer : this.axisContainer;\n    const coordinate = this.view.getCoordinate();\n    const region = getAxisRegion(coordinate, direction);\n    const titleText = getAxisTitleText(scale, axisOption);\n    const axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), direction);\n    // the cfg order should be ensure\n    const optionWithTitle = get(axisOption, ['title'])\n      ? deepMix(\n          { title: { style: { text: titleText } } },\n          { title: getAxisTitleOptions(this.view.getTheme(), direction, axisOption.title) },\n          axisOption\n        )\n      : axisOption;\n\n    const cfg = deepMix(\n      {\n        container,\n        ...region,\n        ticks: scale.getTicks().map((tick) => ({ id: `${tick.tickValue}`, name: tick.text, value: tick.value })),\n        verticalFactor: coordinate.isPolar\n          ? getAxisFactorByRegion(region, coordinate.getCenter()) * -1\n          : getAxisFactorByRegion(region, coordinate.getCenter()),\n        theme: axisThemeCfg,\n      },\n      axisThemeCfg,\n      optionWithTitle\n    );\n    const { animate, animateOption } = this.getAnimateCfg(cfg);\n    cfg.animateOption = animateOption;\n    cfg.animate = animate;\n\n    // 计算 verticalLimitLength\n    const isAxisVertical = isVertical(region);\n    // TODO: 1 / 3 等默认值需要有一个全局的配置的地方\n    const verticalLimitLength = get(cfg, 'verticalLimitLength', isAxisVertical ? 1 / 3 : 1 / 2);\n    if (verticalLimitLength <= 1) {\n      // 配置的相对值，相对于画布\n      const canvasWidth = this.view.getCanvas().get('width');\n      const canvasHeight = this.view.getCanvas().get('height');\n      cfg.verticalLimitLength = verticalLimitLength * (isAxisVertical ? canvasWidth : canvasHeight);\n    }\n\n    return cfg;\n  }\n\n  /**\n   * generate line grid cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @param dim\n   * @return line grid cfg\n   */\n  private getLineGridCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION, dim: string) {\n    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n      return undefined;\n    }\n    const gridThemeCfg = getGridThemeCfg(this.view.getTheme(), direction);\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    const gridCfg = deepMix(\n      {\n        container: get(axisOption, ['top']) ? this.gridForeContainer : this.gridContainer,\n      },\n      gridThemeCfg,\n      get(axisOption, 'grid'),\n      this.getAnimateCfg(axisOption)\n    );\n    gridCfg.items = getLineGridItems(this.view.getCoordinate(), scale, dim, get(gridCfg, 'alignTick', true));\n\n    return gridCfg;\n  }\n\n  /**\n   * generate circle axis cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return circle axis cfg\n   */\n  private getCircleAxisCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION) {\n    const container = get(axisOption, ['top']) ? this.axisForeContainer : this.axisContainer;\n    const coordinate = this.view.getCoordinate();\n\n    const ticks = scale.getTicks().map((tick) => ({ id: `${tick.tickValue}`, name: tick.text, value: tick.value }));\n    if (!scale.isCategory && Math.abs(coordinate.endAngle - coordinate.startAngle) === Math.PI * 2) {\n      // x 轴对应的值如果是非 cat 类型，在整圆的情况下坐标轴第一个和最后一个文本会重叠，默认只展示第一个文本\n      if (ticks.length) ticks[ticks.length - 1].name = '';\n    }\n\n    const titleText = getAxisTitleText(scale, axisOption);\n    const axisThemeCfg = getAxisThemeCfg(this.view.getTheme(), DIRECTION.CIRCLE);\n    // the cfg order should be ensure\n    const optionWithTitle = get(axisOption, ['title'])\n      ? deepMix(\n          { title: { style: { text: titleText } } },\n          { title: getAxisTitleOptions(this.view.getTheme(), direction, axisOption.title) },\n          axisOption\n        )\n      : axisOption;\n    const cfg = deepMix(\n      {\n        container,\n        ...getCircleAxisCenterRadius(this.view.getCoordinate()),\n        ticks,\n        verticalFactor: 1,\n        theme: axisThemeCfg,\n      },\n      axisThemeCfg,\n      optionWithTitle\n    );\n    const { animate, animateOption } = this.getAnimateCfg(cfg);\n    cfg.animate = animate;\n    cfg.animateOption = animateOption;\n\n    return cfg;\n  }\n\n  /**\n   * generate circle grid cfg\n   * @param scale\n   * @param axisOption\n   * @param direction\n   * @return circle grid cfg\n   */\n  private getCircleGridCfg(scale: Scale, axisOption: AxisCfg, direction: DIRECTION, dim: string) {\n    if (!showGrid(getAxisThemeCfg(this.view.getTheme(), direction), axisOption)) {\n      return undefined;\n    }\n\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    const gridThemeCfg = getGridThemeCfg(this.view.getTheme(), DIRECTION.RADIUS);\n    const gridCfg = deepMix(\n      {\n        container: get(axisOption, ['top']) ? this.gridForeContainer : this.gridContainer,\n        center: this.view.getCoordinate().getCenter(),\n      },\n      gridThemeCfg,\n      get(axisOption, 'grid'),\n      this.getAnimateCfg(axisOption)\n    );\n    const alignTick = get(gridCfg, 'alignTick', true);\n    const verticalScale = dim === 'x' ? this.view.getYScales()[0] : this.view.getXScale();\n    gridCfg.items = getCircleGridItems(this.view.getCoordinate(), verticalScale, scale, alignTick, dim);\n    // the cfg order should be ensure\n    // grid 动画以 axis 为准\n    return gridCfg;\n  }\n\n  private getId(name: string, key: string): string {\n    const coordinate = this.view.getCoordinate();\n    // 坐标系类型也作为组件的 key\n    return `${name}-${key}-${coordinate.type}`;\n  }\n\n  private getAnimateCfg(cfg) {\n    return {\n      animate: this.view.getOptions().animate && get(cfg, 'animate'), // 如果 view 关闭动画，则不执行动画\n      animateOption:\n        cfg && cfg.animateOption ? deepMix({}, AXIS_DEFAULT_ANIMATE_CFG, cfg.animateOption) : AXIS_DEFAULT_ANIMATE_CFG,\n    };\n  }\n}\n","import { each } from '@antv/util';\nimport { ComponentOption } from '../../interface';\nimport View from '../view';\n\n/** Component controller class type define */\nexport type ControllerCtor<O = any> = new (view: View) => Controller<O>;\n\n/**\n * Component Controller 规范需要定义的基类\n * 1. 规范的 option 输入\n * 2. 统一的信息获取 API\n * 3. 明确定义的组件事件（名称、数据）\n */\nexport abstract class Controller<O = unknown> {\n  /** 是否可见 */\n  public visible: boolean = true;\n  protected view: View;\n  /** option 配置，不同组件有自己不同的配置结构 */\n  protected option: O;\n  /** 所有的 component */\n  protected components: ComponentOption[] = [];\n\n  constructor(view: View) {\n    this.view = view;\n  }\n\n  public abstract get name(): string;\n\n  /**\n   * init the component\n   */\n  public abstract init();\n\n  /**\n   * render the components\n   */\n  public abstract render();\n\n  /**\n   * update the components\n   */\n  // public abstract update();\n\n  /**\n   * do layout\n   */\n  public abstract layout();\n\n  /**\n   * 组件的更新逻辑\n   *  - 根据字段为标识，为每一个组件生成一个 id，放到 option 中\n   *  - 更新的时候按照 id 去做 diff，然后对同的做处理\n   *  - 创建增加的\n   *  - 更新已有的\n   *  - 销毁删除的\n   */\n  public abstract update();\n\n  /**\n   * clear\n   * @param includeOption 是否清空 option 配置项（used in annotation）\n   */\n  public clear(includeOption?: boolean) {\n    // destroy all components\n    each(this.components, (co: ComponentOption) => {\n      co.component.destroy();\n    });\n\n    // clear all component instance\n    this.components = [];\n  }\n\n  /**\n   * destroy the component\n   */\n  public destroy() {\n    this.clear();\n  }\n\n  /**\n   * get all components\n   * @returns components array\n   */\n  public getComponents(): ComponentOption[] {\n    return this.components;\n  }\n\n  /**\n   * change visibility of component\n   * @param visible\n   */\n  public changeVisible(visible: boolean) {\n    if (this.visible === visible) {\n      return;\n    }\n    this.components.forEach((co: ComponentOption) => {\n      if (visible) {\n        co.component.show();\n      } else {\n        co.component.hide();\n      }\n    });\n    this.visible = visible;\n  }\n}\n","import { each, isNil, some } from '@antv/util';\nimport { Coordinate, getCoordinate, Point } from '../../dependents';\nimport { CoordinateOption } from '../../interface';\n\n/**\n * coordinate controller，职责：\n * 1. 创建实例\n * 2. 暂存配置\n */\nexport default class CoordinateController {\n  private option: CoordinateOption;\n  private coordinate: Coordinate;\n\n  constructor(option?: CoordinateOption) {\n    // 设置默认值，并存储配置\n    this.option = this.wrapperOption(option);\n  }\n\n  /**\n   * 更新配置\n   * @param option\n   */\n  public update(option: CoordinateOption) {\n    this.option = this.wrapperOption(option);\n    return this;\n  }\n\n  /**\n   * 是否存在某一个 action\n   * @param actionName\n   */\n  public hasAction(actionName: string) {\n    const { actions } = this.option;\n\n    return some(actions, (action) => action[0] === actionName);\n  }\n  /**\n   * 创建坐标系对象\n   * @param start 起始位置\n   * @param end   结束位置\n   * @return 坐标系实例\n   */\n  public create(start: Point, end: Point) {\n    const { type, cfg } = this.option;\n    const isTheta = type === 'theta';\n\n    // 1. 起始位置\n    const props = {\n      start,\n      end,\n      ...cfg,\n    };\n\n    // 2. 创建实例\n    const C = getCoordinate(isTheta ? 'polar' : type);\n\n    this.coordinate = new C(props);\n\n    // @ts-ignore FIXME coordinate 包问题导致 type 不正确\n    this.coordinate.type = type;\n\n    // 3. 添加默认 action\n    if (isTheta) {\n      // 不存在 transpose，为其自动设置一个 action\n      if (!this.hasAction('transpose')) {\n        this.transpose();\n      }\n    }\n\n    // 4. 执行 action\n    this.execActions();\n\n    return this.coordinate;\n  }\n\n  /**\n   * 更新坐标系对象\n   * @param start 起始位置\n   * @param end   结束位置\n   * @return 坐标系实例\n   */\n  public adjust(start: Point, end: Point) {\n    this.coordinate.update({\n      start,\n      end,\n    });\n\n    // 更新坐标系大小的时候，需要：\n    // 1. 重置 matrix\n    // 2. 重新执行作用于 matrix 的 action\n    this.coordinate.resetMatrix();\n    this.execActions(['scale', 'rotate', 'translate']);\n\n    return this.coordinate;\n  }\n\n  /**\n   * 旋转弧度\n   * @param angle\n   */\n  public rotate(angle: number) {\n    this.option.actions.push(['rotate', angle]);\n    return this;\n  }\n\n  /**\n   * 镜像\n   * @param dim\n   */\n  public reflect(dim: 'x' | 'y') {\n    this.option.actions.push(['reflect', dim]);\n    return this;\n  }\n\n  /**\n   * scale\n   * @param sx\n   * @param sy\n   */\n  public scale(sx: number, sy: number) {\n    this.option.actions.push(['scale', sx, sy]);\n    return this;\n  }\n\n  /**\n   * 对角变换\n   */\n  public transpose() {\n    this.option.actions.push(['transpose']);\n    return this;\n  }\n\n  /**\n   * 获取配置\n   */\n  public getOption(): CoordinateOption {\n    return this.option;\n  }\n\n  /**\n   * 获得 coordinate 实例\n   */\n  public getCoordinate() {\n    return this.coordinate;\n  }\n\n  /**\n   * 包装配置的默认值\n   * @param option\n   */\n  private wrapperOption(option: CoordinateOption): CoordinateOption {\n    return {\n      type: 'rect',\n      actions: [],\n      cfg: {},\n      ...option,\n    };\n  }\n\n  /**\n   * coordinate 实例执行 actions\n   * @params includeActions 如果没有指定，则执行全部，否则，执行指定的 action\n   */\n  private execActions(includeActions?: string[]) {\n    const { actions } = this.option;\n\n    each(actions, (action) => {\n      const [actionName, ...args] = action;\n\n      const shouldExec = isNil(includeActions) ? true : includeActions.includes(actionName);\n\n      if (shouldExec) {\n        this.coordinate[actionName](...args);\n      }\n    });\n  }\n}\n"],"names":["fadeIn","shape","animateCfg","cfg","endState","fillOpacity","isNil","attr","strokeOpacity","opacity","animate","fadeOut","easing","duration","delay","remove","doScaleAnimate","element","coordinate","yMinPoint","type","x","y","start","end","width","getWidth","height","getHeight","isPolar","getCenter","endMatrix","vector","direct","scaledMatrix","applyToMatrix","setMatrix","ext","getMatrix","transformShape","matrix","growInX","growInY","growInXY","ANIMATIONS_MAP","getAnimation","toLowerCase","registerAnimation","animation","pathIn","length","getTotalLength","ratio","lineDashOffset","positionUpdate","toAttrs","scaleInX","box","getBBox","points","get","mappingData","maxX","minX","minY","maxY","scaleInY","getAngle","startPoint","arcPath","getArcParams","startAngle","endAngle","isNumberEqual","Math","PI","_a","getArcStartPoint","path","getArcInfo","arcPaths","filter","command","radius","innerRadius","firstArcPathCommand","lastArcPathCommand","firstIndex","indexOf","lastIndex","firstStartPoint","lastStartPoint","firstStartAngle","firstEndAngle","lastStartAngle","lastEndAngle","min","max","sectorPathUpdate","pathCommands","map","curStartAngle","curEndAngle","preStartAngle","preEndAngle","center","diffStartAngle","diffEndAngle","onFrameStartAngle","onFrameEndAngle","isEqual","getArcPath","getSectorPath","__assign","callback","isFunction","waveIn","getCoordinateClipCfg","startState","clipShape","setClip","attrs","set","doShapeZoom","isGroup","each","getChildren","child","bbox","zoomIn","zoomOut","DEFAULT_ANIMATE_CFG","appear","update","enter","leave","GEOMETRY_ANIMATE_CFG","interval","isRect","isTransposed","line","point","area","polygon","schema","edge","label","GEOMETRY_GROUP_APPEAR_ANIMATION","getDefaultAnimateCfg","elementName","animateType","deepMix","doAnimate","data","FIELD_ORIGIN","parsedAnimateCfg","repeat","parseAnimateConfig","animateFunction","doGroupAppearAnimate","container","geometryType","minYPoint","defaultCfg","stopAnimate","_super","_this","visible","__extends","Base","this","changeVisible","off","destroyed","EE","props","autoFit","padding","appendPadding","_b","renderer","pixelRatio","_c","localRefresh","_d","_e","supportCSSTransform","_f","defaultInteractions","options","limitInPlot","theme","syncViewPadding","ele","isString","document","getElementById","wrapperElement","createDom","appendChild","size","getChartSize","canvas","getEngine","Canvas","parent","backgroundGroup","addGroup","zIndex","GROUP_Z_INDEX","middleGroup","foregroundGroup","debounce","forceFit","updateCanvasStyle","bindAutoFit","initDefaultInteractions","Chart","interactions","interaction","ariaOption","ATTR","removeAttribute","setAttribute","emit","VIEW_LIFE_CIRCLE","changeSize","render","clear","call","aria","destroy","unbindAutoFit","removeDom","style","display","modifyCSS","verticalAlign","window","addEventListener","onResize","removeEventListener","View","ANNOTATIONS_AFTER_RENDER","view","Map","foregroundContainer","getLayer","LAYER","backgroundContainer","option","Object","Annotation","onAfterRender","updated","includes","co","updateOrCreate","getCacheKey","cache","syncCache","updateCache","includeOption","clearComponents","forEach","value","push","getComponents","component","doWhat","done","getOptions","geometries","g","animateOption","once","GEOMETRY_LIFE_CIRCLE","getRootView","Ctor","AnnotationComponent","upperFirst","getAnnotationTheme","getAnnotationCfg","layer","isTop","direction","DIRECTION","COMPONENT_TYPE","extra","annotation","p","xScale","getXScale","yScales","getScalesByDim","position","isArray","xPos","yPos","isNaN","slice","parsePercentPosition","getNormalizedValue","values","key","field","getCoordinate","convert","startIndex","yScale","xField","viewData","getData","startXValue","endXValue","arr","item","idx","parsePosition","xPercent","parseFloat","yPercent","topLeft","getCanvas","o","sp","ep","textPoint","rest","getAngleByPoint","getDistanceToCenter","src","text","filteredData","content","textContent","autoAdjust","coordinateBBox","getCoordinateBBox","_g","start_5","end_5","region","lineLength","getRegionPoints","_h","apply_1","color","shapes_1","addShapes_1","geom","contains","elements","elem","shapes","_j","render_1","restOptions","bind","_k","html_1","parentNode","html","top","offsetX","offsetY","getComponentContainer","getTheme","omit","createAnnotation","init","newCache","find","delete","Controller","OMIT_CFG","AXIS_DEFAULT_ANIMATE_CFG","gridContainer","gridForeContainer","axisContainer","axisForeContainer","Axis","dim","scale","alignTick","getAxisRegion","getCircleAxisCenterRadius","items","getCircleGridItems","getYScales","getLineGridItems","axes","updatedCache","updateXAxes","updateYAxes","has","isIdentity","xAxisOption","getAxisOption","getAxisDirection","axisId","getId","gridId","axis","getLineAxisCfg","createLineAxis","grid","getLineGridCfg","createLineGrid","getCircleAxisCfg","isUndefined","createCircleAxis","getCircleGridCfg","createCircleGrid","yAxisOption","LineAxis","LineGrid","CircleAxis","CircleGrid","axisOption","titleText","getAxisTitleText","axisThemeCfg","getAxisThemeCfg","optionWithTitle","title","getAxisTitleOptions","ticks","getTicks","tick","id","tickValue","name","verticalFactor","getAxisFactorByRegion","getAnimateCfg","isAxisVertical","isVertical","verticalLimitLength","canvasWidth","canvasHeight","showGrid","gridThemeCfg","getGridThemeCfg","gridCfg","isCategory","abs","verticalScale","concat","components","show","hide","wrapperOption","CoordinateController","actionName","actions","some","action","isTheta","C","hasAction","transpose","execActions","resetMatrix","angle","sx","sy","includeActions","args","apply","__spreadArray"],"sourceRoot":""}