{"version":3,"file":"static/js/main~f2af5b2d.f053cc79.js","mappings":"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","sources":["功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/DOT类/截辕/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/DOT类/斩浪破锋/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/DOT类/流血/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/游风飘踪/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/技能类/行云势/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/通用类/有CD技能通用类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/孤锋诀/simulator/通用类/通用DOT类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/simulator/通用类/通用DOT类.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/simulator/DOT类/贯穿/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/simulator/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/simulator/技能类/引风唤灵/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/simulator/技能类/朝仪万汇/index.ts","功能模块/基础设置/公用设置/循环模拟/心法循环模拟/山海心诀/simulator/通用类/有CD技能通用类.ts"],"sourcesContent":["// import 循环主类 from '../main'\nimport 通用DOT类 from '../../通用类/通用DOT类'\n\nclass 截辕 extends 通用DOT类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获得和刷新截辕() {\n    const 当前截辕层数 = this.模拟循环.当前目标buff列表?.['截辕']?.当前层数 || 0\n    this.模拟循环.添加buff?.({\n      名称: '截辕',\n      对象: '目标',\n      新增层数: 1,\n    })\n    const 数据 = this.获取当前DOT数据('截辕')\n    this.更新待生效数据(当前截辕层数, 数据)\n  }\n\n  结算截辕伤害() {\n    const 待生效数据 = this.结算并更新运行数据()\n\n    待生效数据.forEach((数据) => {\n      const 生效时间 = 数据.生效时间 || 0\n      if (生效时间) {\n        this.触发伤害行为('截辕（DOT）', 1, [], 生效时间)\n      }\n    })\n  }\n}\n\nexport default 截辕\n\nexport const 截辕DOT类型 = typeof 截辕\n","// import 循环主类 from '../main'\nimport 通用DOT类 from '../../通用类/通用DOT类'\n\nclass 斩浪破锋 extends 通用DOT类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获得和刷新斩浪破锋() {\n    const 当前斩浪破锋层数 = this.模拟循环.当前目标buff列表?.['斩浪破锋']?.当前层数 || 0\n    const 斩浪破锋最大层数 = this?.模拟循环?.Buff和Dot数据?.斩浪破锋?.最大层数 || 3\n    const 斩浪破锋层数 = Math.min(当前斩浪破锋层数 + 1, 斩浪破锋最大层数)\n\n    this.模拟循环.添加buff?.({\n      名称: '斩浪破锋',\n      对象: '目标',\n      新增层数: 1,\n    })\n    const 数据 = this.获取当前DOT数据('斩浪破锋')\n    this.更新待生效数据(斩浪破锋层数, 数据)\n  }\n\n  结算斩浪破锋伤害() {\n    const 待生效数据 = this.结算并更新运行数据()\n\n    待生效数据.forEach((数据) => {\n      const 层数 = 数据.当前层数 || 1\n      const 生效时间 = 数据.生效时间 || 0\n      if (生效时间) {\n        this.触发伤害行为(斩浪破锋伤害名称枚举[层数], 1, [], 生效时间)\n      }\n    })\n  }\n}\n\nexport default 斩浪破锋\n\nexport const 斩浪破锋DOT类型 = typeof 斩浪破锋\n\nconst 斩浪破锋伤害名称枚举 = {\n  1: '斩浪破锋·一',\n  2: '斩浪破锋·二',\n  3: '斩浪破锋·三',\n}\n","// import 循环主类 from '../main'\nimport 通用DOT类 from '../../通用类/通用DOT类'\n\nclass 流血 extends 通用DOT类 {\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获得和刷新流血() {\n    const 当前破绽层数 = this.模拟循环.当前目标buff列表?.['破绽']?.当前层数 || 0\n    const 当前流血层数 = this.模拟循环.当前目标buff列表?.['流血']?.当前层数 || 0\n    const 流血最大层数 = this?.模拟循环?.Buff和Dot数据?.流血?.最大层数 || 4\n    const 新流血层数 = Math.min(当前流血层数 + 当前破绽层数, 流血最大层数)\n    if (当前破绽层数) {\n      this.模拟循环.添加buff?.({\n        名称: '流血',\n        对象: '目标',\n        新增层数: 当前破绽层数,\n      })\n    }\n    const 数据 = this.获取当前DOT数据('流血')\n    this.更新待生效数据(新流血层数, 数据)\n  }\n\n  结算流血伤害() {\n    const 待生效数据 = this.结算并更新运行数据()\n\n    待生效数据.forEach((数据) => {\n      const 层数 = 数据.当前层数 || 1\n      const 生效时间 = 数据.生效时间 || 0\n      if (生效时间) {\n        this.触发伤害行为(流血伤害名称枚举[层数], 1, [], 生效时间)\n      }\n    })\n  }\n}\n\nexport default 流血\n\nexport const 流血DOT类型 = typeof 流血\n\nconst 流血伤害名称枚举 = {\n  1: '流血·一',\n  2: '流血·二',\n  3: '流血·三',\n  4: '流血·四',\n  5: '流血·五',\n  6: '流血·六',\n}\n","// import 循环主类 from '../main'\nimport { 每秒郭氏帧 } from '../../../constant'\nimport 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 游风飘踪 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '游')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    // 因为横断技能充能信息受奇穴影响，这里做覆盖\n    游风飘踪.技能数据 = 模拟循环?.技能基础数据?.find((item) => item.技能名称 === '游')\n\n    this.初始化技能运行数据(游风飘踪.技能数据)\n  }\n\n  命中() {\n    if (this.模拟循环.校验奇穴是否存在?.('流岚')) {\n      this.模拟循环.添加buff?.({ 名称: '身形', 对象: '自身', 新增层数: 3 })\n    }\n  }\n\n  // 游风在没有被控制状态释放后回返还7秒冷却，这里做特殊处理\n  技能释放后更新运行数据() {\n    const 最大充能层数 = 游风飘踪.技能数据?.最大充能层数 || 1\n    const 是否为充满后第一次释放 = this?.技能运行数据?.当前层数 === 最大充能层数\n\n    const 当前时间 = this?.模拟循环?.当前时间 || 0\n    function 获取帧数(秒) {\n      return 每秒郭氏帧 * 秒\n    }\n    const 原充能时间 = this?.技能运行数据?.计划下次充能时间点 || 0\n    const 原充能时间返还7秒 = Math.max(原充能时间 - 获取帧数(7), 0)\n    const 本次释放后返还是否会导致充能 = 原充能时间返还7秒 <= 当前时间 && 原充能时间 > 当前时间\n\n    const 释放后层数 =\n      本次释放后返还是否会导致充能 && !是否为充满后第一次释放\n        ? this?.技能运行数据?.当前层数\n        : this?.技能运行数据?.当前层数 - 1\n\n    const 当前时间开始计算充能时间点 = 当前时间 + (游风飘踪.技能数据?.技能CD || 0) - 获取帧数(7)\n\n    if (是否为充满后第一次释放) {\n      this?.更新技能运行数据({\n        当前层数: 释放后层数,\n        计划下次充能时间点: 当前时间开始计算充能时间点,\n      })\n    } else {\n      if (释放后层数 <= 0) {\n        const 计算充能时间 =\n          // 已经充能好了\n          原充能时间返还7秒 <= 当前时间 ? 当前时间开始计算充能时间点 : 原充能时间返还7秒\n        this?.更新技能运行数据({\n          当前层数: 释放后层数,\n          计划下次充能时间点: 计算充能时间,\n        })\n      } else {\n        if (当前时间开始计算充能时间点) {\n          this?.更新技能运行数据({\n            当前层数: 释放后层数,\n            计划下次充能时间点: 原充能时间 + (游风飘踪.技能数据?.技能CD || 0) - 获取帧数(7),\n          })\n        } else {\n          this?.更新技能运行数据({\n            当前层数: 释放后层数,\n          })\n        }\n      }\n    }\n  }\n}\n\nexport default 游风飘踪\n\nexport const 游风飘踪类型 = typeof 游风飘踪\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 技能统一类 from '../../通用类/技能统一类'\n\nclass 行云势 extends 技能统一类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '行')\n  static 回复锐意 = 0\n\n  constructor(模拟循环) {\n    super(模拟循环)\n    行云势.回复锐意 =\n      (行云势.技能数据?.回复锐意 || 0) + (this.模拟循环.校验奇穴是否存在?.('驭耀') ? 2 : 0)\n  }\n\n  判断行链触发伤害() {\n    const 行链层数 = this.模拟循环.当前自身buff列表?.['行链']?.当前层数\n    if (!行链层数) {\n      this.行云势造成伤害?.('行云势·一', 1)\n      // 添加两层行链buff\n      this.模拟循环.添加buff?.({ 名称: '行链', 对象: '自身', 新增层数: 2 })\n    } else if (行链层数 > 1) {\n      this.行云势造成伤害?.('行云势·二', 2)\n      // 消耗一层行链buff\n      this.模拟循环.卸除buff?.({ 名称: '行链', 对象: '自身', 卸除层数: 1 })\n    } else if (行链层数 === 1) {\n      this.行云势造成伤害?.('行云势·三', 3)\n      this.模拟循环.卸除buff?.({ 名称: '行链', 对象: '自身', 卸除层数: 2 })\n    }\n  }\n\n  造成伤害() {\n    this.模拟循环.触发潋风携刃?.()\n\n    this.模拟循环.触发避实击虚?.()\n\n    // 判断奇穴存在电逝时，在灭影随风buff下，只会造成行3伤害\n    if (\n      this.模拟循环.校验奇穴是否存在?.('电逝') &&\n      this.模拟循环.当前自身buff列表?.['灭影追风']?.当前层数\n    ) {\n      this.行云势造成伤害('行云势·三', 3)\n      this.模拟循环.卸除buff?.({ 名称: '行链', 对象: '自身', 卸除层数: 2 })\n    } else {\n      this.判断行链触发伤害()\n    }\n  }\n\n  行云势造成伤害(名称, 段数) {\n    this.触发伤害行为(名称)\n    this.保存释放记录(名称, 段数)\n  }\n\n  保存释放记录(名称, 段数) {\n    this.本次释放记录 = {\n      伤害段数: 段数,\n      实际伤害技能: 名称,\n      重要buff列表: this.获取当前重要buff列表(['雨积', '灭影追风', '流岚', '潋风']),\n    }\n  }\n\n  释放后() {\n    this.流云势法触发连亘()\n\n    this.触发回复锐意(行云势.回复锐意, 行云势.技能数据?.技能名称)\n\n    // 去除雨积\n    if (this.模拟循环.当前自身buff列表?.['雨积']?.当前层数) {\n      this.模拟循环.卸除buff?.({ 名称: '雨积', 对象: '自身' })\n    }\n  }\n}\n\nexport default 行云势\n\nexport const 行云势类型 = typeof 行云势\n","import { 技能运行数据类型 } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 有CD技能通用类 extends 技能统一类 {\n  技能运行数据: 技能运行数据类型 = {\n    当前层数: -999,\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  初始化技能运行数据(技能) {\n    if (this.技能运行数据.当前层数 === -999) {\n      this.技能运行数据.当前层数 = 技能?.最大充能层数 || 1\n    }\n  }\n\n  更新技能运行数据(新数据) {\n    this.技能运行数据 = {\n      ...this.技能运行数据,\n      ...新数据,\n    }\n  }\n}\n\nexport default 有CD技能通用类\n","import { DOT待生效数据类型, DOT运行数据类型, DotDTO } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 通用DOT类 extends 技能统一类 {\n  DOT运行数据: DOT运行数据类型 = {\n    待生效数据: [],\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获取当前DOT数据(DOT名称) {\n    const DOT数据: DotDTO = this.模拟循环.Buff和Dot数据?.[DOT名称] as DotDTO\n    return DOT数据\n  }\n\n  更新DOT运行数据(新数据) {\n    this.DOT运行数据 = {\n      ...this.DOT运行数据,\n      ...新数据,\n    }\n  }\n\n  结算并更新运行数据() {\n    const 待生效数据 = this.DOT运行数据?.待生效数据 || []\n    if (待生效数据.length > 0) {\n      const 结算数组: DOT待生效数据类型[] = []\n      const 未结算数组: DOT待生效数据类型[] = []\n      const 当前时间 = this.模拟循环.当前时间 || 0\n      待生效数据.forEach((数据) => {\n        if ((数据.生效时间 || 0) <= 当前时间) {\n          结算数组.push(数据)\n        } else {\n          未结算数组.push(数据)\n        }\n      })\n      this.更新DOT运行数据({\n        待生效数据: 未结算数组,\n      })\n      return 结算数组\n    }\n    return []\n  }\n\n  // 对当前dot进行结算和运行数据\n  更新待生效数据(当前层数: number, DOT数据: DotDTO) {\n    const DOT是否吃加速 = DOT数据.是否吃加速 || true\n    const 加速减少帧 = DOT是否吃加速 ? this.模拟循环.加速等级 || 0 : 0\n    const 实际初次频率 = (DOT数据.初次频率 || DOT数据.伤害频率) - 加速减少帧\n    const 实际伤害频率 = DOT数据.伤害频率 - 加速减少帧\n    const 当前时间 = this.模拟循环.当前时间 || 0\n    const 待生效数据: DOT待生效数据类型[] =\n      this.DOT运行数据?.待生效数据.map((item) => {\n        return { ...item, 当前层数 }\n      }) || []\n\n    // 如果DOT依然存在\n    if (待生效数据?.length > 0) {\n      const 待添加次数 = DOT数据.最大作用次数 - 待生效数据?.length\n      const 原最后一次生效时间 = 待生效数据[待生效数据?.length - 1]?.生效时间 || 0\n      for (let i = 0; i < 待添加次数; i++) {\n        待生效数据.push({\n          当前层数,\n          生效时间: 原最后一次生效时间 + 实际伤害频率 * (i + 1),\n        })\n      }\n    } else {\n      const 待添加次数 = DOT数据.最大作用次数\n      for (let i = 0; i < 待添加次数; i++) {\n        const 生效时间 = 当前时间 + (i === 0 ? 实际初次频率 : 实际伤害频率 * (i + 1))\n        待生效数据.push({\n          当前层数,\n          生效时间,\n        })\n      }\n    }\n    this.更新DOT运行数据({\n      待生效数据: 待生效数据,\n    })\n  }\n}\n\nexport default 通用DOT类\n","import { DOT待生效数据类型, DOT运行数据类型, DotDTO } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 通用DOT类 extends 技能统一类 {\n  DOT运行数据: DOT运行数据类型 = {\n    待生效数据: [],\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获取当前DOT数据(DOT名称) {\n    const DOT数据: DotDTO = this.模拟循环.Buff和Dot数据?.[DOT名称] as DotDTO\n    return DOT数据\n  }\n\n  更新DOT运行数据(新数据) {\n    this.DOT运行数据 = {\n      ...this.DOT运行数据,\n      ...新数据,\n    }\n  }\n\n  结算并更新运行数据(事件时间 = this.模拟循环.当前时间) {\n    const 待生效数据 = this.DOT运行数据?.待生效数据 || []\n    if (待生效数据.length > 0) {\n      const 结算数组: DOT待生效数据类型[] = []\n      const 未结算数组: DOT待生效数据类型[] = []\n      const 当前时间 = 事件时间 || this.模拟循环.当前时间 || 0\n      待生效数据.forEach((数据) => {\n        if ((数据.生效时间 || 0) <= 当前时间) {\n          结算数组.push(数据)\n        } else {\n          未结算数组.push(数据)\n        }\n      })\n      this.更新DOT运行数据({\n        待生效数据: 未结算数组,\n      })\n      return {\n        结算数组,\n        未结算数组,\n      }\n    } else {\n      return {\n        结算数组: [],\n        未结算数组: [],\n      }\n    }\n  }\n\n  // 对当前dot进行结算和运行数据\n  更新待生效数据(当前层数: number, DOT数据: DotDTO) {\n    const DOT是否吃加速 = DOT数据.是否吃加速 !== undefined ? DOT数据.是否吃加速 : true\n    const 加速减少帧 = DOT是否吃加速 ? this.模拟循环.加速等级 || 0 : 0\n    const 实际初次频率 = (DOT数据.初次频率 || DOT数据.伤害频率) - 加速减少帧\n    const 实际伤害频率 = DOT数据.伤害频率 - 加速减少帧\n    const 当前时间 = this.模拟循环.当前时间 || 0\n    const 待生效数据: DOT待生效数据类型[] =\n      // 只更新在刷新buff之后的数据的层数\n      this.DOT运行数据?.待生效数据.map((item) => {\n        if ((item.生效时间 || 0) <= this.模拟循环.当前时间) {\n          return item\n        } else {\n          return { ...item, 当前层数 }\n        }\n      }) || []\n\n    // 如果DOT依然存在\n    if (待生效数据?.length > 0) {\n      const 待添加次数 = DOT数据.最大作用次数 - 待生效数据?.length\n      const 原最后一次生效时间 = 待生效数据[待生效数据?.length - 1]?.生效时间 || 0\n      for (let i = 0; i < 待添加次数; i++) {\n        待生效数据.push({\n          当前层数,\n          生效时间: 原最后一次生效时间 + 实际伤害频率 * (i + 1),\n        })\n      }\n    } else {\n      const 待添加次数 = DOT数据.最大作用次数\n      for (let i = 0; i < 待添加次数; i++) {\n        const 生效时间 = 当前时间 + (i === 0 ? 实际初次频率 : 实际伤害频率 * (i + 1))\n        待生效数据.push({\n          当前层数,\n          生效时间,\n        })\n      }\n    }\n    // this.模拟循环.删除待生效事件队列(`卸除buff-${DOT数据?.名称}`)\n\n    this.更新DOT运行数据({\n      待生效数据: 待生效数据,\n    })\n\n    // 每次刷新和更新时，删除前面的待生效数据\n    this.模拟循环.添加待生效事件队列(\n      [\n        {\n          事件名称: `卸除buff-${DOT数据?.名称}`,\n          事件时间: 待生效数据?.[待生效数据.length - 1]?.生效时间 || 0,\n          事件备注: { buff名称: DOT数据?.名称, buff对象: '目标', 卸除层数: 9999 },\n        },\n      ],\n      true\n    )\n  }\n}\n\nexport default 通用DOT类\n","import 通用DOT类 from '../../通用类/通用DOT类'\n\nclass 贯穿 extends 通用DOT类 {\n  static 审固触发次数 = 0\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  获得和刷新贯穿(来源?) {\n    const 审固 = this.模拟循环.校验奇穴是否存在('审固')\n    // const 贯穿buff数据 = this.模拟循环.当前目标buff列表?.['贯穿']\n    const 当前最后一跳贯穿数据 =\n      this?.DOT运行数据?.待生效数据?.[this?.DOT运行数据?.待生效数据?.length - 1] || {}\n    const 当前贯穿层数 = 当前最后一跳贯穿数据?.当前层数 || 0\n    const 贯穿最大层数 = this?.模拟循环?.Buff和Dot数据?.贯穿?.最大层数 || 6\n    const 新贯穿层数 = Math.min(当前贯穿层数 + 1, 贯穿最大层数)\n    const 原始数据 = this.获取当前DOT数据('贯穿')\n    const 贯穿待生效数据 = [...this.DOT运行数据.待生效数据]\n\n    const 贯穿刷新 = () => {\n      this.模拟循环.添加buff?.({\n        名称: '贯穿',\n        对象: '目标',\n        新增层数: 1,\n        只添加日志: true,\n      })\n      this.更新待生效数据(新贯穿层数, 原始数据)\n    }\n\n    if (审固) {\n      if (当前贯穿层数 === 6 && 贯穿待生效数据 && 贯穿.审固触发次数 < 3) {\n        // 增加审固次数\n        贯穿.审固触发次数 = 贯穿.审固触发次数 + 1\n        // 更新dot序列\n        const 原最后一次生效时间 = 贯穿待生效数据[贯穿待生效数据?.length - 1]?.生效时间 || 0\n        // 审固延长2秒等于延长4跳\n        for (let i = 0; i < 4; i++) {\n          贯穿待生效数据.push({\n            当前层数: 新贯穿层数,\n            生效时间: 原最后一次生效时间 + 原始数据.伤害频率 * (i + 1),\n          })\n        }\n        this.更新DOT运行数据({\n          待生效数据: [...(贯穿待生效数据 || [])],\n        })\n        // 添加审固日志\n        this.模拟循环.添加战斗日志({\n          日志: `触发审固，贯穿延长2秒，本次贯穿已触发${贯穿.审固触发次数}次`,\n          日志类型: '自身buff变动',\n          日志时间: this.模拟循环.当前时间,\n        })\n      } else if ((当前贯穿层数 || 0) < 6) {\n        贯穿刷新()\n        贯穿.审固触发次数 = 0\n      }\n    } else {\n      贯穿刷新()\n    }\n    if (来源) {\n      this.模拟循环.添加战斗日志?.({\n        日志: `${来源}`,\n        日志类型: '上贯穿',\n        日志时间: this.模拟循环.当前时间,\n      })\n    }\n  }\n\n  结算贯穿伤害(事件时间 = this.模拟循环.当前时间) {\n    const { 结算数组: 待生效数据 } = this.结算并更新运行数据(事件时间)\n    待生效数据.forEach((数据) => {\n      const 层数 = 数据.当前层数 || 1\n      const 生效时间 = 数据.生效时间 || 0\n      if (生效时间) {\n        this.触发伤害行为(`贯穿·${[层数]}`, 1, [], 生效时间)\n      }\n    })\n  }\n\n  引爆贯穿逻辑(来源, 类型: '棘矢' | '于狩') {\n    // 获取当前剩余的贯穿\n    let 待生效数据 = [...this.DOT运行数据.待生效数据] || []\n    this.模拟循环.添加战斗日志({\n      日志: `${来源}`,\n      日志类型: `${类型}引爆贯穿`,\n      日志时间: this.模拟循环.当前时间,\n    })\n    if (待生效数据?.length) {\n      const 引爆跳数 = Math.min(待生效数据?.length, 3)\n      const 当前贯穿层数 = 待生效数据[待生效数据?.length - 1]?.当前层数 || 0\n      this.模拟循环.添加战斗日志({\n        日志: `贯穿【${当前贯穿层数}】- 引爆【${引爆跳数}】跳`,\n        日志类型: '技能释放结果',\n        日志时间: this.模拟循环.当前时间,\n      })\n      this.模拟循环.技能造成伤害(`贯穿·${当前贯穿层数 * 引爆跳数}`, 1, [], this.模拟循环.当前时间)\n      // 引爆贯穿，减少3跳\n      if (待生效数据.length > 3) {\n        待生效数据.splice(待生效数据.length - 3)\n      } else {\n        待生效数据 = []\n        this.模拟循环.卸除buff({ 名称: '贯穿', 卸除层数: 6, 只添加日志: true })\n      }\n      // }\n      this.更新DOT运行数据({\n        待生效数据: [...(待生效数据 || [])],\n      })\n    } else {\n      this.模拟循环.添加战斗日志({\n        日志: `${来源}触发【${类型}】失败，当前无可引爆贯穿`,\n        日志类型: '技能释放结果',\n        日志时间: this.模拟循环.当前时间,\n      })\n    }\n  }\n}\n\nexport default 贯穿\n\nexport const 贯穿DOT类型 = typeof 贯穿\n","/**\n * 定义模拟循环类\n */\n\nimport 循环主类 from './main'\nimport type { SimulatorCycleProps } from './main'\n\nconst 模拟循环 = (props: SimulatorCycleProps) => {\n  const 模拟实例 = new 循环主类(props)\n  模拟实例.模拟()\n\n  模拟实例.日志排序()\n\n  const 当前各技能运行状态 = 模拟实例.获取当前各技能的运行状态()\n  const 当前DOT运行状态 = 模拟实例.获取各DOT的运行状态()\n\n  return {\n    最终日志: 模拟实例.战斗日志,\n    当前自身buff列表: 模拟实例.当前自身buff列表,\n    当前目标buff列表: 模拟实例.当前目标buff列表,\n    角色状态信息: 模拟实例.角色状态信息,\n    当前时间: 模拟实例.当前时间,\n    循环执行结果: 模拟实例.循环执行结果,\n    循环异常信息: 模拟实例.循环异常信息,\n    技能释放记录: 模拟实例.技能释放记录,\n    当前各技能运行状态,\n    当前DOT运行状态,\n    当前GCD组: 模拟实例.GCD组,\n    技能基础数据: 模拟实例.技能基础数据,\n    当前宠物数据: 模拟实例.当前宠物数据,\n  }\n}\n\nexport default 模拟循环\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\n\nclass 引风唤灵 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '引风唤灵')\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    this.初始化技能运行数据(引风唤灵.技能数据)\n  }\n\n  释放() {\n    this.模拟循环.召唤宠物()\n\n    if (this.模拟循环.校验奇穴是否存在('诸怀')) {\n      this.模拟循环?.获得承契()\n    }\n  }\n}\n\nexport default 引风唤灵\n\nexport const 引风唤灵类型 = typeof 引风唤灵\n","import 循环模拟技能基础数据 from '../../../constant/skill'\nimport { 根据加速等级获取虚拟加速值 } from '../../utils'\nimport 有CD技能通用类 from '../../通用类/有CD技能通用类'\nimport { 待生效事件 } from '../../type'\nimport { 获取实际帧数 } from '../../../utils'\n\nclass 朝仪万汇 extends 有CD技能通用类 {\n  static 技能数据 = 循环模拟技能基础数据?.find((item) => item.技能名称 === '朝仪万汇')\n  static 作用间隔帧 = 8\n  static 作用次数 = 20\n\n  constructor(模拟循环) {\n    super(模拟循环)\n\n    // 根据加速修改实际读条帧\n    const 循环加速值 = 根据加速等级获取虚拟加速值(this.模拟循环.加速等级)\n    朝仪万汇.作用间隔帧 = 获取实际帧数(8, 循环加速值)\n\n    this.初始化技能运行数据(朝仪万汇.技能数据)\n  }\n\n  获取读条时间() {\n    const 读条持续时间 = 朝仪万汇.作用间隔帧 * 朝仪万汇.作用次数\n    return 读条持续时间\n  }\n\n  读条(读条开始时间) {\n    // 开始读条\n    this.读条朝仪万汇(读条开始时间)\n  }\n\n  读条朝仪万汇(读条开始时间) {\n    const 待生效事件队列: 待生效事件[] = []\n    for (let i = 0; i < 朝仪万汇.作用次数; i++) {\n      待生效事件队列.push({\n        事件名称: '技能读条',\n        事件时间: 读条开始时间 + (i + 1) * 朝仪万汇.作用间隔帧,\n        事件备注: {\n          技能名称: '朝仪万汇',\n        },\n      })\n    }\n    this.模拟循环.添加待生效事件队列(待生效事件队列)\n  }\n\n  // 顺序不可随意更改\n  读条伤害() {\n    this.模拟循环.标鹄判定()\n    this.触发伤害行为('朝仪万汇')\n  }\n}\n\nexport default 朝仪万汇\n\nexport const 朝仪万汇类型 = typeof 朝仪万汇\n","import { 技能运行数据类型 } from '../type'\nimport 技能统一类 from './技能统一类'\n\nclass 有CD技能通用类 extends 技能统一类 {\n  技能运行数据: 技能运行数据类型 = {\n    当前层数: -999,\n  }\n\n  constructor(模拟循环) {\n    super(模拟循环)\n  }\n\n  初始化技能运行数据(技能) {\n    if (this.技能运行数据.当前层数 === -999) {\n      this.技能运行数据.当前层数 = 技能?.最大充能层数 || 1\n    }\n  }\n\n  更新技能运行数据(新数据) {\n    this.技能运行数据 = {\n      ...this.技能运行数据,\n      ...新数据,\n    }\n  }\n}\n\nexport default 有CD技能通用类\n"],"names":["截辕","模拟循环","当前截辕层数","this","当前目标buff列表","当前层数","添加buff","名称","对象","新增层数","数据","获取当前DOT数据","更新待生效数据","结算并更新运行数据","forEach","生效时间","触发伤害行为","通用DOT类","斩浪破锋","当前斩浪破锋层数","斩浪破锋最大层数","Buff和Dot数据","最大层数","斩浪破锋层数","Math","min","层数","斩浪破锋伤害名称枚举","流血","当前破绽层数","当前流血层数","流血最大层数","新流血层数","流血伤害名称枚举","游风飘踪","技能数据","技能基础数据","find","item","技能名称","初始化技能运行数据","校验奇穴是否存在","最大充能层数","是否为充满后第一次释放","技能运行数据","当前时间","获取帧数","秒","每秒郭氏帧","原充能时间","计划下次充能时间点","原充能时间返还7秒","max","释放后层数","当前时间开始计算充能时间点","技能CD","更新技能运行数据","计算充能时间","有CD技能通用类","循环模拟技能基础数据","行云势","回复锐意","行链层数","当前自身buff列表","行云势造成伤害","卸除buff","卸除层数","触发潋风携刃","触发避实击虚","判断行链触发伤害","段数","保存释放记录","本次释放记录","伤害段数","实际伤害技能","重要buff列表","获取当前重要buff列表","流云势法触发连亘","触发回复锐意","技能统一类","技能","新数据","DOT运行数据","待生效数据","DOT名称","length","结算数组","未结算数组","push","更新DOT运行数据","DOT数据","加速减少帧","是否吃加速","加速等级","实际初次频率","初次频率","伤害频率","实际伤害频率","map","待添加次数","最大作用次数","原最后一次生效时间","i","事件时间","undefined","添加待生效事件队列","事件名称","事件备注","buff名称","buff对象","贯穿","来源","审固","当前最后一跳贯穿数据","当前贯穿层数","贯穿最大层数","新贯穿层数","原始数据","贯穿待生效数据","贯穿刷新","只添加日志","审固触发次数","添加战斗日志","日志","日志类型","日志时间","类型","引爆跳数","技能造成伤害","splice","props","模拟实例","循环主类","模拟","日志排序","当前各技能运行状态","获取当前各技能的运行状态","当前DOT运行状态","获取各DOT的运行状态","最终日志","战斗日志","角色状态信息","循环执行结果","循环异常信息","技能释放记录","当前GCD组","GCD组","当前宠物数据","引风唤灵","召唤宠物","获得承契","朝仪万汇","循环加速值","根据加速等级获取虚拟加速值","作用间隔帧","获取实际帧数","作用次数","读条开始时间","读条朝仪万汇","待生效事件队列","标鹄判定"],"sourceRoot":""}